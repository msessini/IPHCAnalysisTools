#include "HCPTauTau.h"
#include "TLorentzVector.h"
#include "Math/Vector4D.h"
#include "Math/Vector3D.h"
#include <cstdlib>
#include "HistoConfig.h"
#include <iostream>
#include "SVFitObject.h"
#include "SimpleFits/FitSoftware/interface/Logger.h"
//#include "SVfitProvider.h"
#include "TLorentzVector.h"
#include <cstdlib>
#include "HistoConfig.h"
#include <iostream>
#include "PDG_Var.h"
#include "SkimConfig.h"
#include "TauSpinerInterface.h"


#include "SimpleFits/FitSoftware/interface/PDGInfo.h"
#include "TVector3.h"
#include "TMath.h"
#include "SimpleFits/FitSoftware/interface/TrackParticle.h"
#include "SimpleFits/FitSoftware/interface/LorentzVectorParticle.h"
#include "SimpleFits/FitSoftware/interface/MultiProngTauSolver.h"
#include "SimpleFits/FitSoftware/interface/ErrorMatrixPropagator.h"
#include "SimpleFits/FitSoftware/interface/TauA1NuConstrainedFitter.h"
#include "SimpleFits/FitSoftware/interface/DiTauConstrainedFitter.h"
#include "SimpleFits/FitSoftware/interface/GlobalEventFit.h"
#include "Objects.h"
#include "TauAnalysis/ClassicSVfit/interface/MeasuredTauLepton.h"
#include "TauAnalysis/ClassicSVfit/interface/FastMTT.h"
#include "TauPolSoftware/TauDecaysInterface/interface/fonction_a1.h"
#include "TauPolSoftware/TauDecaysInterface/interface/SCalculator.h"

#include "BTagCalibrationStandalone.h"
#include "BTagCalibrationStandalone.cpp"


HCPTauTau::HCPTauTau(TString Name_, TString id_):
  Selection(Name_,id_)
  //DataMC_Corr(true,true,false),
  //tauTrgSF("tight")
{
  ChargeSumDummy = -999;
  selMuon_IsoDummy = 999.;
  WorkSpaceFF2016=TFile::Open(((std::string)std::getenv("workdir")+"Code/fake_factors_cpdecay_ipsig1p5_v2/fakefactors_ws_tt_lite_2016.root").c_str(), "READ");
  wFF2016= (RooWorkspace*)gDirectory->Get("w");
  WorkSpaceFF2016->Close();
  BDT=new BDTClassification();
  BDT->PreAnalysis();
}

HCPTauTau::~HCPTauTau(){
  for(unsigned int j=0; j<Npassed.size(); j++){
    Logger(Logger::Info) << "Selection Summary before: "
			 << Npassed.at(j).GetBinContent(1)     << " +/- " << Npassed.at(j).GetBinError(1)     << " after: "
			 << Npassed.at(j).GetBinContent(NCuts+1) << " +/- " << Npassed.at(j).GetBinError(NCuts) << std::endl;
  }
  Logger(Logger::Info) << "complete." << std::endl;
  delete wFF2016;
}

void  HCPTauTau::Configure(){
  // Setup Cut Values
  for(int i=0; i<NCuts;i++){
    cut.push_back(0);
    value.push_back(0);
    pass.push_back(false);
    //if(i==Trigger)             cut.at(Trigger)=1;
    //if(i==Id_and_Kin)          cut.at(Id_and_Kin)=1;
    //if(i==NPairsFound)         cut.at(NPairsFound)=1;
    //if(i==GoodIndex)           cut.at(GoodIndex)=1.;
    if(i==METFiltersAndBTagVeto) cut.at(METFiltersAndBTagVeto)=1.;
    if(i==TausIsolation)       cut.at(TausIsolation)=1.;
    if(i==AgainstEleMu)       cut.at(AgainstEleMu)=1.;
    //if(i==Tau2Isolation)       cut.at(Tau2Isolation)=1.;
    if(i==LeptonVeto)          cut.at(LeptonVeto)=0.;
    if(i==PairCharge)          cut.at(PairCharge)=1.;
    //if(i==PairMass)            cut.at(PairMass)=85.;
    //if(i==MTM)                 cut.at(MTM)=40;
    
  }
  // Setup cut plots
  TString hlabel;
  TString htitle;
  for(int i=0; i<NCuts; i++){
    title.push_back("");
    distindx.push_back(false);
    dist.push_back(std::vector<float>());
    TString c="_Cut_";c+=i;
    // if(i==PrimeVtx){
    //   title.at(i)="Number of Prime Vertices $(N>$";
    //   title.at(i)+=cut.at(PrimeVtx);
    //   title.at(i)+=")";
    //   htitle=title.at(i);
    //   htitle.ReplaceAll("$","");
    //   htitle.ReplaceAll("\\","#");
    //   hlabel="Number of Prime Vertices";
    //   Nminus1.push_back(HConfig.GetTH1D(Name+c+"_Nminus1_PrimeVtx_",htitle,51,-0.5,50.5,hlabel,"Events"));
    //   Nminus0.push_back(HConfig.GetTH1D(Name+c+"_Nminus0_PrimeVtx_",htitle,51,-0.5,50.5,hlabel,"Events"));
    // }
    // if(i==Trigger){
    //   title.at(i)="Trigger+Matching";
    //   hlabel="At least 1 good pair with Trig+Matching";
    //   Nminus1.push_back(HConfig.GetTH1D(Name+c+"_Nminus1_Trigger_",htitle,2,-0.5,1.5,hlabel,"Events"));
    //   Nminus0.push_back(HConfig.GetTH1D(Name+c+"_Nminus0_Trigger_",htitle,2,-0.5,1.5,hlabel,"Events"));
    // }
    // else if(i==Id_and_Kin){
    //   title.at(i)="Id and Kinematic";
    //   hlabel="Number of Event with good particles";
    //   Nminus1.push_back(HConfig.GetTH1D(Name+c+"_Nminus1_Id_and_Kin_",htitle,2,-0.5,1.5,hlabel,"Events"));
    //   Nminus0.push_back(HConfig.GetTH1D(Name+c+"_Nminus0_Id_and_Kin_",htitle,2,-0.5,1.5,hlabel,"Events"));
    // }
    // else if(i==NPairsFound){
    //   title.at(i)="Pairs with good DeltaR";
    //   hlabel="Pairs with good DeltaR";
    //   Nminus1.push_back(HConfig.GetTH1D(Name+c+"_Nminus1_NPairsFound_",htitle,2,-0.5,1.5,hlabel,"Events"));
    //   Nminus0.push_back(HConfig.GetTH1D(Name+c+"_Nminus0_NPairsFound_",htitle,2,-0.5,1.5,hlabel,"Events"));
    // }
    //if(i==GoodIndex){
    //title.at(i)="Valid Index";
    //hlabel="Valid Index";
    //Nminus1.push_back(HConfig.GetTH1D(Name+c+"_Nminus1_GoodIndex_",htitle,2,-0.5,1.5,hlabel,"Events"));
    //Nminus0.push_back(HConfig.GetTH1D(Name+c+"_Nminus0_GoodIndex_",htitle,2,-0.5,1.5,hlabel,"Events"));
    // }
    if(i==METFiltersAndBTagVeto){
      title.at(i)="MET Filters and BTag Veto";
      hlabel="MET Filters and BTag Veto";
      Nminus1.push_back(HConfig.GetTH1D(Name+c+"_Nminus1_METFiltersAndBTagVeto_",htitle,2,-0.5,1.5,hlabel,"Events"));
      Nminus0.push_back(HConfig.GetTH1D(Name+c+"_Nminus0_METFiltersAndBTagVeto_",htitle,2,-0.5,1.5,hlabel,"Events"));
    }
    else if(i==TausIsolation){
      title.at(i)="Taus Isolation";
      hlabel="Isolation of Taus";
      Nminus1.push_back(HConfig.GetTH1D(Name+c+"_Nminus1_TausIsolation_",htitle,2,-0.5,1.5,hlabel,"Events"));
      Nminus0.push_back(HConfig.GetTH1D(Name+c+"_Nminus0_TausIsolation_",htitle,2,-0.5,1.5,hlabel,"Events"));
    }
    else if(i==AgainstEleMu){
      title.at(i)="Against Electrons and Muons";
      hlabel="Against Electrons and Muons";
      Nminus1.push_back(HConfig.GetTH1D(Name+c+"_Nminus1_AgainstEleMu_",htitle,2,-0.5,1.5,hlabel,"Events"));
      Nminus0.push_back(HConfig.GetTH1D(Name+c+"_Nminus0_AgainstEleMu_",htitle,2,-0.5,1.5,hlabel,"Events"));
    }
    // else if(i==Tau2Isolation){
    //   title.at(i)="Tau2 Isolation";
    //   hlabel="Isolation of Tau2";
    //   Nminus1.push_back(HConfig.GetTH1D(Name+c+"_Nminus1_Tau2Isolation_",htitle,2,-0.5,1.5,hlabel,"Events"));
    //   Nminus0.push_back(HConfig.GetTH1D(Name+c+"_Nminus0_Tau2Isolation_",htitle,2,-0.5,1.5,hlabel,"Events"));
    // }
    else if(i==LeptonVeto){
      title.at(i)="Third Lepton Veto";
      hlabel="Third Lepton Veto";
      Nminus1.push_back(HConfig.GetTH1D(Name+c+"_Nminus1_LeptonVeto_",htitle,2,-0.5,1.5,hlabel,"Events"));
      Nminus0.push_back(HConfig.GetTH1D(Name+c+"_Nminus0_LeptonVeto_",htitle,2,-0.5,1.5,hlabel,"Events"));
    }
    else if(i==PairCharge){
      title.at(i)="Pair Charge";
      hlabel="is pair OS";
      Nminus1.push_back(HConfig.GetTH1D(Name+c+"_Nminus1_PairCharge_",htitle,2,-0.5,1.5,hlabel,"Events"));
      Nminus0.push_back(HConfig.GetTH1D(Name+c+"_Nminus0_PairCharge_",htitle,2,-0.5,1.5,hlabel,"Events"));
    }
    // else if(i==PairMass){
    //   title.at(i)="Pair Visible Mass";
    //   hlabel="M(tau-tau)";
    //   Nminus1.push_back(HConfig.GetTH1D(Name+c+"_Nminus1_PairMass_",htitle,30,0,150,hlabel,"Events"));
    //   Nminus0.push_back(HConfig.GetTH1D(Name+c+"_Nminus0_PairMass_",htitle,30,0,150,hlabel,"Events"));
    // }

    /* else if(i==MTM){
       title.at(i)="Missing Transverse Mass";
       hlabel="Missing Transverse Mass";
       Nminus1.push_back(HConfig.GetTH1D(Name+c+"_Nminus1_MTM_",htitle,30,0,100,hlabel,"Events"));
       Nminus0.push_back(HConfig.GetTH1D(Name+c+"_Nminus0_MTM_",htitle,30,0,100,hlabel,"Events"));
       }*/
  }
  // Setup NPassed Histogams
  Npassed=HConfig.GetTH1D(Name+"_NPass","Cut Flow",NCuts+1,-1,NCuts,"Number of Accumulative Cuts Passed","Events");
  
  // Tau1PT=HConfig.GetTH1D(Name+"_Tau1PT","Transverse momentum of selected #tau1 candidate",20,40,140," P_{T}(#tau1), GeV","Events");
  // Tau1E=HConfig.GetTH1D(Name+"_Tau1E","Energy of selected #tau1 candidate",20,35.,140," E(#tau1), GeV","Events");
  // Tau1Mass=HConfig.GetTH1D(Name+"_Tau1Mass","Mass of selected #tau1 candidate",20,0,2.," M(#tau1), GeV","Events");
  // Tau1Phi=HConfig.GetTH1D(Name+"_Tau1Phi","Phi of selected #tau1 candidate",10,-3.5,3.5," #phi(#tau1)","Events");
  // Tau1Eta=HConfig.GetTH1D(Name+"_Tau1Eta","Pseudorapidity tau1",15,-2.7,2.7," #eta(#tau1)","Events");
  // Tau1dz=HConfig.GetTH1D(Name+"_Tau1dz","Tau1 dz",20,-0.02,0.02,"Tau1 dz","Events");
  // Tau1HPSDecayMode=HConfig.GetTH1D(Name+"_Tau1HPSDecayMode","Decay mode of the selected #tau candidate",12,-0.5,11.5,"HPS Mode","Events");
  // Tau1MVADecayMode=HConfig.GetTH1D(Name+"_Tau1MVADecayMode","MVA decay mode of the selected #tau1 candidate",13,-1.5,11.5,"MVA DM","Events");
  // Tau1GenMatch=HConfig.GetTH1D(Name+"_Tau1GenMatch","GenMatch of the selected #tau1 candidate",7,0,7,"GenMatch","Events");
  
  // Tau2PT=HConfig.GetTH1D(Name+"_Tau2PT","Transverse momentum of selected #tau2 candidate",12,40,100," P_{T}(#tau2), GeV","Events");
  // Tau2E=HConfig.GetTH1D(Name+"_Tau2E","Energy of selected #tau2 candidate",20,30.,140," E(#tau2), GeV","Events");
  // Tau2Mass=HConfig.GetTH1D(Name+"_Tau2Mass","Mass of selected #tau2 candidate",20,0,2.," M(#tau2), GeV","Events");
  // Tau2Phi=HConfig.GetTH1D(Name+"_Tau2Phi","Phi of selected #tau2 candidate",10,-3.5,3.5," #phi(#tau2)","Events");
  // Tau2Eta=HConfig.GetTH1D(Name+"_Tau2Eta","Pseudorapidity Tau2",15,-2.7,2.7," #eta(#tau2)","Events");
  // Tau2dz=HConfig.GetTH1D(Name+"_Tau2dz","Tau2dz",20,-0.02,0.02,"Tau2 dz","Events");
  // Tau2HPSDecayMode=HConfig.GetTH1D(Name+"_Tau2HPSDecayMode","Decay mode of the selected #tau candidate",12,-0.5,11.5," HPS Mode ","Events");
  // Tau2MVADecayMode=HConfig.GetTH1D(Name+"_Tau2MVADecayMode","MVA decay mode of the selected #tau2 candidate",13,-1.5,11.5,"MVA DM","Events");
  // Tau2GenMatch=HConfig.GetTH1D(Name+"_Tau2GenMatch","GenMatch of the selected #tau2 candidate",7,0,7,"GenMatch","Events");
  
  // Tau1isolation=HConfig.GetTH1D(Name+"_Tau1isolation","First Tau isolation 0- VVVLoose, 1- VVLoose, 2 VLoose, 3-Loose, 4-Medium, 5-Tight, 6-VTight, 7-VVTight",8,-0.5,7.5,"Discriminator","Events");
  // Tau2isolation=HConfig.GetTH1D(Name+"_Tau2isolation","Second Tau isolation 0- VVVLoose, 1- VVLoose, 2 VLoose, 3-Loose, 4-Medium, 5-Tight, 6-VTight, 7-VVTight",8,-0.5,7.5," Discriminator","Events");
  
  /*
    againstElectronVLooseMVA6_Tau1=HConfig.GetTH1D(Name+"_againstElectronVLooseMVA6_Tau1","againstElectronVLooseMVA6_Tau1",2,-0.5,1.5,"againstElectronVLooseMVA6_Tau1","Events");
    againstElectronLooseMVA6_Tau1=HConfig.GetTH1D(Name+"_againstElectronLooseMVA6_Tau1","againstElectronLooseMVA6_Tau1",2,-0.5,1.5,"againstElectronLooseMVA6_Tau1","Events");
    againstElectronMediumMVA6_Tau1=HConfig.GetTH1D(Name+"_againstElectronMediumMVA6_Tau1","againstElectronMediumMVA6_Tau1",2,-0.5,1.5,"againstElectronMediumMVA6_Tau1","Events");
    againstElectronTightMVA6_Tau1=HConfig.GetTH1D(Name+"_againstElectronTightMVA6_Tau1","againstElectronTightMVA6_Tau1",2,-0.5,1.5,"againstElectronTightMVA6_Tau1","Events");
    againstElectronVTightMVA6_Tau1=HConfig.GetTH1D(Name+"_againstElectronVTightMVA6_Tau1","againstElectronVTightMVA6_Tau1",2,-0.5,1.5,"againstElectronVTightMVA6_Tau1","Events");
    againstMuonLoose3_Tau1=HConfig.GetTH1D(Name+"_againstMuonLoose3_Tau1","againstMuonLoose3_Tau1",2,-0.5,1.5,"againstMuonLoose3_Tau1","Events");
    againstMuonTight3_Tau1=HConfig.GetTH1D(Name+"_againstMuonTight3_Tau1","againstMuonTight3_Tau1",2,-0.5,1.5,"againstMuonTight3_Tau1","Events");
    byCombinedIsolationDeltaBetaCorrRaw3Hits_Tau1=HConfig.GetTH1D(Name+"_byCombinedIsolationDeltaBetaCorrRaw3Hits_Tau1","byCombinedIsolationDeltaBetaCorrRaw3Hits_Tau1",10,0,20,"byCombinedIsolationDeltaBetaCorrRaw3Hits_Tau1","Events");

    againstElectronVLooseMVA6_Tau2=HConfig.GetTH1D(Name+"_againstElectronVLooseMVA6_Tau2","againstElectronVLooseMVA6_Tau2",2,-0.5,1.5,"againstElectronVLooseMVA6_Tau2","Events");
    againstElectronLooseMVA6_Tau2=HConfig.GetTH1D(Name+"_againstElectronLooseMVA6_Tau2","againstElectronLooseMVA6_Tau2",2,-0.5,1.5,"againstElectronLooseMVA6_Tau2","Events");
    againstElectronMediumMVA6_Tau2=HConfig.GetTH1D(Name+"_againstElectronMediumMVA6_Tau2","againstElectronMediumMVA6_Tau2",2,-0.5,1.5,"againstElectronMediumMVA6_Tau2","Events");
    againstElectronTightMVA6_Tau2=HConfig.GetTH1D(Name+"_againstElectronTightMVA6_Tau2","againstElectronTightMVA6_Tau2",2,-0.5,1.5,"againstElectronTightMVA6_Tau2","Events");
    againstElectronVTightMVA6_Tau2=HConfig.GetTH1D(Name+"_againstElectronVTightMVA6_Tau2","againstElectronVTightMVA6_Tau2",2,-0.5,1.5,"againstElectronVTightMVA6_Tau2","Events");
    againstMuonLoose3_Tau2=HConfig.GetTH1D(Name+"_againstMuonLoose3_Tau2","againstMuonLoose3_Tau2",2,-0.5,1.5,"againstMuonLoose3_Tau2","Events");
    againstMuonTight3_Tau2=HConfig.GetTH1D(Name+"_againstMuonTight3_Tau2","againstMuonTight3_Tau2",2,-0.5,1.5,"againstMuonTight3_Tau2","Events");
    byCombinedIsolationDeltaBetaCorrRaw3Hits_Tau2=HConfig.GetTH1D(Name+"_byCombinedIsolationDeltaBetaCorrRaw3Hits_Tau2","byCombinedIsolationDeltaBetaCorrRaw3Hits_Tau2",10,0,20,"byCombinedIsolationDeltaBetaCorrRaw3Hits_Tau2","Events");
  */
  // ExtraLeptonVeto=HConfig.GetTH1D(Name+"_ExtraLeptonVeto","ExtraLeptonVeto",2,-0.5,1.5,"ExtraLeptonVeto","Events");
  
  // QCDShape=HConfig.GetTH1D(Name+"_QCDShape","QCDShape",2,-0.5,1.5,"QCD Shape","");

  // TauTauVisMass=HConfig.GetTH1D(Name+"_TauTauVisMass","Visible invariant mass of a tau pair",23,20,250," M(#tau#tau)_{vis}, GeV","Events");
  // TauTauFullMass=HConfig.GetTH1D(Name+"_TauTauFullMass","Full invariant mass of a tau pair",15,50,300," M(#tau#tau)_{full}, GeV","Events");

  // NQCD=HConfig.GetTH1D(Name+"_NQCD","NQCD",4,0.5,4.5,"NQCD in ABCD","Events");
  // // TauTauFullMass_B=HConfig.GetTH1D(Name+"_TauTauFullMass_B","TauTauFullMass_B",40,0,150,"#tau_h#tau_h SVFit Mass in B","Events");
  // // TauTauFullMass_C=HConfig.GetTH1D(Name+"_TauTauFullMass_C","TauTauFullMass_C",40,0,150,"#tau_h#tau_h SVFit Mass in C","Events");
  // // TauTauFullMass_D=HConfig.GetTH1D(Name+"_TauTauFullMass_D","TauTauFullMass_D",40,0,150,"#tau_h#tau_h SVFit Mass in D","Events");

  // NFFData=HConfig.GetTH1D(Name+"_NFFData","NFFData",1,0.5,1.5,"NFFData","Events");
  //NFFLeadMC=HConfig.GetTH1D(Name+"_NFFLeadMC","NFFLeadMC",1,0.5,1.5,"NFFLeadMC","Events");
  //W_res=HConfig.GetTH1D(Name+"_W_res","W_res",1,0.5,1.5,"W_res","Events");
  // dRTauTau=HConfig.GetTH1D(Name+"_dRTauTau","#Delta R",20,0.,3.5," #Delta R","Events");

  // MET=HConfig.GetTH1D(Name+"_MET","MET",20,0,80,"MET, GeV","Events");
  // METphi=HConfig.GetTH1D(Name+"_METphi","METphi",10,-3.5,3.5,"METphi","Events");
  // PUPPImet=HConfig.GetTH1D(Name+"_PUPPImet","PUPPImet",10,0,75,"PUPPImet, GeV","Events");
  // PUPPImetphi=HConfig.GetTH1D(Name+"_PUPPImetphi","PUPPImetphi",10,-3.5,3.5,"PUPPImetphi","Events");
  // PUPPImetcorr=HConfig.GetTH1D(Name+"_PUPPImetcorr","PUPPImetcorr",20,0,200,"PUPPImetcorr, GeV","Events");
  // PUPPImetcorrphi=HConfig.GetTH1D(Name+"_PUPPImetcorrphi","PUPPImetcorrphi",10,-3.5,3.5,"PUPPImetcorrphi","Events");
  // TransverseMass=HConfig.GetTH1D(Name+"_TransverseMass","TransverseMass, GeV",40,0,110,"TransverseMass","Events");
  
  // NPrimeVtx=HConfig.GetTH1D(Name+"_NPrimeVtx","NPrimeVtx",10,0,50,"N vtx","Events");
  // NPU=HConfig.GetTH1D(Name+"_npu","npu",10,0,50,"N pu","Events");
  // RHO=HConfig.GetTH1D(Name+"_rho","rho",10,0,30,"rho","Events");
  
  // NbJets=HConfig.GetTH1D(Name+"_NbJets","NbJets",5,-0.5,4.5,"N_{jets}","Events");
																			    
  // HPtVis=HConfig.GetTH1D(Name+"_HPtVis","Visible Pt_{H}",40,0,200,"","Events");

  // TauTauVisPT=HConfig.GetTH1D(Name+"_TauTauVisPT","Visible Pt_{#tau#tau}",20,0,100,"Visible Pt_{#tau#tau}","Events");
  // TauTauFullPT=HConfig.GetTH1D(Name+"_TauTauFullPT","Full Pt_{#tau#tau}",20,0,150,"Full Pt_{#tau#tau}","Events");
  // Mjj=HConfig.GetTH1D(Name+"_Mjj","m_{jj}",15,0,1500,"m_{jj} GeV","Events");
  // dijetpt=HConfig.GetTH1D(Name+"_dijetpt","dijetpt",15,0,300,"dijetpt GeV","Events");
  // dijetphi=HConfig.GetTH1D(Name+"_dijetphi","dijetphi",10,-TMath::Pi(),TMath::Pi(),"dijetphi","Events");
  // jdeta=HConfig.GetTH1D(Name+"_jdeta","jdeta",10,0,9,"jdeta","Events");
  // jdphi=HConfig.GetTH1D(Name+"_jdphi","jdphi",10,-TMath::Pi(),TMath::Pi(),"jdphi","Events");
  // jpt_2=HConfig.GetTH1D(Name+"_jpt_2","jpt_2",20,0,200,"jpt_2 GeV","Events");
  // jeta_2=HConfig.GetTH1D(Name+"_jeta_2","jeta_2",20,-4.7,4.7,"jeta_2","Events");
  // jphi_2=HConfig.GetTH1D(Name+"_jphi_2","jphi_2",10,-TMath::Pi(),TMath::Pi(),"jphi_2","Events");
  // jpt_1=HConfig.GetTH1D(Name+"_jpt_1","jpt_1",20,0,500,"jpt_1 GeV","Events");
  // jeta_1=HConfig.GetTH1D(Name+"_jeta_1","jeta_1",20,-4.7,4.7,"jeta_1","Events");
  // jphi_1=HConfig.GetTH1D(Name+"_jphi_1","jphi_1",10,-TMath::Pi(),TMath::Pi(),"jphi_1","Events");

  // ResolPullTauTauFroma1a1MZMomentum=HConfig.GetTH1D(Name+"_ResolPullTauTauFroma1a1MZMomentum","ResolPullTauTauFroma1a1MZMomentum",30,-1,1,"","Events");


  // ResolPullTauminusFroma1a1MZMomentum=HConfig.GetTH1D(Name+"_ResolPullTauminusFroma1a1MZMomentum","ResolPullTauminusFroma1a1MZMomentum",30,-1,1,"","Events");


  // ResolPullTauplusFroma1a1MZMomentum=HConfig.GetTH1D(Name+"_ResolPullTauplusFroma1a1MZMomentum","ResolPullTauplusFroma1a1MZMomentum",30,-1,1,"","Events");



  // ResolPullTauFroma1a1MZMomentum=HConfig.GetTH1D(Name+"_ResolPullTauFroma1a1MZMomentum","ResolPullTauFroma1a1MZMomentum",30,-1,1,"","Events");


  // ResolPullXVtxIna1a1=HConfig.GetTH1D(Name+"_ResolPullXVtxIna1a1","ResolPullXVtxIna1a1",30,-1,1,"","Events");
  // ResolPullYVtxIna1a1=HConfig.GetTH1D(Name+"_ResolPullYVtxIna1a1","ResolPullYVtxIna1a1",30,-1,1,"","Events");
  // ResolPullZVtxIna1a1=HConfig.GetTH1D(Name+"_ResolPullZVtxIna1a1","ResolPullZVtxIna1a1",30,-1,1,"","Events");

  // tauminusa1a1MomentumPairConstraint=HConfig.GetTH1D(Name+"_tauminusa1a1MomentumPairConstraint","tauminusa1a1MomentumPairConstraint",15,0,200,"","Events");       
  // tauplusa1a1MomentumPairConstraint=HConfig.GetTH1D(Name+"_tauplusa1a1MomentumPairConstraint","tauplusa1a1MomentumPairConstraint",15,0,200,"","Events");

  // polarimetricAcopAngle=HConfig.GetTH1D(Name+"_polarimetricAcopAngle","GEF",11,0.,2*TMath::Pi(),"GEF","Events");

  // polarimetricAcopAnglePVRefitNoBS=HConfig.GetTH1D(Name+"_polarimetricAcopAnglePVRefitNoBS","GEF PVRefit no BS constraint Tracks Removed",11,0.,2*TMath::Pi(),"GEF PVRefit no BS constraint Tracks Removed","Events");
  // polarimetricAcopAnglePVRefitBS=HConfig.GetTH1D(Name+"_polarimetricAcopAnglePVRefitBS","GEF PVRefit BS constraint Tracks Removed",11,0.,2*TMath::Pi(),"GEF PVRefit BS constraint Tracks Removed","Events");
  // polarimetricAcopAnglePVRefitNoBSZNominal=HConfig.GetTH1D(Name+"_polarimetricAcopAnglePVRefitNoBSZNominal","GEF PVRefit no BS constraint nominal Z Tracks Removed",11,0.,2*TMath::Pi(),"GEF PVRefit no BS constraint nominal Z Tracks Removed","Events");
  // polarimetricAcopAnglePVRefitBSZNominal=HConfig.GetTH1D(Name+"_polarimetricAcopAnglePVRefitBSZNominal","GEF PVRefit BS constraint nominal Z Tracks Removed",11,0.,2*TMath::Pi(),"GEF PVRefit BS constraint nominal Z Tracks Removed","Events");


  // polarimetricAcopAngleMVADM=HConfig.GetTH1D(Name+"_polarimetricAcopAngleMVADM","PV nominal",11,0.,2*TMath::Pi(),"PV nominal","Events");
  // polarimetricAcopAnglePVRefitBSMVADM=HConfig.GetTH1D(Name+"_polarimetricAcopAnglePVRefitBSMVADM","PV refitted",11,0.,2*TMath::Pi(),"PV refitted","Events");
  // polarimetricAcopAnglePVRefitBSZNominalMVADM=HConfig.GetTH1D(Name+"_polarimetricAcopAnglePVRefitBSZNominalMVADM","PV refitted Z nominal",11,0.,2*TMath::Pi(),"PV refitted Z nominal","Events");
  //   polarimetricAcopAnglePVRefitWithTracksBSMVADM=HConfig.GetTH1D(Name+"_polarimetricAcopAnglePVRefitWithTracksBSMVADM","PV refitted with taus tracks",11,0.,2*TMath::Pi(),"PV refitted with taus tracks","Events");
  // polarimetricAcopAnglePVRefitWithTracksBSZNominalMVADM=HConfig.GetTH1D(Name+"_polarimetricAcopAnglePVRefitWithTracksBSZNominalMVADM","PV refitted with taus tracks Z nominal",11,0.,2*TMath::Pi(),"PV refitted with taus tracks Z nominal","Events");
  
  // polarimetricAcopAngleMVADMHiggs=HConfig.GetTH1D(Name+"_polarimetricAcopAngleMVADMHiggs","PV nominal",11,0.,2*TMath::Pi(),"PV nominal","Events");
  // polarimetricAcopAnglePVRefitBSMVADMHiggs=HConfig.GetTH1D(Name+"_polarimetricAcopAnglePVRefitBSMVADMHiggs","PV refitted",11,0.,2*TMath::Pi(),"PV refitted","Events");
  // polarimetricAcopAnglePVRefitBSZNominalMVADMHiggs=HConfig.GetTH1D(Name+"_polarimetricAcopAnglePVRefitBSZNominalMVADMHiggs","PV refitted Z nominal",11,0.,2*TMath::Pi(),"PV refitted Z nominal","Events");
  // polarimetricAcopAnglePVRefitWithTracksBSMVADMHiggs=HConfig.GetTH1D(Name+"_polarimetricAcopAnglePVRefitWithTracksBSMVADMHiggs","PV refitted with taus tracks",11,0.,2*TMath::Pi(),"PV refitted with taus tracks","Events");
  // polarimetricAcopAnglePVRefitWithTracksBSZNominalMVADMHiggs=HConfig.GetTH1D(Name+"_polarimetricAcopAnglePVRefitWithTracksBSZNominalMVADMHiggs","PV refitted with taus tracks Z nominal",11,0.,2*TMath::Pi(),"PV refitted with taus tracks Z nominal","Events");

  // polarimetricAcopAngleMVADMJetFakes=HConfig.GetTH1D(Name+"_polarimetricAcopAngleMVADMJetFakes","PV nominal",11,0.,2*TMath::Pi(),"PV nominal","Events");
  // polarimetricAcopAnglePVRefitBSMVADMJetFakes=HConfig.GetTH1D(Name+"_polarimetricAcopAnglePVRefitBSMVADMJetFakes","PV refitted",11,0.,2*TMath::Pi(),"PV refitted","Events");
  // polarimetricAcopAnglePVRefitBSZNominalMVADMJetFakes=HConfig.GetTH1D(Name+"_polarimetricAcopAnglePVRefitBSZNominalMVADMJetFakes","PV refitted Z nominal",11,0.,2*TMath::Pi(),"PV refitted Z nominal","Events");
  // polarimetricAcopAnglePVRefitWithTracksBSMVADMJetFakes=HConfig.GetTH1D(Name+"_polarimetricAcopAnglePVRefitWithTracksBSMVADMJetFakes","PV refitted with taus tracks",11,0.,2*TMath::Pi(),"PV refitted with taus tracks","Events");
  // polarimetricAcopAnglePVRefitWithTracksBSZNominalMVADMJetFakes=HConfig.GetTH1D(Name+"_polarimetricAcopAnglePVRefitWithTracksBSZNominalMVADMJetFakes","PV refitted with taus tracks Z nominal",11,0.,2*TMath::Pi(),"PV refitted with taus tracks Z nominal","Events");

  // polarimetricAcopAngleMVADMZTTEmbed=HConfig.GetTH1D(Name+"_polarimetricAcopAngleMVADMZTTEmbed","PV nominal",11,0.,2*TMath::Pi(),"PV nominal","Events");
  // polarimetricAcopAnglePVRefitBSMVADMZTTEmbed=HConfig.GetTH1D(Name+"_polarimetricAcopAnglePVRefitBSMVADMZTTEmbed","PV refitted",11,0.,2*TMath::Pi(),"PV refitted","Events");
  // polarimetricAcopAnglePVRefitBSZNominalMVADMZTTEmbed=HConfig.GetTH1D(Name+"_polarimetricAcopAnglePVRefitBSZNominalMVADMZTTEmbed","PV refitted Z nominal",11,0.,2*TMath::Pi(),"PV refitted Z nominal","Events");
  // polarimetricAcopAnglePVRefitWithTracksBSMVADMZTTEmbed=HConfig.GetTH1D(Name+"_polarimetricAcopAnglePVRefitWithTracksBSMVADMZTTEmbed","PV refitted with taus tracks",11,0.,2*TMath::Pi(),"PV refitted with taus tracks","Events");
  // polarimetricAcopAnglePVRefitWithTracksBSZNominalMVADMZTTEmbed=HConfig.GetTH1D(Name+"_polarimetricAcopAnglePVRefitWithTracksBSZNominalMVADMZTTEmbed","PV refitted with taus tracks Z nominal",11,0.,2*TMath::Pi(),"PV refitted with taus tracks Z nominal","Events");
  

  // polarimetricAcopAnglePVRefitWithTracksBSMVADMHiggsUnrolled0005=HConfig.GetTH1D(Name+"_polarimetricAcopAnglePVRefitWithTracksBSMVADMHiggsUnrolled0005","PV refitted with taus tracks",5,0.,2*TMath::Pi(),"PV refitted with taus tracks","Events");
  // polarimetricAcopAnglePVRefitWithTracksBSMVADMHiggsUnrolled0506=HConfig.GetTH1D(Name+"_polarimetricAcopAnglePVRefitWithTracksBSMVADMHiggsUnrolled0506","PV refitted with taus tracks",5,0.,2*TMath::Pi(),"PV refitted with taus tracks","Events");
  // polarimetricAcopAnglePVRefitWithTracksBSMVADMHiggsUnrolled0607=HConfig.GetTH1D(Name+"_polarimetricAcopAnglePVRefitWithTracksBSMVADMHiggsUnrolled0607","PV refitted with taus tracks",5,0.,2*TMath::Pi(),"PV refitted with taus tracks","Events");
  // polarimetricAcopAnglePVRefitWithTracksBSMVADMHiggsUnrolled0710=HConfig.GetTH1D(Name+"_polarimetricAcopAnglePVRefitWithTracksBSMVADMHiggsUnrolled0710","PV refitted with taus tracks",5,0.,2*TMath::Pi(),"PV refitted with taus tracks","Events");
  
  polarimetricAcopAnglePVRefitWithTracksBSMVADMHiggsUnrolled=HConfig.GetTH1D(Name+"_polarimetricAcopAnglePVRefitWithTracksBSMVADMHiggsUnrolled","PV refitted with taus tracks",20,0.,4*2*TMath::Pi(),"PV refitted with taus tracks","Events");
  
  // polarimetricAcopAnglePVRefitWithTracksBSMVADMJetFakesUnrolled0005=HConfig.GetTH1D(Name+"_polarimetricAcopAnglePVRefitWithTracksBSMVADMJetFakesUnrolled0005","PV refitted with taus tracks",5,0.,2*TMath::Pi(),"PV refitted with taus tracks","Events");
  // polarimetricAcopAnglePVRefitWithTracksBSMVADMJetFakesUnrolled0506=HConfig.GetTH1D(Name+"_polarimetricAcopAnglePVRefitWithTracksBSMVADMJetFakesUnrolled0506","PV refitted with taus tracks",5,0.,2*TMath::Pi(),"PV refitted with taus tracks","Events");
  // polarimetricAcopAnglePVRefitWithTracksBSMVADMJetFakesUnrolled0607=HConfig.GetTH1D(Name+"_polarimetricAcopAnglePVRefitWithTracksBSMVADMJetFakesUnrolled0607","PV refitted with taus tracks",5,0.,2*TMath::Pi(),"PV refitted with taus tracks","Events");
  // polarimetricAcopAnglePVRefitWithTracksBSMVADMJetFakesUnrolled0710=HConfig.GetTH1D(Name+"_polarimetricAcopAnglePVRefitWithTracksBSMVADMJetFakesUnrolled0710","PV refitted with taus tracks",5,0.,2*TMath::Pi(),"PV refitted with taus tracks","Events");
  
  polarimetricAcopAnglePVRefitWithTracksBSMVADMJetFakesUnrolled=HConfig.GetTH1D(Name+"_polarimetricAcopAnglePVRefitWithTracksBSMVADMJetFakesUnrolled","PV refitted with taus tracks",20,0.,4*2*TMath::Pi(),"PV refitted with taus tracks","Events");

  // polarimetricAcopAnglePVRefitWithTracksBSMVADMZTTUnrolled0005=HConfig.GetTH1D(Name+"_polarimetricAcopAnglePVRefitWithTracksBSMVADMZTTUnrolled0005","PV refitted with taus tracks",5,0.,2*TMath::Pi(),"PV refitted with taus tracks","Events");
  // polarimetricAcopAnglePVRefitWithTracksBSMVADMZTTUnrolled0506=HConfig.GetTH1D(Name+"_polarimetricAcopAnglePVRefitWithTracksBSMVADMZTTUnrolled0506","PV refitted with taus tracks",5,0.,2*TMath::Pi(),"PV refitted with taus tracks","Events");
  // polarimetricAcopAnglePVRefitWithTracksBSMVADMZTTUnrolled0607=HConfig.GetTH1D(Name+"_polarimetricAcopAnglePVRefitWithTracksBSMVADMZTTUnrolled0607","PV refitted with taus tracks",5,0.,2*TMath::Pi(),"PV refitted with taus tracks","Events");
  // polarimetricAcopAnglePVRefitWithTracksBSMVADMZTTUnrolled0710=HConfig.GetTH1D(Name+"_polarimetricAcopAnglePVRefitWithTracksBSMVADMZTTUnrolled0710","PV refitted with taus tracks",5,0.,2*TMath::Pi(),"PV refitted with taus tracks","Events");

  polarimetricAcopAnglePVRefitWithTracksBSMVADMZTTUnrolled=HConfig.GetTH1D(Name+"_polarimetricAcopAnglePVRefitWithTracksBSMVADMZTTUnrolled","PV refitted with taus tracks",20,0.,4*2*TMath::Pi(),"PV refitted with taus tracks","Events");
  

  // polarimetricAcopAngleMVADMHiggs=HConfig.GetTH2D(Name+"_polarimetricAcopAngleMVADMHiggs","Higgs MVA score VS acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","MVA score");
  // polarimetricAcopAnglePVRefitBSMVADMHiggs=HConfig.GetTH2D(Name+"_polarimetricAcopAnglePVRefitBSMVADMHiggs","Higgs MVA Score VS acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","MVA score");
  // polarimetricAcopAnglePVRefitBSZNominalMVADMHiggs=HConfig.GetTH2D(Name+"_polarimetricAcopAnglePVRefitBSZNominalMVADMHiggs","Higgs MVA Score VS acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","MVA score");
  polarimetricAcopAnglePVRefitWithTracksBSMVADMHiggs=HConfig.GetTH2D(Name+"_polarimetricAcopAnglePVRefitWithTracksBSMVADMHiggs","Higgs MVA Score VS acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","MVA core");
  //  polarimetricAcopAnglePVRefitWithTracksBSZNominalMVADMHiggs=HConfig.GetTH2D(Name+"_polarimetricAcopAnglePVRefitWithTracksBSZNominalMVADMHiggs","Higgs MVA Score VS acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","MVA score");

  // polarimetricAcopAngleMVADMJetFakes=HConfig.GetTH2D(Name+"_polarimetricAcopAngleMVADMJetFakes","JetFakes MVA score VS acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","MVA score");
  // polarimetricAcopAnglePVRefitBSMVADMJetFakes=HConfig.GetTH2D(Name+"_polarimetricAcopAnglePVRefitBSMVADMJetFakes","JetFakes MVA Score VS acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","MVA score");
  // polarimetricAcopAnglePVRefitBSZNominalMVADMJetFakes=HConfig.GetTH2D(Name+"_polarimetricAcopAnglePVRefitBSZNominalMVADMJetFakes","JetFakes MVA Score VS acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","MVA score");
  polarimetricAcopAnglePVRefitWithTracksBSMVADMJetFakes=HConfig.GetTH2D(Name+"_polarimetricAcopAnglePVRefitWithTracksBSMVADMJetFakes","JetFakes MVA Score VS acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","MVA core");
  //  polarimetricAcopAnglePVRefitWithTracksBSZNominalMVADMJetFakes=HConfig.GetTH2D(Name+"_polarimetricAcopAnglePVRefitWithTracksBSZNominalMVADMJetFakes","JetFakes MVA Score VS acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","MVA score");

  // polarimetricAcopAngleMVADMZTT=HConfig.GetTH2D(Name+"_polarimetricAcopAngleMVADMZTT","ZTT MVA score VS acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","MVA score");
  // polarimetricAcopAnglePVRefitBSMVADMZTT=HConfig.GetTH2D(Name+"_polarimetricAcopAnglePVRefitBSMVADMZTT","ZTT MVA Score VS acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","MVA score");
  // polarimetricAcopAnglePVRefitBSZNominalMVADMZTT=HConfig.GetTH2D(Name+"_polarimetricAcopAnglePVRefitBSZNominalMVADMZTT","ZTT MVA Score VS acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","MVA score");
  polarimetricAcopAnglePVRefitWithTracksBSMVADMZTT=HConfig.GetTH2D(Name+"_polarimetricAcopAnglePVRefitWithTracksBSMVADMZTT","ZTT MVA Score VS acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","MVA core");
  //  polarimetricAcopAnglePVRefitWithTracksBSZNominalMVADMZTT=HConfig.GetTH2D(Name+"_polarimetricAcopAnglePVRefitWithTracksBSZNominalMVADMZTT","ZTT MVA Score VS acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","MVA score");


  // polarimetricAcopAnglePVRefitNoBSMVADM=HConfig.GetTH1D(Name+"_polarimetricAcopAnglePVRefitNoBSMVADM","GEF PVRefit no BS constraint MVADM",11,0.,2*TMath::Pi(),"GEF PVRefit no BS constraint MVADM","Events");
  // polarimetricAcopAnglePVRefitNoBSZNominalMVADM=HConfig.GetTH1D(Name+"_polarimetricAcopAnglePVRefitNoBSZNominalMVADM","GEF PVRefit no BS constraint nominal Z MVADM",11,0.,2*TMath::Pi(),"GEF PVRefit no BS constraint nominal Z MVADM","Events");

  // PVXResol=HConfig.GetTH1D(Name+"_PVXResol","PV_{X} pull",50,-0.1,0.1,"PV_{X} pull","Events");
 
  // PVXNoBSResol=HConfig.GetTH1D(Name+"_PVXNoBSResol","No BS PV_{X}Refit pull",50,-0.1,0.1,"No BS PV_{X}Refit pull","Events");
  
  // PVXBSResol=HConfig.GetTH1D(Name+"_PVXBSResol","BS PV_{X}Refit pull",50,-0.1,0.1,"BS PV_{X}Refit pull","Events");
  
  // PVYResol=HConfig.GetTH1D(Name+"_PVYResol","PV_{Y} pull",50,-0.1,0.1,"PV_{Y} pull","Events");
  
  // PVYNoBSResol=HConfig.GetTH1D(Name+"_PVYNoBSResol","No BS PV_{Y}Refit pull",50,-0.1,0.1,"No BS PV_{Y}Refit pull","Events");
  
  // PVYBSResol=HConfig.GetTH1D(Name+"_PVYBSResol","BS PV_{Y}Refit pull",50,-0.1,0.1,"BS PV_{Y}Refit pull","Events");

  // PVZResol=HConfig.GetTH1D(Name+"_PVZResol","PV_{Z} pull",50,-0.01,0.01,"PV_{Z} pull","Events");

  // PVZNoBSResol=HConfig.GetTH1D(Name+"_PVZNoBSResol","No BS PV_{Z}Refit pull",50,-0.01,0.01,"No BS PV_{Z}Refit pull","Events");

  // PVZBSResol=HConfig.GetTH1D(Name+"_PVZBSResol","BS PV_{Z}Refit pull",50,-0.01,0.01,"BS PV_{Z}Refit pull","Events");
  

  // PVXNoBSOnlyResol=HConfig.GetTH1D(Name+"_PVXNoBSOnlyResol","No BS PV_{X}Refit Only pull",50,-0.1,0.1,"No BS PV_{X}Refit Only pull","Events");
 
  // PVXBSOnlyResol=HConfig.GetTH1D(Name+"_PVXBSOnlyResol","BS PV_{X}Refit Only pull",50,-0.1,0.1,"BS PV_{X}Refit Only pull","Events");

  // PVYNoBSOnlyResol=HConfig.GetTH1D(Name+"_PVYNoBSOnlyResol","No BS PV_{Y}Refit Only pull",50,-0.1,0.1,"No BS PV_{Y}Refit Only pull","Events");
  // PVYBSOnlyResol=HConfig.GetTH1D(Name+"_PVYBSOnlyResol","BS PV_{Y}Refit Only pull",50,-0.1,0.1,"BS PV_{Y}Refit Only pull","Events");

  // PVZNoBSOnlyResol=HConfig.GetTH1D(Name+"_PVZNoBSOnlyResol","No BS PV_{Z}Refit Only pull",50,-0.01,0.01,"No BS PV_{Z}Refit Only pull","Events");

  // PVZBSOnlyResol=HConfig.GetTH1D(Name+"_PVZBSOnlyResol","BS PV_{Z}Refit Only pull",50,-0.01,0.01,"BS PV_{Z}Refit Only pull","Events");
  
  // polarimetricAcopAngleTruthA1=HConfig.GetTH1D(Name+"_polarimetricAcopAngleTruthA1","polarimetricAcopAngleTruthA1",11,0,2*TMath::Pi(),"","Events");

  // polarimetricAcopAngleDecayPlane=HConfig.GetTH1D(Name+"_polarimetricAcopAngleDecayPlane","polarimetricAcopAngleDecayPlane",11,0.,2*TMath::Pi(),"","Events");
  
  // test=HConfig.GetTH1D(Name+"_test","test",11,0.,2*TMath::Pi(),"","Events"); 

  // PurityDM=HConfig.GetTH1D(Name+"_PurityDM","PurityDM",29,0.,29,"","Events");
  // PurityNewMVA=HConfig.GetTH1D(Name+"_PurityNewMVA","PurityNewMVA",29,0.,29,"","Events");

  // TauPxResPull=HConfig.GetTH1D(Name+"_TauPxResPull","TauPxResPull",50,-2,2,"P_{X} pull of #tau","Events");
  // TauPyResPull=HConfig.GetTH1D(Name+"_TauPyResPull","TauPyResPull",50,-2,2,"P_{Y} pull of #tau","Events");
  // TauPzResPull=HConfig.GetTH1D(Name+"_TauPzResPull","TauPzResPull",50,-2,2,"P_{Z} pull of #tau","Events");

  // TauPxResPullMVA=HConfig.GetTH1D(Name+"_TauPxResPullMVA","TauPxResPullMVA",50,-2,2,"P_{X} pull of #tau","Events");
  // TauPyResPullMVA=HConfig.GetTH1D(Name+"_TauPyResPullMVA","TauPyResPullMVA",50,-2,2,"P_{Y} pull of #tau","Events");
  // TauPzResPullMVA=HConfig.GetTH1D(Name+"_TauPzResPullMVA","TauPzResPullMVA",50,-2,2,"P_{Z} pull of #tau","Events");

  //HiggsBDTScore=HConfig.GetTH1D(Name+"_HiggsBDTScore","HiggsBDTScore",7,0.3,1,"MVA Score","Events");
  //JetFakesBDTScore=HConfig.GetTH1D(Name+"_JetFakesBDTScore","JetFakesBDTScore",7,0.3,1,"MVA Score","Events");
  //ZTTBDTScore=HConfig.GetTH1D(Name+"_ZTTBDTScore","ZTTBDTScore",7,0.3,1,"MVA Score","Events");


  // PUPPImetcorrQCDMC=HConfig.GetTH1D(Name+"_PUPPImetcorrQCDMC","PUPPImetcorrQCDMC",20,0,200,"PUPPImetcorr, GeV","Events");
  // PUPPImetcorrphiQCDMC=HConfig.GetTH1D(Name+"_PUPPImetcorrphiQCDMC","PUPPImetcorrphi",10,-3.5,3.5,"PUPPImetcorrphi","Events");
  
  // Tau1PTQCDMC=HConfig.GetTH1D(Name+"_Tau1PTQCDMC","Transverse momentum of selected #tau1 candidate",20,40,140," P_{T}(#tau1), GeV","Events");
  // Tau1EQCDMC=HConfig.GetTH1D(Name+"_Tau1EQCDMC","Energy of selected #tau1 candidate",20,35.,140," E(#tau1), GeV","Events");
  // Tau1MassQCDMC=HConfig.GetTH1D(Name+"_Tau1MassQCDMC","Mass of selected #tau1 candidate",20,0,2.," M(#tau1), GeV","Events");
  // Tau1PhiQCDMC=HConfig.GetTH1D(Name+"_Tau1PhiQCDMC","Phi of selected #tau1 candidate",10,-3.5,3.5," #phi(#tau1)","Events");
  // Tau1EtaQCDMC=HConfig.GetTH1D(Name+"_Tau1EtaQCDMC","Pseudorapidity tau1",15,-2.7,2.7," #eta(#tau1)","Events");
  // Tau1dzQCDMC=HConfig.GetTH1D(Name+"_Tau1dzQCDMC","Tau1 dz",20,-0.02,0.02,"Tau1 dz","Events");
  // Tau1HPSDecayModeQCDMC=HConfig.GetTH1D(Name+"_Tau1HPSDecayModeQCDMC","Decay mode of the selected #tau candidate",12,-0.5,11.5,"HPS Mode","Events");
  // Tau1MVADecayModeQCDMC=HConfig.GetTH1D(Name+"_Tau1MVADecayModeQCDMC","MVA decay mode of the selected #tau1 candidate",13,-1.5,11.5,"MVA DM","Events");
  // Tau1GenMatchQCDMC=HConfig.GetTH1D(Name+"_Tau1GenMatchQCDMC","GenMatch of the selected #tau1 candidate",7,0,7,"GenMatch","Events");
  
  // Tau2PTQCDMC=HConfig.GetTH1D(Name+"_Tau2PTQCDMC","Transverse momentum of selected #tau2 candidate",12,40,100," P_{T}(#tau2), GeV","Events");
  // Tau2EQCDMC=HConfig.GetTH1D(Name+"_Tau2EQCDMC","Energy of selected #tau2 candidate",20,30.,140," E(#tau2), GeV","Events");
  // Tau2MassQCDMC=HConfig.GetTH1D(Name+"_Tau2MassQCDMC","Mass of selected #tau2 candidate",20,0,2.," M(#tau2), GeV","Events");
  // Tau2PhiQCDMC=HConfig.GetTH1D(Name+"_Tau2PhiQCDMC","Phi of selected #tau2 candidate",10,-3.5,3.5," #phi(#tau2)","Events");
  // Tau2EtaQCDMC=HConfig.GetTH1D(Name+"_Tau2EtaQCDMC","Pseudorapidity Tau2",15,-2.7,2.7," #eta(#tau2)","Events");
  // Tau2dzQCDMC=HConfig.GetTH1D(Name+"_Tau2dzQCDMC","Tau2dz",20,-0.02,0.02,"Tau2 dz","Events");
  // Tau2HPSDecayModeQCDMC=HConfig.GetTH1D(Name+"_Tau2HPSDecayModeQCDMC","Decay mode of the selected #tau candidate",12,-0.5,11.5," HPS Mode ","Events");
  // Tau2MVADecayModeQCDMC=HConfig.GetTH1D(Name+"_Tau2MVADecayModeQCDMC","MVA decay mode of the selected #tau2 candidate",13,-1.5,11.5,"MVA DM","Events");
  // Tau2GenMatchQCDMC=HConfig.GetTH1D(Name+"_Tau2GenMatchQCDMC","GenMatch of the selected #tau2 candidate",7,0,7,"GenMatch","Events");
  
  // NbJetsQCDMC=HConfig.GetTH1D(Name+"_NbJetsQCDMC","NbJetsQCDMC",5,-0.5,4.5,"N_{jets}","Events");
  // TauTauVisMassQCDMC=HConfig.GetTH1D(Name+"_TauTauVisMassQCDMC","Visible invariant mass of a tau pair",23,20,250," M(#tau#tau)_{vis}, GeV","Events");
  // TauTauFullMassQCDMC=HConfig.GetTH1D(Name+"_TauTauFullMassQCDMC","Full invariant mass of a tau pair",15,50,300," M(#tau#tau)_{full}, GeV","Events");
  // TauTauVisPTQCDMC=HConfig.GetTH1D(Name+"_TauTauVisPTQCDMC","Visible Pt_{#tau#tau}",20,0,100,"Visible Pt_{#tau#tau}","Events");
  // TauTauFullPTQCDMC=HConfig.GetTH1D(Name+"_TauTauFullPTQCDMC","Full Pt_{#tau#tau}",20,0,150,"Full Pt_{#tau#tau}","Events");
  // MjjQCDMC=HConfig.GetTH1D(Name+"_MjjQCDMC","m_{jj}",15,0,1500,"m_{jj} GeV","Events");
  // dijetptQCDMC=HConfig.GetTH1D(Name+"_dijetptQCDMC","dijetptQCDMC",15,0,300,"dijetpt GeV","Events");
  // dijetphiQCDMC=HConfig.GetTH1D(Name+"_dijetphiQCDMC","dijetphiQCDMC",10,-TMath::Pi(),TMath::Pi(),"dijetphi","Events");
  // jdetaQCDMC=HConfig.GetTH1D(Name+"_jdetaQCDMC","jdetaQCDMC",10,0,9,"jdeta","Events");
  // jdphiQCDMC=HConfig.GetTH1D(Name+"_jdphiQCDMC","jdphiQCDMC",10,-TMath::Pi(),TMath::Pi(),"jdphi","Events");
  // jpt_2QCDMC=HConfig.GetTH1D(Name+"_jpt_2QCDMC","jpt_2QCDMC",20,0,200,"jpt_2 GeV","Events");
  // jeta_2QCDMC=HConfig.GetTH1D(Name+"_jeta_2QCDMC","jeta_2QCDMC",20,-4.7,4.7,"jeta_2","Events");
  // jphi_2QCDMC=HConfig.GetTH1D(Name+"_jphi_2QCDMC","jphi_2QCDMC",10,-TMath::Pi(),TMath::Pi(),"jphi_2","Events");
  // jpt_1QCDMC=HConfig.GetTH1D(Name+"_jpt_1QCDMC","jpt_1QCDMC",20,0,500,"jpt_1 GeV","Events");
  // jeta_1QCDMC=HConfig.GetTH1D(Name+"_jeta_1QCDMC","jeta_1QCDMC",20,-4.7,4.7,"jeta_1","Events");
  // jphi_1QCDMC=HConfig.GetTH1D(Name+"_jphi_1QCDMC","jphi_1QCDMC",10,-TMath::Pi(),TMath::Pi(),"jphi_1","Events");

  //HiggsBDTScoreQCDMC=HConfig.GetTH1D(Name+"_HiggsBDTScoreQCDMC","HiggsBDTScoreQCDMC",7,0.3,1,"MVA Score","Events");
  //JetFakesBDTScoreQCDMC=HConfig.GetTH1D(Name+"_JetFakesBDTScoreQCDMC","JetFakesBDTScoreQCDMC",7,0.3,1,"MVA Score","Events");
  //ZTTBDTScoreQCDMC=HConfig.GetTH1D(Name+"_ZTTBDTScoreQCDMC","ZTTBDTScoreQCDMC",7,0.3,1,"MVA Score","Events");

  // Tau1PTa1a1=HConfig.GetTH1D(Name+"_Tau1PTa1a1","Transverse momentum of selected #tau1 candidate",10,40,140," P_{T}(#tau1), GeV","Events");
  // Tau1Ea1a1=HConfig.GetTH1D(Name+"_Tau1Ea1a1","Energy of selected #tau1 candidate",10,35.,140," E(#tau1), GeV","Events");
  // Tau1Massa1a1=HConfig.GetTH1D(Name+"_Tau1Massa1a1","Mass of selected #tau1 candidate",20,0,2.," M(#tau1), GeV","Events");
  // Tau1Phia1a1=HConfig.GetTH1D(Name+"_Tau1Phia1a1","Phi of selected #tau1 candidate",10,-3.5,3.5," #phi(#tau1)","Events");
  // Tau1Etaa1a1=HConfig.GetTH1D(Name+"_Tau1Etaa1a1","Pseudorapidity tau1",15,-2.7,2.7," #eta(#tau1)","Events");
  // Tau1dza1a1=HConfig.GetTH1D(Name+"_Tau1dza1a1","Tau1 dz",20,-0.02,0.02,"Tau1 dz","Events");
  
  // Tau2PTa1a1=HConfig.GetTH1D(Name+"_Tau2PTa1a1","Transverse momentum of selected #tau2 candidate",12,40,100," P_{T}(#tau2), GeV","Events");
  // Tau2Ea1a1=HConfig.GetTH1D(Name+"_Tau2Ea1a1","Energy of selected #tau2 candidate",10,30.,140," E(#tau2), GeV","Events");
  // Tau2Massa1a1=HConfig.GetTH1D(Name+"_Tau2Massa1a1","Mass of selected #tau2 candidate",20,0,2.," M(#tau2), GeV","Events");
  // Tau2Phia1a1=HConfig.GetTH1D(Name+"_Tau2Phia1a1","Phi of selected #tau2 candidate",10,-3.5,3.5," #phi(#tau2)","Events");
  // Tau2Etaa1a1=HConfig.GetTH1D(Name+"_Tau2Etaa1a1","Pseudorapidity Tau2",15,-2.7,2.7," #eta(#tau2)","Events");
  // Tau2dza1a1=HConfig.GetTH1D(Name+"_Tau2dza1a1","Tau2dz",20,-0.02,0.02,"Tau2 dz","Events");

  // TauTauVisMassa1a1=HConfig.GetTH1D(Name+"_TauTauVisMassa1a1","Visible invariant mass of a tau pair",15,20,250," M(#tau#tau)_{vis}, GeV","Events");
  // TauTauFullMassa1a1=HConfig.GetTH1D(Name+"_TauTauFullMassa1a1","Full invariant mass of a tau pair",15,50,300," M(#tau#tau)_{full}, GeV","Events");
  // PUPPImetcorra1a1=HConfig.GetTH1D(Name+"_PUPPImetcorra1a1","PUPPImetcorr",7,0.3,100,"PUPPImetcorr, GeV","Events");
  // PUPPImetcorrphia1a1=HConfig.GetTH1D(Name+"_PUPPImetcorrphia1a1","PUPPImetcorrphi",10,-3.5,3.5,"PUPPImetcorrphi","Events");
  // NbJetsa1a1=HConfig.GetTH1D(Name+"_NbJetsa1a1","NbJets",5,-0.5,4.5,"N_{jets}","Events");
  // TauTauVisPTa1a1=HConfig.GetTH1D(Name+"_TauTauVisPTa1a1","Visible Pt_{#tau#tau}",20,0,100,"Visible Pt_{#tau#tau}","Events");
  // TauTauFullPTa1a1=HConfig.GetTH1D(Name+"_TauTauFullPTa1a1","Full Pt_{#tau#tau}",20,0,150,"Full Pt_{#tau#tau}","Events");
  // Mjja1a1=HConfig.GetTH1D(Name+"_Mjja1a1","m_{jj}",10,0,800,"m_{jj} GeV","Events");
  // dijetpta1a1=HConfig.GetTH1D(Name+"_dijetpta1a1","dijetpt",10,0,200,"dijetpt GeV","Events");
  // dijetphia1a1=HConfig.GetTH1D(Name+"_dijetphia1a1","dijetphi",10,-TMath::Pi(),TMath::Pi(),"dijetphi","Events");
  // jdetaa1a1=HConfig.GetTH1D(Name+"_jdetaa1a1","jdeta",7,0,7,"jdeta","Events");
  // jdphia1a1=HConfig.GetTH1D(Name+"_jdphia1a1","jdphi",10,-TMath::Pi(),TMath::Pi(),"jdphi","Events");
  // jpt_2a1a1=HConfig.GetTH1D(Name+"_jpt_2a1a1","jpt_2",7,0.3,100,"jpt_2 GeV","Events");
  // jeta_2a1a1=HConfig.GetTH1D(Name+"_jeta_2a1a1","jeta_2",10,-4.7,4.7,"jeta_2","Events");
  // jphi_2a1a1=HConfig.GetTH1D(Name+"_jphi_2a1a1","jphi_2",10,-TMath::Pi(),TMath::Pi(),"jphi_2","Events");
  // jpt_1a1a1=HConfig.GetTH1D(Name+"_jpt_1a1a1","jpt_1",10,0,250,"jpt_1 GeV","Events");
  // jeta_1a1a1=HConfig.GetTH1D(Name+"_jeta_1a1a1","jeta_1",10,-4.7,4.7,"jeta_1","Events");
  // jphi_1a1a1=HConfig.GetTH1D(Name+"_jphi_1a1a1","jphi_1",10,-TMath::Pi(),TMath::Pi(),"jphi_1","Events");
  
  HiggsBDTScorea1a1=HConfig.GetTH1D(Name+"_HiggsBDTScorea1a1","HiggsBDTScore",7,0.3,1,"MVA Score","Events");
  JetFakesBDTScorea1a1=HConfig.GetTH1D(Name+"_JetFakesBDTScorea1a1","JetFakesBDTScore",7,0.3,1,"MVA Score","Events");
  ZTTBDTScorea1a1=HConfig.GetTH1D(Name+"_ZTTBDTScorea1a1","ZTTBDTScore",7,0.3,1,"MVA Score","Events");

  // Tau1PTa1a1QCDMC=HConfig.GetTH1D(Name+"_Tau1PTa1a1QCDMC","Transverse momentum of selected #tau1 candidate",10,40,140," P_{T}(#tau1), GeV","Events");
  // Tau1Ea1a1QCDMC=HConfig.GetTH1D(Name+"_Tau1Ea1a1QCDMC","Energy of selected #tau1 candidate",10,35.,140," E(#tau1), GeV","Events");
  // Tau1Massa1a1QCDMC=HConfig.GetTH1D(Name+"_Tau1Massa1a1QCDMC","Mass of selected #tau1 candidate",20,0,2.," M(#tau1), GeV","Events");
  // Tau1Phia1a1QCDMC=HConfig.GetTH1D(Name+"_Tau1Phia1a1QCDMC","Phi of selected #tau1 candidate",10,-3.5,3.5," #phi(#tau1)","Events");
  // Tau1Etaa1a1QCDMC=HConfig.GetTH1D(Name+"_Tau1Etaa1a1QCDMC","Pseudorapidity tau1",15,-2.7,2.7," #eta(#tau1)","Events");
  // Tau1dza1a1QCDMC=HConfig.GetTH1D(Name+"_Tau1dza1a1QCDMC","Tau1 dz",20,-0.02,0.02,"Tau1 dz","Events");
  
  // Tau2PTa1a1QCDMC=HConfig.GetTH1D(Name+"_Tau2PTa1a1QCDMC","Transverse momentum of selected #tau2 candidate",12,40,100," P_{T}(#tau2), GeV","Events");
  // Tau2Ea1a1QCDMC=HConfig.GetTH1D(Name+"_Tau2Ea1a1QCDMC","Energy of selected #tau2 candidate",10,30.,140," E(#tau2), GeV","Events");
  // Tau2Massa1a1QCDMC=HConfig.GetTH1D(Name+"_Tau2Massa1a1QCDMC","Mass of selected #tau2 candidate",20,0,2.," M(#tau2), GeV","Events");
  // Tau2Phia1a1QCDMC=HConfig.GetTH1D(Name+"_Tau2Phia1a1QCDMC","Phi of selected #tau2 candidate",10,-3.5,3.5," #phi(#tau2)","Events");
  // Tau2Etaa1a1QCDMC=HConfig.GetTH1D(Name+"_Tau2Etaa1a1QCDMC","Pseudorapidity Tau2",15,-2.7,2.7," #eta(#tau2)","Events");
  // Tau2dza1a1QCDMC=HConfig.GetTH1D(Name+"_Tau2dza1a1QCDMC","Tau2dz",20,-0.02,0.02,"Tau2 dz","Events");

  // TauTauVisMassa1a1QCDMC=HConfig.GetTH1D(Name+"_TauTauVisMassa1a1QCDMC","Visible invariant mass of a tau pair",15,20,250," M(#tau#tau)_{vis}, GeV","Events");
  // TauTauFullMassa1a1QCDMC=HConfig.GetTH1D(Name+"_TauTauFullMassa1a1QCDMC","Full invariant mass of a tau pair",15,50,300," M(#tau#tau)_{full}, GeV","Events");
  // PUPPImetcorra1a1QCDMC=HConfig.GetTH1D(Name+"_PUPPImetcorra1a1QCDMC","PUPPImetcorr",7,0.3,100,"PUPPImetcorr, GeV","Events");
  // PUPPImetcorrphia1a1QCDMC=HConfig.GetTH1D(Name+"_PUPPImetcorrphia1a1QCDMC","PUPPImetcorrphi",10,-3.5,3.5,"PUPPImetcorrphi","Events");
  // NbJetsa1a1QCDMC=HConfig.GetTH1D(Name+"_NbJetsa1a1QCDMC","NbJets",5,-0.5,4.5,"N_{jets}","Events");
  // TauTauVisPTa1a1QCDMC=HConfig.GetTH1D(Name+"_TauTauVisPTa1a1QCDMC","Visible Pt_{#tau#tau}",20,0,100,"Visible Pt_{#tau#tau}","Events");
  // TauTauFullPTa1a1QCDMC=HConfig.GetTH1D(Name+"_TauTauFullPTa1a1QCDMC","Full Pt_{#tau#tau}",20,0,150,"Full Pt_{#tau#tau}","Events");
  // Mjja1a1QCDMC=HConfig.GetTH1D(Name+"_Mjja1a1QCDMC","m_{jj}",10,0,800,"m_{jj} GeV","Events");
  // dijetpta1a1QCDMC=HConfig.GetTH1D(Name+"_dijetpta1a1QCDMC","dijetpt",10,0,200,"dijetpt GeV","Events");
  // dijetphia1a1QCDMC=HConfig.GetTH1D(Name+"_dijetphia1a1QCDMC","dijetphi",10,-TMath::Pi(),TMath::Pi(),"dijetphi","Events");
  // jdetaa1a1QCDMC=HConfig.GetTH1D(Name+"_jdetaa1a1QCDMC","jdeta",7,0,7,"jdeta","Events");
  // jdphia1a1QCDMC=HConfig.GetTH1D(Name+"_jdphia1a1QCDMC","jdphi",10,-TMath::Pi(),TMath::Pi(),"jdphi","Events");
  // jpt_2a1a1QCDMC=HConfig.GetTH1D(Name+"_jpt_2a1a1QCDMC","jpt_2",7,0.3,100,"jpt_2 GeV","Events");
  // jeta_2a1a1QCDMC=HConfig.GetTH1D(Name+"_jeta_2a1a1QCDMC","jeta_2",10,-4.7,4.7,"jeta_2","Events");
  // jphi_2a1a1QCDMC=HConfig.GetTH1D(Name+"_jphi_2a1a1QCDMC","jphi_2",10,-TMath::Pi(),TMath::Pi(),"jphi_2","Events");
  // jpt_1a1a1QCDMC=HConfig.GetTH1D(Name+"_jpt_1a1a1QCDMC","jpt_1",10,0,250,"jpt_1 GeV","Events");
  // jeta_1a1a1QCDMC=HConfig.GetTH1D(Name+"_jeta_1a1a1QCDMC","jeta_1",10,-4.7,4.7,"jeta_1","Events");
  // jphi_1a1a1QCDMC=HConfig.GetTH1D(Name+"_jphi_1a1a1QCDMC","jphi_1",10,-TMath::Pi(),TMath::Pi(),"jphi_1","Events");
  
  HiggsBDTScorea1a1QCDMC=HConfig.GetTH1D(Name+"_HiggsBDTScorea1a1QCDMC","HiggsBDTScore",7,0.3,1,"MVA Score","Events");
  JetFakesBDTScorea1a1QCDMC=HConfig.GetTH1D(Name+"_JetFakesBDTScorea1a1QCDMC","JetFakesBDTScore",7,0.3,1,"MVA Score","Events");
  ZTTBDTScorea1a1QCDMC=HConfig.GetTH1D(Name+"_ZTTBDTScorea1a1QCDMC","ZTTBDTScore",7,0.3,1,"MVA Score","Events");
  
  // polarimetricAcopAngleMVADMQCDMC=HConfig.GetTH1D(Name+"_polarimetricAcopAngleMVADMQCDMC","PV nominal",11,0.,2*TMath::Pi(),"PV nominal","Events");
  // polarimetricAcopAnglePVRefitBSMVADMQCDMC=HConfig.GetTH1D(Name+"_polarimetricAcopAnglePVRefitBSMVADMQCDMC","PV refitted",11,0.,2*TMath::Pi(),"PV refitted","Events");
  // polarimetricAcopAnglePVRefitBSZNominalMVADMQCDMC=HConfig.GetTH1D(Name+"_polarimetricAcopAnglePVRefitBSZNominalMVADMQCDMC","PV refitted Z nominal",11,0.,2*TMath::Pi(),"PV refitted Z nominal","Events");
  //polarimetricAcopAnglePVRefitWithTracksBSMVADMQCDMC=HConfig.GetTH1D(Name+"_polarimetricAcopAnglePVRefitWithTracksBSMVADMQCDMC","PV refitted with taus tracks",11,0.,2*TMath::Pi(),"PV refitted with taus tracks","Events");
  //polarimetricAcopAnglePVRefitWithTracksBSZNominalMVADMQCDMC=HConfig.GetTH1D(Name+"_polarimetricAcopAnglePVRefitWithTracksBSZNominalMVADMQCDMC","PV refitted with taus tracks Z nominal",11,0.,2*TMath::Pi(),"PV refitted with taus tracks Z nominal","Events");


  // polarimetricAcopAngleMVADMHiggsQCDMC=HConfig.GetTH1D(Name+"_polarimetricAcopAngleMVADMHiggsQCDMC","PV nominal",11,0.,2*TMath::Pi(),"PV nominal","Events");
  // polarimetricAcopAnglePVRefitBSMVADMHiggsQCDMC=HConfig.GetTH1D(Name+"_polarimetricAcopAnglePVRefitBSMVADMHiggsQCDMC","PV refitted",11,0.,2*TMath::Pi(),"PV refitted","Events");
  // polarimetricAcopAnglePVRefitBSZNominalMVADMHiggsQCDMC=HConfig.GetTH1D(Name+"_polarimetricAcopAnglePVRefitBSZNominalMVADMHiggsQCDMC","PV refitted Z nominal",11,0.,2*TMath::Pi(),"PV refitted Z nominal","Events");
  // polarimetricAcopAnglePVRefitWithTracksBSMVADMHiggsQCDMC=HConfig.GetTH1D(Name+"_polarimetricAcopAnglePVRefitWithTracksBSMVADMHiggsQCDMC","PV refitted with taus tracks",11,0.,2*TMath::Pi(),"PV refitted with taus tracks","Events");
  // polarimetricAcopAnglePVRefitWithTracksBSZNominalMVADMHiggsQCDMC=HConfig.GetTH1D(Name+"_polarimetricAcopAnglePVRefitWithTracksBSZNominalMVADMHiggsQCDMC","PV refitted with taus tracks Z nominal",11,0.,2*TMath::Pi(),"PV refitted with taus tracks Z nominal","Events");

  // polarimetricAcopAngleMVADMJetFakesQCDMC=HConfig.GetTH1D(Name+"_polarimetricAcopAngleMVADMJetFakesQCDMC","PV nominal",11,0.,2*TMath::Pi(),"PV nominal","Events");
  // polarimetricAcopAnglePVRefitBSMVADMJetFakesQCDMC=HConfig.GetTH1D(Name+"_polarimetricAcopAnglePVRefitBSMVADMJetFakesQCDMC","PV refitted",11,0.,2*TMath::Pi(),"PV refitted","Events");
  // polarimetricAcopAnglePVRefitBSZNominalMVADMJetFakesQCDMC=HConfig.GetTH1D(Name+"_polarimetricAcopAnglePVRefitBSZNominalMVADMJetFakesQCDMC","PV refitted Z nominal",11,0.,2*TMath::Pi(),"PV refitted Z nominal","Events");
  // polarimetricAcopAnglePVRefitWithTracksBSMVADMJetFakesQCDMC=HConfig.GetTH1D(Name+"_polarimetricAcopAnglePVRefitWithTracksBSMVADMJetFakesQCDMC","PV refitted with taus tracks",11,0.,2*TMath::Pi(),"PV refitted with taus tracks","Events");
  // polarimetricAcopAnglePVRefitWithTracksBSZNominalMVADMJetFakesQCDMC=HConfig.GetTH1D(Name+"_polarimetricAcopAnglePVRefitWithTracksBSZNominalMVADMJetFakesQCDMC","PV refitted with taus tracks Z nominal",11,0.,2*TMath::Pi(),"PV refitted with taus tracks Z nominal","Events");

  // polarimetricAcopAngleMVADMZTTEmbedQCDMC=HConfig.GetTH1D(Name+"_polarimetricAcopAngleMVADMZTTEmbedQCDMC","PV nominal",11,0.,2*TMath::Pi(),"PV nominal","Events");
  // polarimetricAcopAnglePVRefitBSMVADMZTTEmbedQCDMC=HConfig.GetTH1D(Name+"_polarimetricAcopAnglePVRefitBSMVADMZTTEmbedQCDMC","PV refitted",11,0.,2*TMath::Pi(),"PV refitted","Events");
  // polarimetricAcopAnglePVRefitBSZNominalMVADMZTTEmbedQCDMC=HConfig.GetTH1D(Name+"_polarimetricAcopAnglePVRefitBSZNominalMVADMZTTEmbedQCDMC","PV refitted Z nominal",11,0.,2*TMath::Pi(),"PV refitted Z nominal","Events");
  // polarimetricAcopAnglePVRefitWithTracksBSMVADMZTTEmbedQCDMC=HConfig.GetTH1D(Name+"_polarimetricAcopAnglePVRefitWithTracksBSMVADMZTTEmbedQCDMC","PV refitted with taus tracks",11,0.,2*TMath::Pi(),"PV refitted with taus tracks","Events");
  // polarimetricAcopAnglePVRefitWithTracksBSZNominalMVADMZTTEmbedQCDMC=HConfig.GetTH1D(Name+"_polarimetricAcopAnglePVRefitWithTracksBSZNominalMVADMZTTEmbedQCDMC","PV refitted with taus tracks Z nominal",11,0.,2*TMath::Pi(),"PV refitted with taus tracks Z nominal","Events");

  
  // polarimetricAcopAnglePVRefitWithTracksBSMVADMHiggsUnrolled0005QCDMC=HConfig.GetTH1D(Name+"_polarimetricAcopAnglePVRefitWithTracksBSMVADMHiggsUnrolledQCDMC0005","PV refitted with taus tracks",5,0.,2*TMath::Pi(),"PV refitted with taus tracks","Events");
  // polarimetricAcopAnglePVRefitWithTracksBSMVADMHiggsUnrolled0506QCDMC=HConfig.GetTH1D(Name+"_polarimetricAcopAnglePVRefitWithTracksBSMVADMHiggsUnrolledQCDMC0506","PV refitted with taus tracks",5,0.,2*TMath::Pi(),"PV refitted with taus tracks","Events");
  // polarimetricAcopAnglePVRefitWithTracksBSMVADMHiggsUnrolled0607QCDMC=HConfig.GetTH1D(Name+"_polarimetricAcopAnglePVRefitWithTracksBSMVADMHiggsUnrolledQCDMC0607","PV refitted with taus tracks",5,0.,2*TMath::Pi(),"PV refitted with taus tracks","Events");
  // polarimetricAcopAnglePVRefitWithTracksBSMVADMHiggsUnrolled0710QCDMC=HConfig.GetTH1D(Name+"_polarimetricAcopAnglePVRefitWithTracksBSMVADMHiggsUnrolledQCDMC0710","PV refitted with taus tracks",5,0.,2*TMath::Pi(),"PV refitted with taus tracks","Events");

  polarimetricAcopAnglePVRefitWithTracksBSMVADMHiggsUnrolledQCDMC=HConfig.GetTH1D(Name+"_polarimetricAcopAnglePVRefitWithTracksBSMVADMHiggsUnrolledQCDMC","PV refitted with taus tracks",20,0.,4*2*TMath::Pi(),"PV refitted with taus tracks","Events");
  
  // polarimetricAcopAnglePVRefitWithTracksBSMVADMJetFakesUnrolled0005QCDMC=HConfig.GetTH1D(Name+"_polarimetricAcopAnglePVRefitWithTracksBSMVADMJetFakesUnrolledQCDMC0005","PV refitted with taus tracks",5,0.,2*TMath::Pi(),"PV refitted with taus tracks","Events");
  // polarimetricAcopAnglePVRefitWithTracksBSMVADMJetFakesUnrolled0506QCDMC=HConfig.GetTH1D(Name+"_polarimetricAcopAnglePVRefitWithTracksBSMVADMJetFakesUnrolledQCDMC0506","PV refitted with taus tracks",5,0.,2*TMath::Pi(),"PV refitted with taus tracks","Events");
  // polarimetricAcopAnglePVRefitWithTracksBSMVADMJetFakesUnrolled0607QCDMC=HConfig.GetTH1D(Name+"_polarimetricAcopAnglePVRefitWithTracksBSMVADMJetFakesUnrolledQCDMC0607","PV refitted with taus tracks",5,0.,2*TMath::Pi(),"PV refitted with taus tracks","Events");
  // polarimetricAcopAnglePVRefitWithTracksBSMVADMJetFakesUnrolled0710QCDMC=HConfig.GetTH1D(Name+"_polarimetricAcopAnglePVRefitWithTracksBSMVADMJetFakesUnrolledQCDMC0710","PV refitted with taus tracks",5,0.,2*TMath::Pi(),"PV refitted with taus tracks","Events");

  polarimetricAcopAnglePVRefitWithTracksBSMVADMJetFakesUnrolledQCDMC=HConfig.GetTH1D(Name+"_polarimetricAcopAnglePVRefitWithTracksBSMVADMJetFakesUnrolledQCDMC","PV refitted with taus tracks",20,0.,4*2*TMath::Pi(),"PV refitted with taus tracks","Events");
  
  // polarimetricAcopAnglePVRefitWithTracksBSMVADMZTTUnrolled0005QCDMC=HConfig.GetTH1D(Name+"_polarimetricAcopAnglePVRefitWithTracksBSMVADMZTTUnrolledQCDMC0005","PV refitted with taus tracks",5,0.,2*TMath::Pi(),"PV refitted with taus tracks","Events");
  // polarimetricAcopAnglePVRefitWithTracksBSMVADMZTTUnrolled0506QCDMC=HConfig.GetTH1D(Name+"_polarimetricAcopAnglePVRefitWithTracksBSMVADMZTTUnrolledQCDMC0506","PV refitted with taus tracks",5,0.,2*TMath::Pi(),"PV refitted with taus tracks","Events");
  // polarimetricAcopAnglePVRefitWithTracksBSMVADMZTTUnrolled0607QCDMC=HConfig.GetTH1D(Name+"_polarimetricAcopAnglePVRefitWithTracksBSMVADMZTTUnrolledQCDMC0607","PV refitted with taus tracks",5,0.,2*TMath::Pi(),"PV refitted with taus tracks","Events");
  // polarimetricAcopAnglePVRefitWithTracksBSMVADMZTTUnrolled0710QCDMC=HConfig.GetTH1D(Name+"_polarimetricAcopAnglePVRefitWithTracksBSMVADMZTTUnrolledQCDMC0710","PV refitted with taus tracks",5,0.,2*TMath::Pi(),"PV refitted with taus tracks","Events");
  
  polarimetricAcopAnglePVRefitWithTracksBSMVADMZTTUnrolledQCDMC=HConfig.GetTH1D(Name+"_polarimetricAcopAnglePVRefitWithTracksBSMVADMZTTUnrolledQCDMC","PV refitted with taus tracks",20,0.,4*2*TMath::Pi(),"PV refitted with taus tracks","Events");


  // polarimetricAcopAngleMVADMHiggsQCDMC=HConfig.GetTH2D(Name+"_polarimetricAcopAngleMVADMHiggsQCDMC","Higgs MVA score VS acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","MVA score");
  // polarimetricAcopAnglePVRefitBSMVADMHiggsQCDMC=HConfig.GetTH2D(Name+"_polarimetricAcopAnglePVRefitBSMVADMHiggsQCDMC","Higgs MVA Score VS acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","MVA score");
  // polarimetricAcopAnglePVRefitBSZNominalMVADMHiggsQCDMC=HConfig.GetTH2D(Name+"_polarimetricAcopAnglePVRefitBSZNominalMVADMHiggsQCDMC","Higgs MVA Score VS acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","MVA score");
  polarimetricAcopAnglePVRefitWithTracksBSMVADMHiggsQCDMC=HConfig.GetTH2D(Name+"_polarimetricAcopAnglePVRefitWithTracksBSMVADMHiggsQCDMC","Higgs MVA Score VS acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","MVA core");
  //polarimetricAcopAnglePVRefitWithTracksBSZNominalMVADMHiggsQCDMC=HConfig.GetTH2D(Name+"_polarimetricAcopAnglePVRefitWithTracksBSZNominalMVADMHiggsQCDMC","Higgs MVA Score VS acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","MVA score");

  // polarimetricAcopAngleMVADMJetFakesQCDMC=HConfig.GetTH2D(Name+"_polarimetricAcopAngleMVADMJetFakesQCDMC","JetFakes MVA score VS acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","MVA score");
  // polarimetricAcopAnglePVRefitBSMVADMJetFakesQCDMC=HConfig.GetTH2D(Name+"_polarimetricAcopAnglePVRefitBSMVADMJetFakesQCDMC","JetFakes MVA Score VS acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","MVA score");
  // polarimetricAcopAnglePVRefitBSZNominalMVADMJetFakesQCDMC=HConfig.GetTH2D(Name+"_polarimetricAcopAnglePVRefitBSZNominalMVADMJetFakesQCDMC","JetFakes MVA Score VS acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","MVA score");
  polarimetricAcopAnglePVRefitWithTracksBSMVADMJetFakesQCDMC=HConfig.GetTH2D(Name+"_polarimetricAcopAnglePVRefitWithTracksBSMVADMJetFakesQCDMC","JetFakes MVA Score VS acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","MVA core");
  //polarimetricAcopAnglePVRefitWithTracksBSZNominalMVADMJetFakesQCDMC=HConfig.GetTH2D(Name+"_polarimetricAcopAnglePVRefitWithTracksBSZNominalMVADMJetFakesQCDMC","JetFakes MVA Score VS acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","MVA score");

  // polarimetricAcopAngleMVADMZTTQCDMC=HConfig.GetTH2D(Name+"_polarimetricAcopAngleMVADMZTTQCDMC","ZTT MVA score VS acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","MVA score");
  // polarimetricAcopAnglePVRefitBSMVADMZTTQCDMC=HConfig.GetTH2D(Name+"_polarimetricAcopAnglePVRefitBSMVADMZTTQCDMC","ZTT MVA Score VS acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","MVA score");
  // polarimetricAcopAnglePVRefitBSZNominalMVADMZTTQCDMC=HConfig.GetTH2D(Name+"_polarimetricAcopAnglePVRefitBSZNominalMVADMZTTQCDMC","ZTT MVA Score VS acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","MVA score");
  polarimetricAcopAnglePVRefitWithTracksBSMVADMZTTQCDMC=HConfig.GetTH2D(Name+"_polarimetricAcopAnglePVRefitWithTracksBSMVADMZTTQCDMC","ZTT MVA Score VS acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","MVA core");
  //polarimetricAcopAnglePVRefitWithTracksBSZNominalMVADMZTTQCDMC=HConfig.GetTH2D(Name+"_polarimetricAcopAnglePVRefitWithTracksBSZNominalMVADMZTTQCDMC","ZTT MVA Score VS acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","MVA score");


  
  // CMS_eff_t_pThigh_MVADM10_13TeVUpHiggs=HConfig.GetTH2D(Name+"_CMS_eff_t_pThigh_MVADM10_13TeVUpHiggs","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // CMS_eff_t_pThigh_MVADM10_13TeVDownHiggs=HConfig.GetTH2D(Name+"_CMS_eff_t_pThigh_MVADM10_13TeVDownHiggs","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // CMS_eff_t_trg_MVADM10_13TeVUpHiggs=HConfig.GetTH2D(Name+"_CMS_eff_t_trg_MVADM10_13TeVUpHiggs","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // CMS_eff_t_trg_MVADM10_13TeVDownHiggs=HConfig.GetTH2D(Name+"_CMS_eff_t_trg_MVADM10_13TeVDownHiggs","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // CMS_htt_dyShape_13TeVUpHiggs=HConfig.GetTH2D(Name+"_CMS_htt_dyShape_13TeVUpHiggs","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // CMS_htt_dyShape_13TeVDownHiggs=HConfig.GetTH2D(Name+"_CMS_htt_dyShape_13TeVDownHiggs","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // jetFakes_ff_tt_qcd_stat_njet0_mvadm10_upHiggs=HConfig.GetTH2D(Name+"_jetFakes_ff_tt_qcd_stat_njet0_mvadm10_upHiggs","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // jetFakes_ff_tt_qcd_stat_njet0_mvadm10_downHiggs=HConfig.GetTH2D(Name+"_jetFakes_ff_tt_qcd_stat_njet0_mvadm10_downHiggs","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // jetFakes_ff_tt_qcd_stat_njet1_mvadm10_upHiggs=HConfig.GetTH2D(Name+"_jetFakes_ff_tt_qcd_stat_njet1_mvadm10_upHiggs","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // jetFakes_ff_tt_qcd_stat_njet1_mvadm10_downHiggs=HConfig.GetTH2D(Name+"_jetFakes_ff_tt_qcd_stat_njet1_mvadm10_downHiggs","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // jetFakes_ff_tt_qcd_stat_njet2_mvadm10_upHiggs=HConfig.GetTH2D(Name+"_jetFakes_ff_tt_qcd_stat_njet2_mvadm10_upHiggs","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // jetFakes_ff_tt_qcd_stat_njet2_mvadm10_downHiggs=HConfig.GetTH2D(Name+"_jetFakes_ff_tt_qcd_stat_njet2_mvadm10_downHiggs","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // jetFakes_ff_tt_qcd_met_closure_systUpHiggs=HConfig.GetTH2D(Name+"_jetFakes_ff_tt_qcd_met_closure_systUpHiggs","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // jetFakes_ff_tt_qcd_met_closure_systDownHiggs=HConfig.GetTH2D(Name+"_jetFakes_ff_tt_qcd_met_closure_systDownHiggs","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  
  // CMS_eff_t_pThigh_MVADM10_13TeVUpPVRefitBSHiggs=HConfig.GetTH2D(Name+"_CMS_eff_t_pThigh_MVADM10_13TeVUpPVRefitBSHiggs","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // CMS_eff_t_pThigh_MVADM10_13TeVDownPVRefitBSHiggs=HConfig.GetTH2D(Name+"_CMS_eff_t_pThigh_MVADM10_13TeVDownPVRefitBSHiggs","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // CMS_eff_t_trg_MVADM10_13TeVUpPVRefitBSHiggs=HConfig.GetTH2D(Name+"_CMS_eff_t_trg_MVADM10_13TeVUpPVRefitBSHiggs","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // CMS_eff_t_trg_MVADM10_13TeVDownPVRefitBSHiggs=HConfig.GetTH2D(Name+"_CMS_eff_t_trg_MVADM10_13TeVDownPVRefitBSHiggs","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // CMS_htt_dyShape_13TeVUpPVRefitBSHiggs=HConfig.GetTH2D(Name+"_CMS_htt_dyShape_13TeVUpPVRefitBSHiggs","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // CMS_htt_dyShape_13TeVDownPVRefitBSHiggs=HConfig.GetTH2D(Name+"_CMS_htt_dyShape_13TeVDownPVRefitBSHiggs","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // jetFakes_ff_tt_qcd_stat_njet0_mvadm10_upPVRefitBSHiggs=HConfig.GetTH2D(Name+"_jetFakes_ff_tt_qcd_stat_njet0_mvadm10_upPVRefitBSHiggs","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // jetFakes_ff_tt_qcd_stat_njet0_mvadm10_downPVRefitBSHiggs=HConfig.GetTH2D(Name+"_jetFakes_ff_tt_qcd_stat_njet0_mvadm10_downPVRefitBSHiggs","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // jetFakes_ff_tt_qcd_stat_njet1_mvadm10_upPVRefitBSHiggs=HConfig.GetTH2D(Name+"_jetFakes_ff_tt_qcd_stat_njet1_mvadm10_upPVRefitBSHiggs","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // jetFakes_ff_tt_qcd_stat_njet1_mvadm10_downPVRefitBSHiggs=HConfig.GetTH2D(Name+"_jetFakes_ff_tt_qcd_stat_njet1_mvadm10_downPVRefitBSHiggs","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // jetFakes_ff_tt_qcd_stat_njet2_mvadm10_upPVRefitBSHiggs=HConfig.GetTH2D(Name+"_jetFakes_ff_tt_qcd_stat_njet2_mvadm10_upPVRefitBSHiggs","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // jetFakes_ff_tt_qcd_stat_njet2_mvadm10_downPVRefitBSHiggs=HConfig.GetTH2D(Name+"_jetFakes_ff_tt_qcd_stat_njet2_mvadm10_downPVRefitBSHiggs","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // jetFakes_ff_tt_qcd_met_closure_systUpPVRefitBSHiggs=HConfig.GetTH2D(Name+"_jetFakes_ff_tt_qcd_met_closure_systUpPVRefitBSHiggs","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // jetFakes_ff_tt_qcd_met_closure_systDownPVRefitBSHiggs=HConfig.GetTH2D(Name+"_jetFakes_ff_tt_qcd_met_closure_systDownPVRefitBSHiggs","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");

  // CMS_eff_t_pThigh_MVADM10_13TeVUpPVRefitBSZNominalHiggs=HConfig.GetTH2D(Name+"_CMS_eff_t_pThigh_MVADM10_13TeVUpPVRefitBSZNominalHiggs","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // CMS_eff_t_pThigh_MVADM10_13TeVDownPVRefitBSZNominalHiggs=HConfig.GetTH2D(Name+"_CMS_eff_t_pThigh_MVADM10_13TeVDownPVRefitBSZNominalHiggs","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // CMS_eff_t_trg_MVADM10_13TeVUpPVRefitBSZNominalHiggs=HConfig.GetTH2D(Name+"_CMS_eff_t_trg_MVADM10_13TeVUpPVRefitBSZNominalHiggs","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // CMS_eff_t_trg_MVADM10_13TeVDownPVRefitBSZNominalHiggs=HConfig.GetTH2D(Name+"_CMS_eff_t_trg_MVADM10_13TeVDownPVRefitBSZNominalHiggs","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // CMS_htt_dyShape_13TeVUpPVRefitBSZNominalHiggs=HConfig.GetTH2D(Name+"_CMS_htt_dyShape_13TeVUpPVRefitBSZNominalHiggs","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // CMS_htt_dyShape_13TeVDownPVRefitBSZNominalHiggs=HConfig.GetTH2D(Name+"_CMS_htt_dyShape_13TeVDownPVRefitBSZNominalHiggs","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // jetFakes_ff_tt_qcd_stat_njet0_mvadm10_upPVRefitBSZNominalHiggs=HConfig.GetTH2D(Name+"_jetFakes_ff_tt_qcd_stat_njet0_mvadm10_upPVRefitBSZNominalHiggs","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // jetFakes_ff_tt_qcd_stat_njet0_mvadm10_downPVRefitBSZNominalHiggs=HConfig.GetTH2D(Name+"_jetFakes_ff_tt_qcd_stat_njet0_mvadm10_downPVRefitBSZNominalHiggs","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // jetFakes_ff_tt_qcd_stat_njet1_mvadm10_upPVRefitBSZNominalHiggs=HConfig.GetTH2D(Name+"_jetFakes_ff_tt_qcd_stat_njet1_mvadm10_upPVRefitBSZNominalHiggs","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // jetFakes_ff_tt_qcd_stat_njet1_mvadm10_downPVRefitBSZNominalHiggs=HConfig.GetTH2D(Name+"_jetFakes_ff_tt_qcd_stat_njet1_mvadm10_downPVRefitBSZNominalHiggs","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // jetFakes_ff_tt_qcd_stat_njet2_mvadm10_upPVRefitBSZNominalHiggs=HConfig.GetTH2D(Name+"_jetFakes_ff_tt_qcd_stat_njet2_mvadm10_upPVRefitBSZNominalHiggs","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // jetFakes_ff_tt_qcd_stat_njet2_mvadm10_downPVRefitBSZNominalHiggs=HConfig.GetTH2D(Name+"_jetFakes_ff_tt_qcd_stat_njet2_mvadm10_downPVRefitBSZNominalHiggs","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // jetFakes_ff_tt_qcd_met_closure_systUpPVRefitBSZNominalHiggs=HConfig.GetTH2D(Name+"_jetFakes_ff_tt_qcd_met_closure_systUpPVRefitBSZNominalHiggs","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // jetFakes_ff_tt_qcd_met_closure_systDownPVRefitBSZNominalHiggs=HConfig.GetTH2D(Name+"_jetFakes_ff_tt_qcd_met_closure_systDownPVRefitBSZNominalHiggs","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");

  CMS_eff_t_pThigh_MVADM10_13TeVUpPVRefitWithTracksBSHiggs=HConfig.GetTH2D(Name+"_CMS_eff_t_pThigh_MVADM10_13TeVUpPVRefitWithTracksBSHiggs","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  CMS_eff_t_pThigh_MVADM10_13TeVDownPVRefitWithTracksBSHiggs=HConfig.GetTH2D(Name+"_CMS_eff_t_pThigh_MVADM10_13TeVDownPVRefitWithTracksBSHiggs","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  CMS_eff_t_trg_MVADM10_13TeVUpPVRefitWithTracksBSHiggs=HConfig.GetTH2D(Name+"_CMS_eff_t_trg_MVADM10_13TeVUpPVRefitWithTracksBSHiggs","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  CMS_eff_t_trg_MVADM10_13TeVDownPVRefitWithTracksBSHiggs=HConfig.GetTH2D(Name+"_CMS_eff_t_trg_MVADM10_13TeVDownPVRefitWithTracksBSHiggs","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  CMS_htt_dyShape_13TeVUpPVRefitWithTracksBSHiggs=HConfig.GetTH2D(Name+"_CMS_htt_dyShape_13TeVUpPVRefitWithTracksBSHiggs","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  CMS_htt_dyShape_13TeVDownPVRefitWithTracksBSHiggs=HConfig.GetTH2D(Name+"_CMS_htt_dyShape_13TeVDownPVRefitWithTracksBSHiggs","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  jetFakes_ff_tt_qcd_stat_njet0_mvadm10_upPVRefitWithTracksBSHiggs=HConfig.GetTH2D(Name+"_jetFakes_ff_tt_qcd_stat_njet0_mvadm10_upPVRefitWithTracksBSHiggs","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  jetFakes_ff_tt_qcd_stat_njet0_mvadm10_downPVRefitWithTracksBSHiggs=HConfig.GetTH2D(Name+"_jetFakes_ff_tt_qcd_stat_njet0_mvadm10_downPVRefitWithTracksBSHiggs","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  jetFakes_ff_tt_qcd_stat_njet1_mvadm10_upPVRefitWithTracksBSHiggs=HConfig.GetTH2D(Name+"_jetFakes_ff_tt_qcd_stat_njet1_mvadm10_upPVRefitWithTracksBSHiggs","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  jetFakes_ff_tt_qcd_stat_njet1_mvadm10_downPVRefitWithTracksBSHiggs=HConfig.GetTH2D(Name+"_jetFakes_ff_tt_qcd_stat_njet1_mvadm10_downPVRefitWithTracksBSHiggs","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  jetFakes_ff_tt_qcd_stat_njet2_mvadm10_upPVRefitWithTracksBSHiggs=HConfig.GetTH2D(Name+"_jetFakes_ff_tt_qcd_stat_njet2_mvadm10_upPVRefitWithTracksBSHiggs","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  jetFakes_ff_tt_qcd_stat_njet2_mvadm10_downPVRefitWithTracksBSHiggs=HConfig.GetTH2D(Name+"_jetFakes_ff_tt_qcd_stat_njet2_mvadm10_downPVRefitWithTracksBSHiggs","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  jetFakes_ff_tt_qcd_met_closure_systUpPVRefitWithTracksBSHiggs=HConfig.GetTH2D(Name+"_jetFakes_ff_tt_qcd_met_closure_systUpPVRefitWithTracksBSHiggs","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  jetFakes_ff_tt_qcd_met_closure_systDownPVRefitWithTracksBSHiggs=HConfig.GetTH2D(Name+"_jetFakes_ff_tt_qcd_met_closure_systDownPVRefitWithTracksBSHiggs","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");

  PrefiringUp_PVRefitWithTracksBSHiggs=HConfig.GetTH2D(Name+"_PrefiringUp_PVRefitWithTracksBSHiggs","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  PrefiringDown_PVRefitWithTracksBSHiggs=HConfig.GetTH2D(Name+"_PrefiringDown_PVRefitWithTracksBSHiggs","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");

  // CMS_eff_t_pThigh_MVADM10_13TeVUpPVRefitWithTracksBSZNominalHiggs=HConfig.GetTH2D(Name+"_CMS_eff_t_pThigh_MVADM10_13TeVUpPVRefitWithTracksBSZNominalHiggs","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // CMS_eff_t_pThigh_MVADM10_13TeVDownPVRefitWithTracksBSZNominalHiggs=HConfig.GetTH2D(Name+"_CMS_eff_t_pThigh_MVADM10_13TeVDownPVRefitWithTracksBSZNominalHiggs","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // CMS_eff_t_trg_MVADM10_13TeVUpPVRefitWithTracksBSZNominalHiggs=HConfig.GetTH2D(Name+"_CMS_eff_t_trg_MVADM10_13TeVUpPVRefitWithTracksBSZNominalHiggs","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // CMS_eff_t_trg_MVADM10_13TeVDownPVRefitWithTracksBSZNominalHiggs=HConfig.GetTH2D(Name+"_CMS_eff_t_trg_MVADM10_13TeVDownPVRefitWithTracksBSZNominalHiggs","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // CMS_htt_dyShape_13TeVUpPVRefitWithTracksBSZNominalHiggs=HConfig.GetTH2D(Name+"_CMS_htt_dyShape_13TeVUpPVRefitWithTracksBSZNominalHiggs","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // CMS_htt_dyShape_13TeVDownPVRefitWithTracksBSZNominalHiggs=HConfig.GetTH2D(Name+"_CMS_htt_dyShape_13TeVDownPVRefitWithTracksBSZNominalHiggs","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // jetFakes_ff_tt_qcd_stat_njet0_mvadm10_upPVRefitWithTracksBSZNominalHiggs=HConfig.GetTH2D(Name+"_jetFakes_ff_tt_qcd_stat_njet0_mvadm10_upPVRefitWithTracksBSZNominalHiggs","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // jetFakes_ff_tt_qcd_stat_njet0_mvadm10_downPVRefitWithTracksBSZNominalHiggs=HConfig.GetTH2D(Name+"_jetFakes_ff_tt_qcd_stat_njet0_mvadm10_downPVRefitWithTracksBSZNominalHiggs","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // jetFakes_ff_tt_qcd_stat_njet1_mvadm10_upPVRefitWithTracksBSZNominalHiggs=HConfig.GetTH2D(Name+"_jetFakes_ff_tt_qcd_stat_njet1_mvadm10_upPVRefitWithTracksBSZNominalHiggs","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // jetFakes_ff_tt_qcd_stat_njet1_mvadm10_downPVRefitWithTracksBSZNominalHiggs=HConfig.GetTH2D(Name+"_jetFakes_ff_tt_qcd_stat_njet1_mvadm10_downPVRefitWithTracksBSZNominalHiggs","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // jetFakes_ff_tt_qcd_stat_njet2_mvadm10_upPVRefitWithTracksBSZNominalHiggs=HConfig.GetTH2D(Name+"_jetFakes_ff_tt_qcd_stat_njet2_mvadm10_upPVRefitWithTracksBSZNominalHiggs","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // jetFakes_ff_tt_qcd_stat_njet2_mvadm10_downPVRefitWithTracksBSZNominalHiggs=HConfig.GetTH2D(Name+"_jetFakes_ff_tt_qcd_stat_njet2_mvadm10_downPVRefitWithTracksBSZNominalHiggs","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // jetFakes_ff_tt_qcd_met_closure_systUpPVRefitWithTracksBSZNominalHiggs=HConfig.GetTH2D(Name+"_jetFakes_ff_tt_qcd_met_closure_systUpPVRefitWithTracksBSZNominalHiggs","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // jetFakes_ff_tt_qcd_met_closure_systDownPVRefitWithTracksBSZNominalHiggs=HConfig.GetTH2D(Name+"_jetFakes_ff_tt_qcd_met_closure_systDownPVRefitWithTracksBSZNominalHiggs","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");


  

  // CMS_eff_t_pThigh_MVADM10_13TeVUpJetFakes=HConfig.GetTH2D(Name+"_CMS_eff_t_pThigh_MVADM10_13TeVUpJetFakes","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // CMS_eff_t_pThigh_MVADM10_13TeVDownJetFakes=HConfig.GetTH2D(Name+"_CMS_eff_t_pThigh_MVADM10_13TeVDownJetFakes","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // CMS_eff_t_trg_MVADM10_13TeVUpJetFakes=HConfig.GetTH2D(Name+"_CMS_eff_t_trg_MVADM10_13TeVUpJetFakes","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // CMS_eff_t_trg_MVADM10_13TeVDownJetFakes=HConfig.GetTH2D(Name+"_CMS_eff_t_trg_MVADM10_13TeVDownJetFakes","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // CMS_htt_dyShape_13TeVUpJetFakes=HConfig.GetTH2D(Name+"_CMS_htt_dyShape_13TeVUpJetFakes","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // CMS_htt_dyShape_13TeVDownJetFakes=HConfig.GetTH2D(Name+"_CMS_htt_dyShape_13TeVDownJetFakes","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // jetFakes_ff_tt_qcd_stat_njet0_mvadm10_upJetFakes=HConfig.GetTH2D(Name+"_jetFakes_ff_tt_qcd_stat_njet0_mvadm10_upJetFakes","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // jetFakes_ff_tt_qcd_stat_njet0_mvadm10_downJetFakes=HConfig.GetTH2D(Name+"_jetFakes_ff_tt_qcd_stat_njet0_mvadm10_downJetFakes","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // jetFakes_ff_tt_qcd_stat_njet1_mvadm10_upJetFakes=HConfig.GetTH2D(Name+"_jetFakes_ff_tt_qcd_stat_njet1_mvadm10_upJetFakes","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // jetFakes_ff_tt_qcd_stat_njet1_mvadm10_downJetFakes=HConfig.GetTH2D(Name+"_jetFakes_ff_tt_qcd_stat_njet1_mvadm10_downJetFakes","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // jetFakes_ff_tt_qcd_stat_njet2_mvadm10_upJetFakes=HConfig.GetTH2D(Name+"_jetFakes_ff_tt_qcd_stat_njet2_mvadm10_upJetFakes","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // jetFakes_ff_tt_qcd_stat_njet2_mvadm10_downJetFakes=HConfig.GetTH2D(Name+"_jetFakes_ff_tt_qcd_stat_njet2_mvadm10_downJetFakes","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // jetFakes_ff_tt_qcd_met_closure_systUpJetFakes=HConfig.GetTH2D(Name+"_jetFakes_ff_tt_qcd_met_closure_systUpJetFakes","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // jetFakes_ff_tt_qcd_met_closure_systDownJetFakes=HConfig.GetTH2D(Name+"_jetFakes_ff_tt_qcd_met_closure_systDownJetFakes","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  
  // CMS_eff_t_pThigh_MVADM10_13TeVUpPVRefitBSJetFakes=HConfig.GetTH2D(Name+"_CMS_eff_t_pThigh_MVADM10_13TeVUpPVRefitBSJetFakes","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // CMS_eff_t_pThigh_MVADM10_13TeVDownPVRefitBSJetFakes=HConfig.GetTH2D(Name+"_CMS_eff_t_pThigh_MVADM10_13TeVDownPVRefitBSJetFakes","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // CMS_eff_t_trg_MVADM10_13TeVUpPVRefitBSJetFakes=HConfig.GetTH2D(Name+"_CMS_eff_t_trg_MVADM10_13TeVUpPVRefitBSJetFakes","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // CMS_eff_t_trg_MVADM10_13TeVDownPVRefitBSJetFakes=HConfig.GetTH2D(Name+"_CMS_eff_t_trg_MVADM10_13TeVDownPVRefitBSJetFakes","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // CMS_htt_dyShape_13TeVUpPVRefitBSJetFakes=HConfig.GetTH2D(Name+"_CMS_htt_dyShape_13TeVUpPVRefitBSJetFakes","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // CMS_htt_dyShape_13TeVDownPVRefitBSJetFakes=HConfig.GetTH2D(Name+"_CMS_htt_dyShape_13TeVDownPVRefitBSJetFakes","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // jetFakes_ff_tt_qcd_stat_njet0_mvadm10_upPVRefitBSJetFakes=HConfig.GetTH2D(Name+"_jetFakes_ff_tt_qcd_stat_njet0_mvadm10_upPVRefitBSJetFakes","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // jetFakes_ff_tt_qcd_stat_njet0_mvadm10_downPVRefitBSJetFakes=HConfig.GetTH2D(Name+"_jetFakes_ff_tt_qcd_stat_njet0_mvadm10_downPVRefitBSJetFakes","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // jetFakes_ff_tt_qcd_stat_njet1_mvadm10_upPVRefitBSJetFakes=HConfig.GetTH2D(Name+"_jetFakes_ff_tt_qcd_stat_njet1_mvadm10_upPVRefitBSJetFakes","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // jetFakes_ff_tt_qcd_stat_njet1_mvadm10_downPVRefitBSJetFakes=HConfig.GetTH2D(Name+"_jetFakes_ff_tt_qcd_stat_njet1_mvadm10_downPVRefitBSJetFakes","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // jetFakes_ff_tt_qcd_stat_njet2_mvadm10_upPVRefitBSJetFakes=HConfig.GetTH2D(Name+"_jetFakes_ff_tt_qcd_stat_njet2_mvadm10_upPVRefitBSJetFakes","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // jetFakes_ff_tt_qcd_stat_njet2_mvadm10_downPVRefitBSJetFakes=HConfig.GetTH2D(Name+"_jetFakes_ff_tt_qcd_stat_njet2_mvadm10_downPVRefitBSJetFakes","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // jetFakes_ff_tt_qcd_met_closure_systUpPVRefitBSJetFakes=HConfig.GetTH2D(Name+"_jetFakes_ff_tt_qcd_met_closure_systUpPVRefitBSJetFakes","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // jetFakes_ff_tt_qcd_met_closure_systDownPVRefitBSJetFakes=HConfig.GetTH2D(Name+"_jetFakes_ff_tt_qcd_met_closure_systDownPVRefitBSJetFakes","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");

  // CMS_eff_t_pThigh_MVADM10_13TeVUpPVRefitBSZNominalJetFakes=HConfig.GetTH2D(Name+"_CMS_eff_t_pThigh_MVADM10_13TeVUpPVRefitBSZNominalJetFakes","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // CMS_eff_t_pThigh_MVADM10_13TeVDownPVRefitBSZNominalJetFakes=HConfig.GetTH2D(Name+"_CMS_eff_t_pThigh_MVADM10_13TeVDownPVRefitBSZNominalJetFakes","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // CMS_eff_t_trg_MVADM10_13TeVUpPVRefitBSZNominalJetFakes=HConfig.GetTH2D(Name+"_CMS_eff_t_trg_MVADM10_13TeVUpPVRefitBSZNominalJetFakes","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // CMS_eff_t_trg_MVADM10_13TeVDownPVRefitBSZNominalJetFakes=HConfig.GetTH2D(Name+"_CMS_eff_t_trg_MVADM10_13TeVDownPVRefitBSZNominalJetFakes","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // CMS_htt_dyShape_13TeVUpPVRefitBSZNominalJetFakes=HConfig.GetTH2D(Name+"_CMS_htt_dyShape_13TeVUpPVRefitBSZNominalJetFakes","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // CMS_htt_dyShape_13TeVDownPVRefitBSZNominalJetFakes=HConfig.GetTH2D(Name+"_CMS_htt_dyShape_13TeVDownPVRefitBSZNominalJetFakes","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // jetFakes_ff_tt_qcd_stat_njet0_mvadm10_upPVRefitBSZNominalJetFakes=HConfig.GetTH2D(Name+"_jetFakes_ff_tt_qcd_stat_njet0_mvadm10_upPVRefitBSZNominalJetFakes","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // jetFakes_ff_tt_qcd_stat_njet0_mvadm10_downPVRefitBSZNominalJetFakes=HConfig.GetTH2D(Name+"_jetFakes_ff_tt_qcd_stat_njet0_mvadm10_downPVRefitBSZNominalJetFakes","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // jetFakes_ff_tt_qcd_stat_njet1_mvadm10_upPVRefitBSZNominalJetFakes=HConfig.GetTH2D(Name+"_jetFakes_ff_tt_qcd_stat_njet1_mvadm10_upPVRefitBSZNominalJetFakes","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // jetFakes_ff_tt_qcd_stat_njet1_mvadm10_downPVRefitBSZNominalJetFakes=HConfig.GetTH2D(Name+"_jetFakes_ff_tt_qcd_stat_njet1_mvadm10_downPVRefitBSZNominalJetFakes","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // jetFakes_ff_tt_qcd_stat_njet2_mvadm10_upPVRefitBSZNominalJetFakes=HConfig.GetTH2D(Name+"_jetFakes_ff_tt_qcd_stat_njet2_mvadm10_upPVRefitBSZNominalJetFakes","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // jetFakes_ff_tt_qcd_stat_njet2_mvadm10_downPVRefitBSZNominalJetFakes=HConfig.GetTH2D(Name+"_jetFakes_ff_tt_qcd_stat_njet2_mvadm10_downPVRefitBSZNominalJetFakes","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // jetFakes_ff_tt_qcd_met_closure_systUpPVRefitBSZNominalJetFakes=HConfig.GetTH2D(Name+"_jetFakes_ff_tt_qcd_met_closure_systUpPVRefitBSZNominalJetFakes","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // jetFakes_ff_tt_qcd_met_closure_systDownPVRefitBSZNominalJetFakes=HConfig.GetTH2D(Name+"_jetFakes_ff_tt_qcd_met_closure_systDownPVRefitBSZNominalJetFakes","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");

  CMS_eff_t_pThigh_MVADM10_13TeVUpPVRefitWithTracksBSJetFakes=HConfig.GetTH2D(Name+"_CMS_eff_t_pThigh_MVADM10_13TeVUpPVRefitWithTracksBSJetFakes","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  CMS_eff_t_pThigh_MVADM10_13TeVDownPVRefitWithTracksBSJetFakes=HConfig.GetTH2D(Name+"_CMS_eff_t_pThigh_MVADM10_13TeVDownPVRefitWithTracksBSJetFakes","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  CMS_eff_t_trg_MVADM10_13TeVUpPVRefitWithTracksBSJetFakes=HConfig.GetTH2D(Name+"_CMS_eff_t_trg_MVADM10_13TeVUpPVRefitWithTracksBSJetFakes","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  CMS_eff_t_trg_MVADM10_13TeVDownPVRefitWithTracksBSJetFakes=HConfig.GetTH2D(Name+"_CMS_eff_t_trg_MVADM10_13TeVDownPVRefitWithTracksBSJetFakes","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  CMS_htt_dyShape_13TeVUpPVRefitWithTracksBSJetFakes=HConfig.GetTH2D(Name+"_CMS_htt_dyShape_13TeVUpPVRefitWithTracksBSJetFakes","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  CMS_htt_dyShape_13TeVDownPVRefitWithTracksBSJetFakes=HConfig.GetTH2D(Name+"_CMS_htt_dyShape_13TeVDownPVRefitWithTracksBSJetFakes","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  jetFakes_ff_tt_qcd_stat_njet0_mvadm10_upPVRefitWithTracksBSJetFakes=HConfig.GetTH2D(Name+"_jetFakes_ff_tt_qcd_stat_njet0_mvadm10_upPVRefitWithTracksBSJetFakes","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  jetFakes_ff_tt_qcd_stat_njet0_mvadm10_downPVRefitWithTracksBSJetFakes=HConfig.GetTH2D(Name+"_jetFakes_ff_tt_qcd_stat_njet0_mvadm10_downPVRefitWithTracksBSJetFakes","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  jetFakes_ff_tt_qcd_stat_njet1_mvadm10_upPVRefitWithTracksBSJetFakes=HConfig.GetTH2D(Name+"_jetFakes_ff_tt_qcd_stat_njet1_mvadm10_upPVRefitWithTracksBSJetFakes","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  jetFakes_ff_tt_qcd_stat_njet1_mvadm10_downPVRefitWithTracksBSJetFakes=HConfig.GetTH2D(Name+"_jetFakes_ff_tt_qcd_stat_njet1_mvadm10_downPVRefitWithTracksBSJetFakes","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  jetFakes_ff_tt_qcd_stat_njet2_mvadm10_upPVRefitWithTracksBSJetFakes=HConfig.GetTH2D(Name+"_jetFakes_ff_tt_qcd_stat_njet2_mvadm10_upPVRefitWithTracksBSJetFakes","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  jetFakes_ff_tt_qcd_stat_njet2_mvadm10_downPVRefitWithTracksBSJetFakes=HConfig.GetTH2D(Name+"_jetFakes_ff_tt_qcd_stat_njet2_mvadm10_downPVRefitWithTracksBSJetFakes","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  jetFakes_ff_tt_qcd_met_closure_systUpPVRefitWithTracksBSJetFakes=HConfig.GetTH2D(Name+"_jetFakes_ff_tt_qcd_met_closure_systUpPVRefitWithTracksBSJetFakes","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  jetFakes_ff_tt_qcd_met_closure_systDownPVRefitWithTracksBSJetFakes=HConfig.GetTH2D(Name+"_jetFakes_ff_tt_qcd_met_closure_systDownPVRefitWithTracksBSJetFakes","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");

  PrefiringUp_PVRefitWithTracksBSJetFakes=HConfig.GetTH2D(Name+"_PrefiringUp_PVRefitWithTracksBSJetFakes","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  PrefiringDown_PVRefitWithTracksBSJetFakes=HConfig.GetTH2D(Name+"_PrefiringDown_PVRefitWithTracksBSJetFakes","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  
  // CMS_eff_t_pThigh_MVADM10_13TeVUpPVRefitWithTracksBSZNominalJetFakes=HConfig.GetTH2D(Name+"_CMS_eff_t_pThigh_MVADM10_13TeVUpPVRefitWithTracksBSZNominalJetFakes","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // CMS_eff_t_pThigh_MVADM10_13TeVDownPVRefitWithTracksBSZNominalJetFakes=HConfig.GetTH2D(Name+"_CMS_eff_t_pThigh_MVADM10_13TeVDownPVRefitWithTracksBSZNominalJetFakes","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // CMS_eff_t_trg_MVADM10_13TeVUpPVRefitWithTracksBSZNominalJetFakes=HConfig.GetTH2D(Name+"_CMS_eff_t_trg_MVADM10_13TeVUpPVRefitWithTracksBSZNominalJetFakes","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // CMS_eff_t_trg_MVADM10_13TeVDownPVRefitWithTracksBSZNominalJetFakes=HConfig.GetTH2D(Name+"_CMS_eff_t_trg_MVADM10_13TeVDownPVRefitWithTracksBSZNominalJetFakes","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // CMS_htt_dyShape_13TeVUpPVRefitWithTracksBSZNominalJetFakes=HConfig.GetTH2D(Name+"_CMS_htt_dyShape_13TeVUpPVRefitWithTracksBSZNominalJetFakes","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // CMS_htt_dyShape_13TeVDownPVRefitWithTracksBSZNominalJetFakes=HConfig.GetTH2D(Name+"_CMS_htt_dyShape_13TeVDownPVRefitWithTracksBSZNominalJetFakes","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // jetFakes_ff_tt_qcd_stat_njet0_mvadm10_upPVRefitWithTracksBSZNominalJetFakes=HConfig.GetTH2D(Name+"_jetFakes_ff_tt_qcd_stat_njet0_mvadm10_upPVRefitWithTracksBSZNominalJetFakes","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // jetFakes_ff_tt_qcd_stat_njet0_mvadm10_downPVRefitWithTracksBSZNominalJetFakes=HConfig.GetTH2D(Name+"_jetFakes_ff_tt_qcd_stat_njet0_mvadm10_downPVRefitWithTracksBSZNominalJetFakes","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // jetFakes_ff_tt_qcd_stat_njet1_mvadm10_upPVRefitWithTracksBSZNominalJetFakes=HConfig.GetTH2D(Name+"_jetFakes_ff_tt_qcd_stat_njet1_mvadm10_upPVRefitWithTracksBSZNominalJetFakes","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // jetFakes_ff_tt_qcd_stat_njet1_mvadm10_downPVRefitWithTracksBSZNominalJetFakes=HConfig.GetTH2D(Name+"_jetFakes_ff_tt_qcd_stat_njet1_mvadm10_downPVRefitWithTracksBSZNominalJetFakes","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // jetFakes_ff_tt_qcd_stat_njet2_mvadm10_upPVRefitWithTracksBSZNominalJetFakes=HConfig.GetTH2D(Name+"_jetFakes_ff_tt_qcd_stat_njet2_mvadm10_upPVRefitWithTracksBSZNominalJetFakes","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // jetFakes_ff_tt_qcd_stat_njet2_mvadm10_downPVRefitWithTracksBSZNominalJetFakes=HConfig.GetTH2D(Name+"_jetFakes_ff_tt_qcd_stat_njet2_mvadm10_downPVRefitWithTracksBSZNominalJetFakes","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // jetFakes_ff_tt_qcd_met_closure_systUpPVRefitWithTracksBSZNominalJetFakes=HConfig.GetTH2D(Name+"_jetFakes_ff_tt_qcd_met_closure_systUpPVRefitWithTracksBSZNominalJetFakes","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // jetFakes_ff_tt_qcd_met_closure_systDownPVRefitWithTracksBSZNominalJetFakes=HConfig.GetTH2D(Name+"_jetFakes_ff_tt_qcd_met_closure_systDownPVRefitWithTracksBSZNominalJetFakes","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");



  // CMS_eff_t_pThigh_MVADM10_13TeVUpZTT=HConfig.GetTH2D(Name+"_CMS_eff_t_pThigh_MVADM10_13TeVUpZTT","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // CMS_eff_t_pThigh_MVADM10_13TeVDownZTT=HConfig.GetTH2D(Name+"_CMS_eff_t_pThigh_MVADM10_13TeVDownZTT","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // CMS_eff_t_trg_MVADM10_13TeVUpZTT=HConfig.GetTH2D(Name+"_CMS_eff_t_trg_MVADM10_13TeVUpZTT","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // CMS_eff_t_trg_MVADM10_13TeVDownZTT=HConfig.GetTH2D(Name+"_CMS_eff_t_trg_MVADM10_13TeVDownZTT","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // CMS_htt_dyShape_13TeVUpZTT=HConfig.GetTH2D(Name+"_CMS_htt_dyShape_13TeVUpZTT","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // CMS_htt_dyShape_13TeVDownZTT=HConfig.GetTH2D(Name+"_CMS_htt_dyShape_13TeVDownZTT","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // jetFakes_ff_tt_qcd_stat_njet0_mvadm10_upZTT=HConfig.GetTH2D(Name+"_jetFakes_ff_tt_qcd_stat_njet0_mvadm10_upZTT","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // jetFakes_ff_tt_qcd_stat_njet0_mvadm10_downZTT=HConfig.GetTH2D(Name+"_jetFakes_ff_tt_qcd_stat_njet0_mvadm10_downZTT","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // jetFakes_ff_tt_qcd_stat_njet1_mvadm10_upZTT=HConfig.GetTH2D(Name+"_jetFakes_ff_tt_qcd_stat_njet1_mvadm10_upZTT","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // jetFakes_ff_tt_qcd_stat_njet1_mvadm10_downZTT=HConfig.GetTH2D(Name+"_jetFakes_ff_tt_qcd_stat_njet1_mvadm10_downZTT","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // jetFakes_ff_tt_qcd_stat_njet2_mvadm10_upZTT=HConfig.GetTH2D(Name+"_jetFakes_ff_tt_qcd_stat_njet2_mvadm10_upZTT","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // jetFakes_ff_tt_qcd_stat_njet2_mvadm10_downZTT=HConfig.GetTH2D(Name+"_jetFakes_ff_tt_qcd_stat_njet2_mvadm10_downZTT","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // jetFakes_ff_tt_qcd_met_closure_systUpZTT=HConfig.GetTH2D(Name+"_jetFakes_ff_tt_qcd_met_closure_systUpZTT","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // jetFakes_ff_tt_qcd_met_closure_systDownZTT=HConfig.GetTH2D(Name+"_jetFakes_ff_tt_qcd_met_closure_systDownZTT","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  
  // CMS_eff_t_pThigh_MVADM10_13TeVUpPVRefitBSZTT=HConfig.GetTH2D(Name+"_CMS_eff_t_pThigh_MVADM10_13TeVUpPVRefitBSZTT","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // CMS_eff_t_pThigh_MVADM10_13TeVDownPVRefitBSZTT=HConfig.GetTH2D(Name+"_CMS_eff_t_pThigh_MVADM10_13TeVDownPVRefitBSZTT","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // CMS_eff_t_trg_MVADM10_13TeVUpPVRefitBSZTT=HConfig.GetTH2D(Name+"_CMS_eff_t_trg_MVADM10_13TeVUpPVRefitBSZTT","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // CMS_eff_t_trg_MVADM10_13TeVDownPVRefitBSZTT=HConfig.GetTH2D(Name+"_CMS_eff_t_trg_MVADM10_13TeVDownPVRefitBSZTT","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // CMS_htt_dyShape_13TeVUpPVRefitBSZTT=HConfig.GetTH2D(Name+"_CMS_htt_dyShape_13TeVUpPVRefitBSZTT","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // CMS_htt_dyShape_13TeVDownPVRefitBSZTT=HConfig.GetTH2D(Name+"_CMS_htt_dyShape_13TeVDownPVRefitBSZTT","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // jetFakes_ff_tt_qcd_stat_njet0_mvadm10_upPVRefitBSZTT=HConfig.GetTH2D(Name+"_jetFakes_ff_tt_qcd_stat_njet0_mvadm10_upPVRefitBSZTT","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // jetFakes_ff_tt_qcd_stat_njet0_mvadm10_downPVRefitBSZTT=HConfig.GetTH2D(Name+"_jetFakes_ff_tt_qcd_stat_njet0_mvadm10_downPVRefitBSZTT","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // jetFakes_ff_tt_qcd_stat_njet1_mvadm10_upPVRefitBSZTT=HConfig.GetTH2D(Name+"_jetFakes_ff_tt_qcd_stat_njet1_mvadm10_upPVRefitBSZTT","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // jetFakes_ff_tt_qcd_stat_njet1_mvadm10_downPVRefitBSZTT=HConfig.GetTH2D(Name+"_jetFakes_ff_tt_qcd_stat_njet1_mvadm10_downPVRefitBSZTT","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // jetFakes_ff_tt_qcd_stat_njet2_mvadm10_upPVRefitBSZTT=HConfig.GetTH2D(Name+"_jetFakes_ff_tt_qcd_stat_njet2_mvadm10_upPVRefitBSZTT","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // jetFakes_ff_tt_qcd_stat_njet2_mvadm10_downPVRefitBSZTT=HConfig.GetTH2D(Name+"_jetFakes_ff_tt_qcd_stat_njet2_mvadm10_downPVRefitBSZTT","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // jetFakes_ff_tt_qcd_met_closure_systUpPVRefitBSZTT=HConfig.GetTH2D(Name+"_jetFakes_ff_tt_qcd_met_closure_systUpPVRefitBSZTT","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // jetFakes_ff_tt_qcd_met_closure_systDownPVRefitBSZTT=HConfig.GetTH2D(Name+"_jetFakes_ff_tt_qcd_met_closure_systDownPVRefitBSZTT","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");

  // CMS_eff_t_pThigh_MVADM10_13TeVUpPVRefitBSZNominalZTT=HConfig.GetTH2D(Name+"_CMS_eff_t_pThigh_MVADM10_13TeVUpPVRefitBSZNominalZTT","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // CMS_eff_t_pThigh_MVADM10_13TeVDownPVRefitBSZNominalZTT=HConfig.GetTH2D(Name+"_CMS_eff_t_pThigh_MVADM10_13TeVDownPVRefitBSZNominalZTT","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // CMS_eff_t_trg_MVADM10_13TeVUpPVRefitBSZNominalZTT=HConfig.GetTH2D(Name+"_CMS_eff_t_trg_MVADM10_13TeVUpPVRefitBSZNominalZTT","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // CMS_eff_t_trg_MVADM10_13TeVDownPVRefitBSZNominalZTT=HConfig.GetTH2D(Name+"_CMS_eff_t_trg_MVADM10_13TeVDownPVRefitBSZNominalZTT","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // CMS_htt_dyShape_13TeVUpPVRefitBSZNominalZTT=HConfig.GetTH2D(Name+"_CMS_htt_dyShape_13TeVUpPVRefitBSZNominalZTT","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // CMS_htt_dyShape_13TeVDownPVRefitBSZNominalZTT=HConfig.GetTH2D(Name+"_CMS_htt_dyShape_13TeVDownPVRefitBSZNominalZTT","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // jetFakes_ff_tt_qcd_stat_njet0_mvadm10_upPVRefitBSZNominalZTT=HConfig.GetTH2D(Name+"_jetFakes_ff_tt_qcd_stat_njet0_mvadm10_upPVRefitBSZNominalZTT","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // jetFakes_ff_tt_qcd_stat_njet0_mvadm10_downPVRefitBSZNominalZTT=HConfig.GetTH2D(Name+"_jetFakes_ff_tt_qcd_stat_njet0_mvadm10_downPVRefitBSZNominalZTT","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // jetFakes_ff_tt_qcd_stat_njet1_mvadm10_upPVRefitBSZNominalZTT=HConfig.GetTH2D(Name+"_jetFakes_ff_tt_qcd_stat_njet1_mvadm10_upPVRefitBSZNominalZTT","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // jetFakes_ff_tt_qcd_stat_njet1_mvadm10_downPVRefitBSZNominalZTT=HConfig.GetTH2D(Name+"_jetFakes_ff_tt_qcd_stat_njet1_mvadm10_downPVRefitBSZNominalZTT","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // jetFakes_ff_tt_qcd_stat_njet2_mvadm10_upPVRefitBSZNominalZTT=HConfig.GetTH2D(Name+"_jetFakes_ff_tt_qcd_stat_njet2_mvadm10_upPVRefitBSZNominalZTT","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // jetFakes_ff_tt_qcd_stat_njet2_mvadm10_downPVRefitBSZNominalZTT=HConfig.GetTH2D(Name+"_jetFakes_ff_tt_qcd_stat_njet2_mvadm10_downPVRefitBSZNominalZTT","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // jetFakes_ff_tt_qcd_met_closure_systUpPVRefitBSZNominalZTT=HConfig.GetTH2D(Name+"_jetFakes_ff_tt_qcd_met_closure_systUpPVRefitBSZNominalZTT","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // jetFakes_ff_tt_qcd_met_closure_systDownPVRefitBSZNominalZTT=HConfig.GetTH2D(Name+"_jetFakes_ff_tt_qcd_met_closure_systDownPVRefitBSZNominalZTT","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");

  CMS_eff_t_pThigh_MVADM10_13TeVUpPVRefitWithTracksBSZTT=HConfig.GetTH2D(Name+"_CMS_eff_t_pThigh_MVADM10_13TeVUpPVRefitWithTracksBSZTT","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  CMS_eff_t_pThigh_MVADM10_13TeVDownPVRefitWithTracksBSZTT=HConfig.GetTH2D(Name+"_CMS_eff_t_pThigh_MVADM10_13TeVDownPVRefitWithTracksBSZTT","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  CMS_eff_t_trg_MVADM10_13TeVUpPVRefitWithTracksBSZTT=HConfig.GetTH2D(Name+"_CMS_eff_t_trg_MVADM10_13TeVUpPVRefitWithTracksBSZTT","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  CMS_eff_t_trg_MVADM10_13TeVDownPVRefitWithTracksBSZTT=HConfig.GetTH2D(Name+"_CMS_eff_t_trg_MVADM10_13TeVDownPVRefitWithTracksBSZTT","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  CMS_htt_dyShape_13TeVUpPVRefitWithTracksBSZTT=HConfig.GetTH2D(Name+"_CMS_htt_dyShape_13TeVUpPVRefitWithTracksBSZTT","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  CMS_htt_dyShape_13TeVDownPVRefitWithTracksBSZTT=HConfig.GetTH2D(Name+"_CMS_htt_dyShape_13TeVDownPVRefitWithTracksBSZTT","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  jetFakes_ff_tt_qcd_stat_njet0_mvadm10_upPVRefitWithTracksBSZTT=HConfig.GetTH2D(Name+"_jetFakes_ff_tt_qcd_stat_njet0_mvadm10_upPVRefitWithTracksBSZTT","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  jetFakes_ff_tt_qcd_stat_njet0_mvadm10_downPVRefitWithTracksBSZTT=HConfig.GetTH2D(Name+"_jetFakes_ff_tt_qcd_stat_njet0_mvadm10_downPVRefitWithTracksBSZTT","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  jetFakes_ff_tt_qcd_stat_njet1_mvadm10_upPVRefitWithTracksBSZTT=HConfig.GetTH2D(Name+"_jetFakes_ff_tt_qcd_stat_njet1_mvadm10_upPVRefitWithTracksBSZTT","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  jetFakes_ff_tt_qcd_stat_njet1_mvadm10_downPVRefitWithTracksBSZTT=HConfig.GetTH2D(Name+"_jetFakes_ff_tt_qcd_stat_njet1_mvadm10_downPVRefitWithTracksBSZTT","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  jetFakes_ff_tt_qcd_stat_njet2_mvadm10_upPVRefitWithTracksBSZTT=HConfig.GetTH2D(Name+"_jetFakes_ff_tt_qcd_stat_njet2_mvadm10_upPVRefitWithTracksBSZTT","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  jetFakes_ff_tt_qcd_stat_njet2_mvadm10_downPVRefitWithTracksBSZTT=HConfig.GetTH2D(Name+"_jetFakes_ff_tt_qcd_stat_njet2_mvadm10_downPVRefitWithTracksBSZTT","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  jetFakes_ff_tt_qcd_met_closure_systUpPVRefitWithTracksBSZTT=HConfig.GetTH2D(Name+"_jetFakes_ff_tt_qcd_met_closure_systUpPVRefitWithTracksBSZTT","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  jetFakes_ff_tt_qcd_met_closure_systDownPVRefitWithTracksBSZTT=HConfig.GetTH2D(Name+"_jetFakes_ff_tt_qcd_met_closure_systDownPVRefitWithTracksBSZTT","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");


  PrefiringUp_PVRefitWithTracksBSZTT=HConfig.GetTH2D(Name+"_PrefiringUp_PVRefitWithTracksBSZTT","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  PrefiringDown_PVRefitWithTracksBSZTT=HConfig.GetTH2D(Name+"_PrefiringDown_PVRefitWithTracksBSZTT","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  
  // CMS_eff_t_pThigh_MVADM10_13TeVUpPVRefitWithTracksBSZNominalZTT=HConfig.GetTH2D(Name+"_CMS_eff_t_pThigh_MVADM10_13TeVUpPVRefitWithTracksBSZNominalZTT","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // CMS_eff_t_pThigh_MVADM10_13TeVDownPVRefitWithTracksBSZNominalZTT=HConfig.GetTH2D(Name+"_CMS_eff_t_pThigh_MVADM10_13TeVDownPVRefitWithTracksBSZNominalZTT","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // CMS_eff_t_trg_MVADM10_13TeVUpPVRefitWithTracksBSZNominalZTT=HConfig.GetTH2D(Name+"_CMS_eff_t_trg_MVADM10_13TeVUpPVRefitWithTracksBSZNominalZTT","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // CMS_eff_t_trg_MVADM10_13TeVDownPVRefitWithTracksBSZNominalZTT=HConfig.GetTH2D(Name+"_CMS_eff_t_trg_MVADM10_13TeVDownPVRefitWithTracksBSZNominalZTT","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // CMS_htt_dyShape_13TeVUpPVRefitWithTracksBSZNominalZTT=HConfig.GetTH2D(Name+"_CMS_htt_dyShape_13TeVUpPVRefitWithTracksBSZNominalZTT","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // CMS_htt_dyShape_13TeVDownPVRefitWithTracksBSZNominalZTT=HConfig.GetTH2D(Name+"_CMS_htt_dyShape_13TeVDownPVRefitWithTracksBSZNominalZTT","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // jetFakes_ff_tt_qcd_stat_njet0_mvadm10_upPVRefitWithTracksBSZNominalZTT=HConfig.GetTH2D(Name+"_jetFakes_ff_tt_qcd_stat_njet0_mvadm10_upPVRefitWithTracksBSZNominalZTT","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // jetFakes_ff_tt_qcd_stat_njet0_mvadm10_downPVRefitWithTracksBSZNominalZTT=HConfig.GetTH2D(Name+"_jetFakes_ff_tt_qcd_stat_njet0_mvadm10_downPVRefitWithTracksBSZNominalZTT","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // jetFakes_ff_tt_qcd_stat_njet1_mvadm10_upPVRefitWithTracksBSZNominalZTT=HConfig.GetTH2D(Name+"_jetFakes_ff_tt_qcd_stat_njet1_mvadm10_upPVRefitWithTracksBSZNominalZTT","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // jetFakes_ff_tt_qcd_stat_njet1_mvadm10_downPVRefitWithTracksBSZNominalZTT=HConfig.GetTH2D(Name+"_jetFakes_ff_tt_qcd_stat_njet1_mvadm10_downPVRefitWithTracksBSZNominalZTT","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // jetFakes_ff_tt_qcd_stat_njet2_mvadm10_upPVRefitWithTracksBSZNominalZTT=HConfig.GetTH2D(Name+"_jetFakes_ff_tt_qcd_stat_njet2_mvadm10_upPVRefitWithTracksBSZNominalZTT","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // jetFakes_ff_tt_qcd_stat_njet2_mvadm10_downPVRefitWithTracksBSZNominalZTT=HConfig.GetTH2D(Name+"_jetFakes_ff_tt_qcd_stat_njet2_mvadm10_downPVRefitWithTracksBSZNominalZTT","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // jetFakes_ff_tt_qcd_met_closure_systUpPVRefitWithTracksBSZNominalZTT=HConfig.GetTH2D(Name+"_jetFakes_ff_tt_qcd_met_closure_systUpPVRefitWithTracksBSZNominalZTT","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");
  // jetFakes_ff_tt_qcd_met_closure_systDownPVRefitWithTracksBSZNominalZTT=HConfig.GetTH2D(Name+"_jetFakes_ff_tt_qcd_met_closure_systDownPVRefitWithTracksBSZNominalZTT","acop angle",5,0.,2*TMath::Pi(),7,0.3,1,"Acop angle","Events");

  
  Selection::ConfigureHistograms();   //   do not remove
  HConfig.GetHistoInfo(types,CrossSectionandAcceptance,legend,colour);  // do not remove
  
}

void  HCPTauTau::Store_ExtraDist(){

  //every new histo should be addedd to Extradist1d vector, just push it back;
  // Extradist1d.push_back(&Tau1PT);
  // Extradist1d.push_back(&Tau1E);
  // Extradist1d.push_back(&Tau1Mass);
  // Extradist1d.push_back(&Tau1Phi);
  // Extradist1d.push_back(&Tau1Eta);
  // Extradist1d.push_back(&Tau1dz);
  // Extradist1d.push_back(&Tau1HPSDecayMode);
  // Extradist1d.push_back(&Tau1MVADecayMode);
  // Extradist1d.push_back(&Tau1GenMatch);
  // Extradist1d.push_back(&Tau2PT);
  // Extradist1d.push_back(&Tau2E);
  // Extradist1d.push_back(&Tau2Mass);
  // Extradist1d.push_back(&Tau2Phi);
  // Extradist1d.push_back(&Tau2Eta);
  // Extradist1d.push_back(&Tau2dz);
  // Extradist1d.push_back(&Tau2HPSDecayMode);
  // Extradist1d.push_back(&Tau2MVADecayMode);
  // Extradist1d.push_back(&Tau2GenMatch);
  
  // Extradist1d.push_back(&Tau1isolation);
  // Extradist1d.push_back(&Tau2isolation);
  /*
    Extradist1d.push_back(&againstElectronVLooseMVA6_Tau1);
    Extradist1d.push_back(&againstElectronLooseMVA6_Tau1);
    Extradist1d.push_back(&againstElectronMediumMVA6_Tau1);
    Extradist1d.push_back(&againstElectronTightMVA6_Tau1);
    Extradist1d.push_back(&againstElectronVTightMVA6_Tau1);
    Extradist1d.push_back(&againstMuonLoose3_Tau1);
    Extradist1d.push_back(&againstMuonTight3_Tau1);
    Extradist1d.push_back(&byCombinedIsolationDeltaBetaCorrRaw3Hits_Tau1);

    Extradist1d.push_back(&againstElectronVLooseMVA6_Tau2);
    Extradist1d.push_back(&againstElectronLooseMVA6_Tau2);
    Extradist1d.push_back(&againstElectronMediumMVA6_Tau2);
    Extradist1d.push_back(&againstElectronTightMVA6_Tau2);
    Extradist1d.push_back(&againstElectronVTightMVA6_Tau2);
    Extradist1d.push_back(&againstMuonLoose3_Tau2);
    Extradist1d.push_back(&againstMuonTight3_Tau2);
    Extradist1d.push_back(&byCombinedIsolationDeltaBetaCorrRaw3Hits_Tau2);
  */
  // Extradist1d.push_back(&ExtraLeptonVeto);

  // Extradist1d.push_back(&dRTauTau);
  // Extradist1d.push_back(&TauTauVisMass);
  // //  Extradist1d.push_back(&TauTauTruthMass);
  // Extradist1d.push_back(&TauTauFullMass);
  
  // Extradist1d.push_back(&QCDShape);
  // Extradist1d.push_back(&NQCD);
  // // Extradist1d.push_back(&TauTauFullMass_B);
  // // Extradist1d.push_back(&TauTauFullMass_C);
  // // Extradist1d.push_back(&TauTauFullMass_D);

  // Extradist1d.push_back(&NFFData);
  // Extradist1d.push_back(&NFFLeadMC);
  // Extradist1d.push_back(&W_res);

  // Extradist1d.push_back(&MET);
  // Extradist1d.push_back(&METphi);
  // Extradist1d.push_back(&PUPPImet);
  // Extradist1d.push_back(&PUPPImetphi);
  // Extradist1d.push_back(&PUPPImetcorr);
  // Extradist1d.push_back(&PUPPImetcorrphi);
  // Extradist1d.push_back(&TransverseMass);

  // Extradist1d.push_back(&NPrimeVtx);
  // Extradist1d.push_back(&NPU);
  // Extradist1d.push_back(&RHO);


  // Extradist1d.push_back(&NbJets);

  // Extradist1d.push_back(&HPtVis);
  // Extradist1d.push_back(&TauTauVisPT);
  // Extradist1d.push_back(&TauTauFullPT);
  // Extradist1d.push_back(&Mjj);
  // Extradist1d.push_back(&dijetpt);
  // Extradist1d.push_back(&dijetphi);
  // Extradist1d.push_back(&jdeta);
  // Extradist1d.push_back(&jdphi);
  // Extradist1d.push_back(&jpt_2);
  // Extradist1d.push_back(&jeta_2);
  // Extradist1d.push_back(&jphi_2);
  // Extradist1d.push_back(&jpt_1);
  // Extradist1d.push_back(&jeta_1);
  // Extradist1d.push_back(&jphi_1);

  // Extradist1d.push_back(&ResolPullTauTauFroma1a1MZMomentum);
  // Extradist1d.push_back(&ResolPullTauminusFroma1a1MZMomentum);

  // Extradist1d.push_back(&ResolPullTauplusFroma1a1MZMomentum);
  // Extradist1d.push_back(&ResolPullTauFroma1a1MZMomentum);

  // Extradist1d.push_back(&ResolPullXVtxIna1a1);
  // Extradist1d.push_back(&ResolPullYVtxIna1a1);
  // Extradist1d.push_back(&ResolPullZVtxIna1a1);

  // Extradist1d.push_back(&tauminusa1a1MomentumPairConstraint);
  // Extradist1d.push_back(&tauplusa1a1MomentumPairConstraint);
  
  // Extradist1d.push_back(&polarimetricAcopAngle);
 
  // Extradist1d.push_back(&polarimetricAcopAnglePVRefitNoBS);
  // Extradist1d.push_back(&polarimetricAcopAnglePVRefitBS);
  // Extradist1d.push_back(&polarimetricAcopAnglePVRefitNoBSZNominal);
  // Extradist1d.push_back(&polarimetricAcopAnglePVRefitBSZNominal);

  // Extradist1d.push_back(&polarimetricAcopAngleMVADM);

  // Extradist1d.push_back(&polarimetricAcopAnglePVRefitNoBSMVADM);
  // Extradist1d.push_back(&polarimetricAcopAnglePVRefitBSMVADM);
  // Extradist1d.push_back(&polarimetricAcopAnglePVRefitNoBSZNominalMVADM);
  // Extradist1d.push_back(&polarimetricAcopAnglePVRefitBSZNominalMVADM);

  //  Extradist1d.push_back(&polarimetricAcopAnglePVRefitWithTracksBSMVADM);
  //Extradist1d.push_back(&polarimetricAcopAnglePVRefitWithTracksBSZNominalMVADM);

  // Extradist1d.push_back(&PVXResol);
  // Extradist1d.push_back(&PVXNoBSResol);
  // Extradist1d.push_back(&PVXBSResol);

  // Extradist1d.push_back(&PVYResol);
  // Extradist1d.push_back(&PVYNoBSResol);
  // Extradist1d.push_back(&PVYBSResol);
  
  // Extradist1d.push_back(&PVZResol);
  // Extradist1d.push_back(&PVZNoBSResol);
  // Extradist1d.push_back(&PVZBSResol); 
 
  // Extradist1d.push_back(&PVXNoBSOnlyResol);
  // Extradist1d.push_back(&PVXBSOnlyResol);
  
  // Extradist1d.push_back(&PVYNoBSOnlyResol);
  // Extradist1d.push_back(&PVYBSOnlyResol);
  
  // Extradist1d.push_back(&PVZNoBSOnlyResol);
  // Extradist1d.push_back(&PVZBSOnlyResol);

  // Extradist1d.push_back(&polarimetricAcopAngleTruthA1);
  
  // Extradist1d.push_back(&test);  
  
  // Extradist1d.push_back(&PurityDM);
  // Extradist1d.push_back(&PurityNewMVA);

  // Extradist1d.push_back(&TauPxResPull);
  // Extradist1d.push_back(&TauPyResPull);
  // Extradist1d.push_back(&TauPzResPull);

  // Extradist1d.push_back(&TauPxResPullMVA);
  // Extradist1d.push_back(&TauPyResPullMVA);
  // Extradist1d.push_back(&TauPzResPullMVA);

  // Extradist1d.push_back(&HiggsBDTScore);
  // Extradist1d.push_back(&JetFakesBDTScore);
  // Extradist1d.push_back(&ZTTBDTScore);


  // Extradist1d.push_back(&Tau1PTa1a1);
  // Extradist1d.push_back(&Tau1Ea1a1);
  // Extradist1d.push_back(&Tau1Massa1a1);
  // Extradist1d.push_back(&Tau1Phia1a1);
  // Extradist1d.push_back(&Tau1Etaa1a1);
  // Extradist1d.push_back(&Tau1dza1a1);

  // Extradist1d.push_back(&Tau2PTa1a1);
  // Extradist1d.push_back(&Tau2Ea1a1);
  // Extradist1d.push_back(&Tau2Massa1a1);
  // Extradist1d.push_back(&Tau2Phia1a1);
  // Extradist1d.push_back(&Tau2Etaa1a1);
  // Extradist1d.push_back(&Tau2dza1a1);
  
  // Extradist1d.push_back(&TauTauVisMassa1a1);
  // Extradist1d.push_back(&TauTauFullMassa1a1);
  // Extradist1d.push_back(&TauTauVisPTa1a1);
  // Extradist1d.push_back(&TauTauFullPTa1a1);
  // Extradist1d.push_back(&Mjja1a1);
  // Extradist1d.push_back(&dijetpta1a1);
  // Extradist1d.push_back(&dijetphia1a1);
  // Extradist1d.push_back(&jdetaa1a1);
  // Extradist1d.push_back(&jdphia1a1);
  // Extradist1d.push_back(&jpt_2a1a1);
  // Extradist1d.push_back(&jeta_2a1a1);
  // Extradist1d.push_back(&jphi_2a1a1);
  // Extradist1d.push_back(&jpt_1a1a1);
  // Extradist1d.push_back(&jeta_1a1a1);
  // Extradist1d.push_back(&jphi_1a1a1);
  
  // Extradist1d.push_back(&PUPPImetcorra1a1);
  // Extradist1d.push_back(&PUPPImetcorrphia1a1);

  // Extradist1d.push_back(&NbJetsa1a1);

  Extradist1d.push_back(&HiggsBDTScorea1a1);
  Extradist1d.push_back(&JetFakesBDTScorea1a1);
  Extradist1d.push_back(&ZTTBDTScorea1a1);


  // Extradist1d.push_back(&polarimetricAcopAngleMVADMHiggs);
  // Extradist1d.push_back(&polarimetricAcopAnglePVRefitBSMVADMHiggs);
  // Extradist1d.push_back(&polarimetricAcopAnglePVRefitBSZNominalMVADMHiggs);
  // Extradist1d.push_back(&polarimetricAcopAnglePVRefitWithTracksBSMVADMHiggs);
  // Extradist1d.push_back(&polarimetricAcopAnglePVRefitWithTracksBSZNominalMVADMHiggs);

  // Extradist1d.push_back(&polarimetricAcopAngleMVADMJetFakes);
  // Extradist1d.push_back(&polarimetricAcopAnglePVRefitBSMVADMJetFakes);
  // Extradist1d.push_back(&polarimetricAcopAnglePVRefitBSZNominalMVADMJetFakes);
  // Extradist1d.push_back(&polarimetricAcopAnglePVRefitWithTracksBSMVADMJetFakes);
  // Extradist1d.push_back(&polarimetricAcopAnglePVRefitWithTracksBSZNominalMVADMJetFakes);

  // Extradist1d.push_back(&polarimetricAcopAngleMVADMZTTEmbed);
  // Extradist1d.push_back(&polarimetricAcopAnglePVRefitBSMVADMZTTEmbed);
  // Extradist1d.push_back(&polarimetricAcopAnglePVRefitBSZNominalMVADMZTTEmbed);
  // Extradist1d.push_back(&polarimetricAcopAnglePVRefitWithTracksBSMVADMZTTEmbed);
  // Extradist1d.push_back(&polarimetricAcopAnglePVRefitWithTracksBSZNominalMVADMZTTEmbed);

  // Extradist1d.push_back(&polarimetricAcopAnglePVRefitWithTracksBSMVADMHiggsUnrolled0005);
  // Extradist1d.push_back(&polarimetricAcopAnglePVRefitWithTracksBSMVADMHiggsUnrolled0506);
  // Extradist1d.push_back(&polarimetricAcopAnglePVRefitWithTracksBSMVADMHiggsUnrolled0607);
  // Extradist1d.push_back(&polarimetricAcopAnglePVRefitWithTracksBSMVADMHiggsUnrolled0710);
  
  // Extradist1d.push_back(&polarimetricAcopAnglePVRefitWithTracksBSMVADMJetFakesUnrolled0005);
  // Extradist1d.push_back(&polarimetricAcopAnglePVRefitWithTracksBSMVADMJetFakesUnrolled0506);
  // Extradist1d.push_back(&polarimetricAcopAnglePVRefitWithTracksBSMVADMJetFakesUnrolled0607);
  // Extradist1d.push_back(&polarimetricAcopAnglePVRefitWithTracksBSMVADMJetFakesUnrolled0710);

  // Extradist1d.push_back(&polarimetricAcopAnglePVRefitWithTracksBSMVADMZTTUnrolled0005);
  // Extradist1d.push_back(&polarimetricAcopAnglePVRefitWithTracksBSMVADMZTTUnrolled0506);
  // Extradist1d.push_back(&polarimetricAcopAnglePVRefitWithTracksBSMVADMZTTUnrolled0607);
  // Extradist1d.push_back(&polarimetricAcopAnglePVRefitWithTracksBSMVADMZTTUnrolled0710);

  Extradist1d.push_back(&polarimetricAcopAnglePVRefitWithTracksBSMVADMHiggsUnrolled);
  Extradist1d.push_back(&polarimetricAcopAnglePVRefitWithTracksBSMVADMJetFakesUnrolled);
  Extradist1d.push_back(&polarimetricAcopAnglePVRefitWithTracksBSMVADMZTTUnrolled);

  // Extradist2d.push_back(&polarimetricAcopAngleMVADMHiggs);
  // Extradist2d.push_back(&polarimetricAcopAnglePVRefitBSMVADMHiggs);
  // Extradist2d.push_back(&polarimetricAcopAnglePVRefitBSZNominalMVADMHiggs);
  Extradist2d.push_back(&polarimetricAcopAnglePVRefitWithTracksBSMVADMHiggs);
  //  Extradist2d.push_back(&polarimetricAcopAnglePVRefitWithTracksBSZNominalMVADMHiggs);

  //Extradist2d.push_back(&polarimetricAcopAngleMVADMJetFakes);
  //Extradist2d.push_back(&polarimetricAcopAnglePVRefitBSMVADMJetFakes);
  //Extradist2d.push_back(&polarimetricAcopAnglePVRefitBSZNominalMVADMJetFakes);
  Extradist2d.push_back(&polarimetricAcopAnglePVRefitWithTracksBSMVADMJetFakes);
  //  Extradist2d.push_back(&polarimetricAcopAnglePVRefitWithTracksBSZNominalMVADMJetFakes);

  //Extradist2d.push_back(&polarimetricAcopAngleMVADMZTT);
  //Extradist2d.push_back(&polarimetricAcopAnglePVRefitBSMVADMZTT);
  //Extradist2d.push_back(&polarimetricAcopAnglePVRefitBSZNominalMVADMZTT);
  Extradist2d.push_back(&polarimetricAcopAnglePVRefitWithTracksBSMVADMZTT);
  //  Extradist2d.push_back(&polarimetricAcopAnglePVRefitWithTracksBSZNominalMVADMZTT);


  // Extradist2d.push_back(&CMS_eff_t_pThigh_MVADM10_13TeVUpHiggs);
  // Extradist2d.push_back(&CMS_eff_t_pThigh_MVADM10_13TeVDownHiggs);
  // Extradist2d.push_back(&CMS_eff_t_trg_MVADM10_13TeVUpHiggs);
  // Extradist2d.push_back(&CMS_eff_t_trg_MVADM10_13TeVDownHiggs);
  // Extradist2d.push_back(&CMS_htt_dyShape_13TeVUpHiggs);
  // Extradist2d.push_back(&CMS_htt_dyShape_13TeVDownHiggs);
  // Extradist2d.push_back(&jetFakes_ff_tt_qcd_stat_njet0_mvadm10_upHiggs);
  // Extradist2d.push_back(&jetFakes_ff_tt_qcd_stat_njet0_mvadm10_downHiggs);
  // Extradist2d.push_back(&jetFakes_ff_tt_qcd_stat_njet1_mvadm10_upHiggs);
  // Extradist2d.push_back(&jetFakes_ff_tt_qcd_stat_njet1_mvadm10_downHiggs);
  // Extradist2d.push_back(&jetFakes_ff_tt_qcd_stat_njet2_mvadm10_upHiggs);
  // Extradist2d.push_back(&jetFakes_ff_tt_qcd_stat_njet2_mvadm10_downHiggs);
  // Extradist2d.push_back(&jetFakes_ff_tt_qcd_met_closure_systUpHiggs);
  // Extradist2d.push_back(&jetFakes_ff_tt_qcd_met_closure_systDownHiggs);
  
  // Extradist2d.push_back(&CMS_eff_t_pThigh_MVADM10_13TeVUpPVRefitBSHiggs);
  // Extradist2d.push_back(&CMS_eff_t_pThigh_MVADM10_13TeVDownPVRefitBSHiggs);
  // Extradist2d.push_back(&CMS_eff_t_trg_MVADM10_13TeVUpPVRefitBSHiggs);
  // Extradist2d.push_back(&CMS_eff_t_trg_MVADM10_13TeVDownPVRefitBSHiggs);
  // Extradist2d.push_back(&CMS_htt_dyShape_13TeVUpPVRefitBSHiggs);
  // Extradist2d.push_back(&CMS_htt_dyShape_13TeVDownPVRefitBSHiggs);
  // Extradist2d.push_back(&jetFakes_ff_tt_qcd_stat_njet0_mvadm10_upPVRefitBSHiggs);
  // Extradist2d.push_back(&jetFakes_ff_tt_qcd_stat_njet0_mvadm10_downPVRefitBSHiggs);
  // Extradist2d.push_back(&jetFakes_ff_tt_qcd_stat_njet1_mvadm10_upPVRefitBSHiggs);
  // Extradist2d.push_back(&jetFakes_ff_tt_qcd_stat_njet1_mvadm10_downPVRefitBSHiggs);
  // Extradist2d.push_back(&jetFakes_ff_tt_qcd_stat_njet2_mvadm10_upPVRefitBSHiggs);
  // Extradist2d.push_back(&jetFakes_ff_tt_qcd_stat_njet2_mvadm10_downPVRefitBSHiggs);
  // Extradist2d.push_back(&jetFakes_ff_tt_qcd_met_closure_systUpPVRefitBSHiggs);
  // Extradist2d.push_back(&jetFakes_ff_tt_qcd_met_closure_systDownPVRefitBSHiggs);

  // Extradist2d.push_back(&CMS_eff_t_pThigh_MVADM10_13TeVUpPVRefitBSZNominalHiggs);
  // Extradist2d.push_back(&CMS_eff_t_pThigh_MVADM10_13TeVDownPVRefitBSZNominalHiggs);
  // Extradist2d.push_back(&CMS_eff_t_trg_MVADM10_13TeVUpPVRefitBSZNominalHiggs);
  // Extradist2d.push_back(&CMS_eff_t_trg_MVADM10_13TeVDownPVRefitBSZNominalHiggs);
  // Extradist2d.push_back(&CMS_htt_dyShape_13TeVUpPVRefitBSZNominalHiggs);
  // Extradist2d.push_back(&CMS_htt_dyShape_13TeVDownPVRefitBSZNominalHiggs);
  // Extradist2d.push_back(&jetFakes_ff_tt_qcd_stat_njet0_mvadm10_upPVRefitBSZNominalHiggs);
  // Extradist2d.push_back(&jetFakes_ff_tt_qcd_stat_njet0_mvadm10_downPVRefitBSZNominalHiggs);
  // Extradist2d.push_back(&jetFakes_ff_tt_qcd_stat_njet1_mvadm10_upPVRefitBSZNominalHiggs);
  // Extradist2d.push_back(&jetFakes_ff_tt_qcd_stat_njet1_mvadm10_downPVRefitBSZNominalHiggs);
  // Extradist2d.push_back(&jetFakes_ff_tt_qcd_stat_njet2_mvadm10_upPVRefitBSZNominalHiggs);
  // Extradist2d.push_back(&jetFakes_ff_tt_qcd_stat_njet2_mvadm10_downPVRefitBSZNominalHiggs);
  // Extradist2d.push_back(&jetFakes_ff_tt_qcd_met_closure_systUpPVRefitBSZNominalHiggs);
  // Extradist2d.push_back(&jetFakes_ff_tt_qcd_met_closure_systDownPVRefitBSZNominalHiggs);

  Extradist2d.push_back(&CMS_eff_t_pThigh_MVADM10_13TeVUpPVRefitWithTracksBSHiggs);
  Extradist2d.push_back(&CMS_eff_t_pThigh_MVADM10_13TeVDownPVRefitWithTracksBSHiggs);
  Extradist2d.push_back(&CMS_eff_t_trg_MVADM10_13TeVUpPVRefitWithTracksBSHiggs);
  Extradist2d.push_back(&CMS_eff_t_trg_MVADM10_13TeVDownPVRefitWithTracksBSHiggs);
  Extradist2d.push_back(&CMS_htt_dyShape_13TeVUpPVRefitWithTracksBSHiggs);
  Extradist2d.push_back(&CMS_htt_dyShape_13TeVDownPVRefitWithTracksBSHiggs);
  Extradist2d.push_back(&jetFakes_ff_tt_qcd_stat_njet0_mvadm10_upPVRefitWithTracksBSHiggs);
  Extradist2d.push_back(&jetFakes_ff_tt_qcd_stat_njet0_mvadm10_downPVRefitWithTracksBSHiggs);
  Extradist2d.push_back(&jetFakes_ff_tt_qcd_stat_njet1_mvadm10_upPVRefitWithTracksBSHiggs);
  Extradist2d.push_back(&jetFakes_ff_tt_qcd_stat_njet1_mvadm10_downPVRefitWithTracksBSHiggs);
  Extradist2d.push_back(&jetFakes_ff_tt_qcd_stat_njet2_mvadm10_upPVRefitWithTracksBSHiggs);
  Extradist2d.push_back(&jetFakes_ff_tt_qcd_stat_njet2_mvadm10_downPVRefitWithTracksBSHiggs);
  Extradist2d.push_back(&jetFakes_ff_tt_qcd_met_closure_systUpPVRefitWithTracksBSHiggs);
  Extradist2d.push_back(&jetFakes_ff_tt_qcd_met_closure_systDownPVRefitWithTracksBSHiggs);

  Extradist2d.push_back(&PrefiringUp_PVRefitWithTracksBSHiggs);
  Extradist2d.push_back(&PrefiringDown_PVRefitWithTracksBSHiggs);

  // Extradist2d.push_back(&CMS_eff_t_pThigh_MVADM10_13TeVUpPVRefitWithTracksBSZNominalHiggs);
  // Extradist2d.push_back(&CMS_eff_t_pThigh_MVADM10_13TeVDownPVRefitWithTracksBSZNominalHiggs);
  // Extradist2d.push_back(&CMS_eff_t_trg_MVADM10_13TeVUpPVRefitWithTracksBSZNominalHiggs);
  // Extradist2d.push_back(&CMS_eff_t_trg_MVADM10_13TeVDownPVRefitWithTracksBSZNominalHiggs);
  // Extradist2d.push_back(&CMS_htt_dyShape_13TeVUpPVRefitWithTracksBSZNominalHiggs);
  // Extradist2d.push_back(&CMS_htt_dyShape_13TeVDownPVRefitWithTracksBSZNominalHiggs);
  // Extradist2d.push_back(&jetFakes_ff_tt_qcd_stat_njet0_mvadm10_upPVRefitWithTracksBSZNominalHiggs);
  // Extradist2d.push_back(&jetFakes_ff_tt_qcd_stat_njet0_mvadm10_downPVRefitWithTracksBSZNominalHiggs);
  // Extradist2d.push_back(&jetFakes_ff_tt_qcd_stat_njet1_mvadm10_upPVRefitWithTracksBSZNominalHiggs);
  // Extradist2d.push_back(&jetFakes_ff_tt_qcd_stat_njet1_mvadm10_downPVRefitWithTracksBSZNominalHiggs);
  // Extradist2d.push_back(&jetFakes_ff_tt_qcd_stat_njet2_mvadm10_upPVRefitWithTracksBSZNominalHiggs);
  // Extradist2d.push_back(&jetFakes_ff_tt_qcd_stat_njet2_mvadm10_downPVRefitWithTracksBSZNominalHiggs);
  // Extradist2d.push_back(&jetFakes_ff_tt_qcd_met_closure_systUpPVRefitWithTracksBSZNominalHiggs);
  // Extradist2d.push_back(&jetFakes_ff_tt_qcd_met_closure_systDownPVRefitWithTracksBSZNominalHiggs);


  

  // Extradist2d.push_back(&CMS_eff_t_pThigh_MVADM10_13TeVUpJetFakes);
  // Extradist2d.push_back(&CMS_eff_t_pThigh_MVADM10_13TeVDownJetFakes);
  // Extradist2d.push_back(&CMS_eff_t_trg_MVADM10_13TeVUpJetFakes);
  // Extradist2d.push_back(&CMS_eff_t_trg_MVADM10_13TeVDownJetFakes);
  // Extradist2d.push_back(&CMS_htt_dyShape_13TeVUpJetFakes);
  // Extradist2d.push_back(&CMS_htt_dyShape_13TeVDownJetFakes);
  // Extradist2d.push_back(&jetFakes_ff_tt_qcd_stat_njet0_mvadm10_upJetFakes);
  // Extradist2d.push_back(&jetFakes_ff_tt_qcd_stat_njet0_mvadm10_downJetFakes);
  // Extradist2d.push_back(&jetFakes_ff_tt_qcd_stat_njet1_mvadm10_upJetFakes);
  // Extradist2d.push_back(&jetFakes_ff_tt_qcd_stat_njet1_mvadm10_downJetFakes);
  // Extradist2d.push_back(&jetFakes_ff_tt_qcd_stat_njet2_mvadm10_upJetFakes);
  // Extradist2d.push_back(&jetFakes_ff_tt_qcd_stat_njet2_mvadm10_downJetFakes);
  // Extradist2d.push_back(&jetFakes_ff_tt_qcd_met_closure_systUpJetFakes);
  // Extradist2d.push_back(&jetFakes_ff_tt_qcd_met_closure_systDownJetFakes);
  
  // Extradist2d.push_back(&CMS_eff_t_pThigh_MVADM10_13TeVUpPVRefitBSJetFakes);
  // Extradist2d.push_back(&CMS_eff_t_pThigh_MVADM10_13TeVDownPVRefitBSJetFakes);
  // Extradist2d.push_back(&CMS_eff_t_trg_MVADM10_13TeVUpPVRefitBSJetFakes);
  // Extradist2d.push_back(&CMS_eff_t_trg_MVADM10_13TeVDownPVRefitBSJetFakes);
  // Extradist2d.push_back(&CMS_htt_dyShape_13TeVUpPVRefitBSJetFakes);
  // Extradist2d.push_back(&CMS_htt_dyShape_13TeVDownPVRefitBSJetFakes);
  // Extradist2d.push_back(&jetFakes_ff_tt_qcd_stat_njet0_mvadm10_upPVRefitBSJetFakes);
  // Extradist2d.push_back(&jetFakes_ff_tt_qcd_stat_njet0_mvadm10_downPVRefitBSJetFakes);
  // Extradist2d.push_back(&jetFakes_ff_tt_qcd_stat_njet1_mvadm10_upPVRefitBSJetFakes);
  // Extradist2d.push_back(&jetFakes_ff_tt_qcd_stat_njet1_mvadm10_downPVRefitBSJetFakes);
  // Extradist2d.push_back(&jetFakes_ff_tt_qcd_stat_njet2_mvadm10_upPVRefitBSJetFakes);
  // Extradist2d.push_back(&jetFakes_ff_tt_qcd_stat_njet2_mvadm10_downPVRefitBSJetFakes);
  // Extradist2d.push_back(&jetFakes_ff_tt_qcd_met_closure_systUpPVRefitBSJetFakes);
  // Extradist2d.push_back(&jetFakes_ff_tt_qcd_met_closure_systDownPVRefitBSJetFakes);

  // Extradist2d.push_back(&CMS_eff_t_pThigh_MVADM10_13TeVUpPVRefitBSZNominalJetFakes);
  // Extradist2d.push_back(&CMS_eff_t_pThigh_MVADM10_13TeVDownPVRefitBSZNominalJetFakes);
  // Extradist2d.push_back(&CMS_eff_t_trg_MVADM10_13TeVUpPVRefitBSZNominalJetFakes);
  // Extradist2d.push_back(&CMS_eff_t_trg_MVADM10_13TeVDownPVRefitBSZNominalJetFakes);
  // Extradist2d.push_back(&CMS_htt_dyShape_13TeVUpPVRefitBSZNominalJetFakes);
  // Extradist2d.push_back(&CMS_htt_dyShape_13TeVDownPVRefitBSZNominalJetFakes);
  // Extradist2d.push_back(&jetFakes_ff_tt_qcd_stat_njet0_mvadm10_upPVRefitBSZNominalJetFakes);
  // Extradist2d.push_back(&jetFakes_ff_tt_qcd_stat_njet0_mvadm10_downPVRefitBSZNominalJetFakes);
  // Extradist2d.push_back(&jetFakes_ff_tt_qcd_stat_njet1_mvadm10_upPVRefitBSZNominalJetFakes);
  // Extradist2d.push_back(&jetFakes_ff_tt_qcd_stat_njet1_mvadm10_downPVRefitBSZNominalJetFakes);
  // Extradist2d.push_back(&jetFakes_ff_tt_qcd_stat_njet2_mvadm10_upPVRefitBSZNominalJetFakes);
  // Extradist2d.push_back(&jetFakes_ff_tt_qcd_stat_njet2_mvadm10_downPVRefitBSZNominalJetFakes);
  // Extradist2d.push_back(&jetFakes_ff_tt_qcd_met_closure_systUpPVRefitBSZNominalJetFakes);
  // Extradist2d.push_back(&jetFakes_ff_tt_qcd_met_closure_systDownPVRefitBSZNominalJetFakes);

  Extradist2d.push_back(&CMS_eff_t_pThigh_MVADM10_13TeVUpPVRefitWithTracksBSJetFakes);
  Extradist2d.push_back(&CMS_eff_t_pThigh_MVADM10_13TeVDownPVRefitWithTracksBSJetFakes);
  Extradist2d.push_back(&CMS_eff_t_trg_MVADM10_13TeVUpPVRefitWithTracksBSJetFakes);
  Extradist2d.push_back(&CMS_eff_t_trg_MVADM10_13TeVDownPVRefitWithTracksBSJetFakes);
  Extradist2d.push_back(&CMS_htt_dyShape_13TeVUpPVRefitWithTracksBSJetFakes);
  Extradist2d.push_back(&CMS_htt_dyShape_13TeVDownPVRefitWithTracksBSJetFakes);
  Extradist2d.push_back(&jetFakes_ff_tt_qcd_stat_njet0_mvadm10_upPVRefitWithTracksBSJetFakes);
  Extradist2d.push_back(&jetFakes_ff_tt_qcd_stat_njet0_mvadm10_downPVRefitWithTracksBSJetFakes);
  Extradist2d.push_back(&jetFakes_ff_tt_qcd_stat_njet1_mvadm10_upPVRefitWithTracksBSJetFakes);
  Extradist2d.push_back(&jetFakes_ff_tt_qcd_stat_njet1_mvadm10_downPVRefitWithTracksBSJetFakes);
  Extradist2d.push_back(&jetFakes_ff_tt_qcd_stat_njet2_mvadm10_upPVRefitWithTracksBSJetFakes);
  Extradist2d.push_back(&jetFakes_ff_tt_qcd_stat_njet2_mvadm10_downPVRefitWithTracksBSJetFakes);
  Extradist2d.push_back(&jetFakes_ff_tt_qcd_met_closure_systUpPVRefitWithTracksBSJetFakes);
  Extradist2d.push_back(&jetFakes_ff_tt_qcd_met_closure_systDownPVRefitWithTracksBSJetFakes);

  Extradist2d.push_back(&PrefiringUp_PVRefitWithTracksBSJetFakes);
  Extradist2d.push_back(&PrefiringDown_PVRefitWithTracksBSJetFakes);
  
  
  // Extradist2d.push_back(&CMS_eff_t_pThigh_MVADM10_13TeVUpPVRefitWithTracksBSZNominalJetFakes);
  // Extradist2d.push_back(&CMS_eff_t_pThigh_MVADM10_13TeVDownPVRefitWithTracksBSZNominalJetFakes);
  // Extradist2d.push_back(&CMS_eff_t_trg_MVADM10_13TeVUpPVRefitWithTracksBSZNominalJetFakes);
  // Extradist2d.push_back(&CMS_eff_t_trg_MVADM10_13TeVDownPVRefitWithTracksBSZNominalJetFakes);
  // Extradist2d.push_back(&CMS_htt_dyShape_13TeVUpPVRefitWithTracksBSZNominalJetFakes);
  // Extradist2d.push_back(&CMS_htt_dyShape_13TeVDownPVRefitWithTracksBSZNominalJetFakes);
  // Extradist2d.push_back(&jetFakes_ff_tt_qcd_stat_njet0_mvadm10_upPVRefitWithTracksBSZNominalJetFakes);
  // Extradist2d.push_back(&jetFakes_ff_tt_qcd_stat_njet0_mvadm10_downPVRefitWithTracksBSZNominalJetFakes);
  // Extradist2d.push_back(&jetFakes_ff_tt_qcd_stat_njet1_mvadm10_upPVRefitWithTracksBSZNominalJetFakes);
  // Extradist2d.push_back(&jetFakes_ff_tt_qcd_stat_njet1_mvadm10_downPVRefitWithTracksBSZNominalJetFakes);
  // Extradist2d.push_back(&jetFakes_ff_tt_qcd_stat_njet2_mvadm10_upPVRefitWithTracksBSZNominalJetFakes);
  // Extradist2d.push_back(&jetFakes_ff_tt_qcd_stat_njet2_mvadm10_downPVRefitWithTracksBSZNominalJetFakes);
  // Extradist2d.push_back(&jetFakes_ff_tt_qcd_met_closure_systUpPVRefitWithTracksBSZNominalJetFakes);
  // Extradist2d.push_back(&jetFakes_ff_tt_qcd_met_closure_systDownPVRefitWithTracksBSZNominalJetFakes);




  // Extradist2d.push_back(&CMS_eff_t_pThigh_MVADM10_13TeVUpZTT);
  // Extradist2d.push_back(&CMS_eff_t_pThigh_MVADM10_13TeVDownZTT);
  // Extradist2d.push_back(&CMS_eff_t_trg_MVADM10_13TeVUpZTT);
  // Extradist2d.push_back(&CMS_eff_t_trg_MVADM10_13TeVDownZTT);
  // Extradist2d.push_back(&CMS_htt_dyShape_13TeVUpZTT);
  // Extradist2d.push_back(&CMS_htt_dyShape_13TeVDownZTT);
  // Extradist2d.push_back(&jetFakes_ff_tt_qcd_stat_njet0_mvadm10_upZTT);
  // Extradist2d.push_back(&jetFakes_ff_tt_qcd_stat_njet0_mvadm10_downZTT);
  // Extradist2d.push_back(&jetFakes_ff_tt_qcd_stat_njet1_mvadm10_upZTT);
  // Extradist2d.push_back(&jetFakes_ff_tt_qcd_stat_njet1_mvadm10_downZTT);
  // Extradist2d.push_back(&jetFakes_ff_tt_qcd_stat_njet2_mvadm10_upZTT);
  // Extradist2d.push_back(&jetFakes_ff_tt_qcd_stat_njet2_mvadm10_downZTT);
  // Extradist2d.push_back(&jetFakes_ff_tt_qcd_met_closure_systUpZTT);
  // Extradist2d.push_back(&jetFakes_ff_tt_qcd_met_closure_systDownZTT);
  
  // Extradist2d.push_back(&CMS_eff_t_pThigh_MVADM10_13TeVUpPVRefitBSZTT);
  // Extradist2d.push_back(&CMS_eff_t_pThigh_MVADM10_13TeVDownPVRefitBSZTT);
  // Extradist2d.push_back(&CMS_eff_t_trg_MVADM10_13TeVUpPVRefitBSZTT);
  // Extradist2d.push_back(&CMS_eff_t_trg_MVADM10_13TeVDownPVRefitBSZTT);
  // Extradist2d.push_back(&CMS_htt_dyShape_13TeVUpPVRefitBSZTT);
  // Extradist2d.push_back(&CMS_htt_dyShape_13TeVDownPVRefitBSZTT);
  // Extradist2d.push_back(&jetFakes_ff_tt_qcd_stat_njet0_mvadm10_upPVRefitBSZTT);
  // Extradist2d.push_back(&jetFakes_ff_tt_qcd_stat_njet0_mvadm10_downPVRefitBSZTT);
  // Extradist2d.push_back(&jetFakes_ff_tt_qcd_stat_njet1_mvadm10_upPVRefitBSZTT);
  // Extradist2d.push_back(&jetFakes_ff_tt_qcd_stat_njet1_mvadm10_downPVRefitBSZTT);
  // Extradist2d.push_back(&jetFakes_ff_tt_qcd_stat_njet2_mvadm10_upPVRefitBSZTT);
  // Extradist2d.push_back(&jetFakes_ff_tt_qcd_stat_njet2_mvadm10_downPVRefitBSZTT);
  // Extradist2d.push_back(&jetFakes_ff_tt_qcd_met_closure_systUpPVRefitBSZTT);
  // Extradist2d.push_back(&jetFakes_ff_tt_qcd_met_closure_systDownPVRefitBSZTT);

  // Extradist2d.push_back(&CMS_eff_t_pThigh_MVADM10_13TeVUpPVRefitBSZNominalZTT);
  // Extradist2d.push_back(&CMS_eff_t_pThigh_MVADM10_13TeVDownPVRefitBSZNominalZTT);
  // Extradist2d.push_back(&CMS_eff_t_trg_MVADM10_13TeVUpPVRefitBSZNominalZTT);
  // Extradist2d.push_back(&CMS_eff_t_trg_MVADM10_13TeVDownPVRefitBSZNominalZTT);
  // Extradist2d.push_back(&CMS_htt_dyShape_13TeVUpPVRefitBSZNominalZTT);
  // Extradist2d.push_back(&CMS_htt_dyShape_13TeVDownPVRefitBSZNominalZTT);
  // Extradist2d.push_back(&jetFakes_ff_tt_qcd_stat_njet0_mvadm10_upPVRefitBSZNominalZTT);
  // Extradist2d.push_back(&jetFakes_ff_tt_qcd_stat_njet0_mvadm10_downPVRefitBSZNominalZTT);
  // Extradist2d.push_back(&jetFakes_ff_tt_qcd_stat_njet1_mvadm10_upPVRefitBSZNominalZTT);
  // Extradist2d.push_back(&jetFakes_ff_tt_qcd_stat_njet1_mvadm10_downPVRefitBSZNominalZTT);
  // Extradist2d.push_back(&jetFakes_ff_tt_qcd_stat_njet2_mvadm10_upPVRefitBSZNominalZTT);
  // Extradist2d.push_back(&jetFakes_ff_tt_qcd_stat_njet2_mvadm10_downPVRefitBSZNominalZTT);
  // Extradist2d.push_back(&jetFakes_ff_tt_qcd_met_closure_systUpPVRefitBSZNominalZTT);
  // Extradist2d.push_back(&jetFakes_ff_tt_qcd_met_closure_systDownPVRefitBSZNominalZTT);

  Extradist2d.push_back(&CMS_eff_t_pThigh_MVADM10_13TeVUpPVRefitWithTracksBSZTT);
  Extradist2d.push_back(&CMS_eff_t_pThigh_MVADM10_13TeVDownPVRefitWithTracksBSZTT);
  Extradist2d.push_back(&CMS_eff_t_trg_MVADM10_13TeVUpPVRefitWithTracksBSZTT);
  Extradist2d.push_back(&CMS_eff_t_trg_MVADM10_13TeVDownPVRefitWithTracksBSZTT);
  Extradist2d.push_back(&CMS_htt_dyShape_13TeVUpPVRefitWithTracksBSZTT);
  Extradist2d.push_back(&CMS_htt_dyShape_13TeVDownPVRefitWithTracksBSZTT);
  Extradist2d.push_back(&jetFakes_ff_tt_qcd_stat_njet0_mvadm10_upPVRefitWithTracksBSZTT);
  Extradist2d.push_back(&jetFakes_ff_tt_qcd_stat_njet0_mvadm10_downPVRefitWithTracksBSZTT);
  Extradist2d.push_back(&jetFakes_ff_tt_qcd_stat_njet1_mvadm10_upPVRefitWithTracksBSZTT);
  Extradist2d.push_back(&jetFakes_ff_tt_qcd_stat_njet1_mvadm10_downPVRefitWithTracksBSZTT);
  Extradist2d.push_back(&jetFakes_ff_tt_qcd_stat_njet2_mvadm10_upPVRefitWithTracksBSZTT);
  Extradist2d.push_back(&jetFakes_ff_tt_qcd_stat_njet2_mvadm10_downPVRefitWithTracksBSZTT);
  Extradist2d.push_back(&jetFakes_ff_tt_qcd_met_closure_systUpPVRefitWithTracksBSZTT);
  Extradist2d.push_back(&jetFakes_ff_tt_qcd_met_closure_systDownPVRefitWithTracksBSZTT);

  Extradist2d.push_back(&PrefiringUp_PVRefitWithTracksBSZTT);
  Extradist2d.push_back(&PrefiringDown_PVRefitWithTracksBSZTT);
  
  // Extradist2d.push_back(&CMS_eff_t_pThigh_MVADM10_13TeVUpPVRefitWithTracksBSZNominalZTT);
  // Extradist2d.push_back(&CMS_eff_t_pThigh_MVADM10_13TeVDownPVRefitWithTracksBSZNominalZTT);
  // Extradist2d.push_back(&CMS_eff_t_trg_MVADM10_13TeVUpPVRefitWithTracksBSZNominalZTT);
  // Extradist2d.push_back(&CMS_eff_t_trg_MVADM10_13TeVDownPVRefitWithTracksBSZNominalZTT);
  // Extradist2d.push_back(&CMS_htt_dyShape_13TeVUpPVRefitWithTracksBSZNominalZTT);
  // Extradist2d.push_back(&CMS_htt_dyShape_13TeVDownPVRefitWithTracksBSZNominalZTT);
  // Extradist2d.push_back(&jetFakes_ff_tt_qcd_stat_njet0_mvadm10_upPVRefitWithTracksBSZNominalZTT);
  // Extradist2d.push_back(&jetFakes_ff_tt_qcd_stat_njet0_mvadm10_downPVRefitWithTracksBSZNominalZTT);
  // Extradist2d.push_back(&jetFakes_ff_tt_qcd_stat_njet1_mvadm10_upPVRefitWithTracksBSZNominalZTT);
  // Extradist2d.push_back(&jetFakes_ff_tt_qcd_stat_njet1_mvadm10_downPVRefitWithTracksBSZNominalZTT);
  // Extradist2d.push_back(&jetFakes_ff_tt_qcd_stat_njet2_mvadm10_upPVRefitWithTracksBSZNominalZTT);
  // Extradist2d.push_back(&jetFakes_ff_tt_qcd_stat_njet2_mvadm10_downPVRefitWithTracksBSZNominalZTT);
  // Extradist2d.push_back(&jetFakes_ff_tt_qcd_met_closure_systUpPVRefitWithTracksBSZNominalZTT);
  // Extradist2d.push_back(&jetFakes_ff_tt_qcd_met_closure_systDownPVRefitWithTracksBSZNominalZTT);
}

void  HCPTauTau::doEvent()  { //  Method called on every event

  unsigned int t;                // sample type, you may manage in your further analysis, if needed
  int id(Ntp->GetMCID());  //read event ID of a sample
  if(!HConfig.GetHisto(Ntp->isData(),id,t)){ Logger(Logger::Error) << "failed to find id" <<std::endl; return;}  //  gives a warning if list of samples in Histo.txt  and SkimSummary.log do not coincide 
  //  std::cout<<"------------------ New Event -----------------------"<<std::endl;
  Charge = ChargeSumDummy;

  bool isEmbed=(id==36);

  std::vector<int> Tau1IndexVect;
  std::vector<int> Tau2IndexVect;
  std::vector<int> IndexSelected;
  bool METFilters=true;

  if(Ntp->year()==2017 || Ntp->year()==2018){
    if(!Ntp->passecalBadCalibFilterUpdate()){
      METFilters=false;
    }
  }
  if(Ntp->metfilterbit()!=255)METFilters=false; // 255 bits because 8 filters but will be 127 when new production ready !!!

  bool passbtagveto=true;
  int nbtagloose=0;

  TH2F* histo_tageff_ = 0;
  TH2F *tagEff_B;
  TH2F *tagEff_C;
  TH2F *tagEff_Light;

  TFile *fileTagging  = new TFile("Eff_DeepCSV_2016_medium_all_proc_DeepCSV_medium_inclusive_inclusive.root");
  
  tagEff_B     = (TH2F*)fileTagging->Get("btag_eff_b");
  tagEff_C     = (TH2F*)fileTagging->Get("btag_eff_c");
  tagEff_Light = (TH2F*)fileTagging->Get("btag_eff_oth");
  
  BTagCalibration calib("DeepCSV", "DeepCSV_2016LegacySF_V1.csv");
  BTagCalibrationReader reader_B(BTagEntry::OP_MEDIUM, "central",{"up","down"});
  BTagCalibrationReader reader_C(BTagEntry::OP_MEDIUM, "central");
  BTagCalibrationReader reader_Light(BTagEntry::OP_MEDIUM, "central");
  reader_B.load(calib, BTagEntry::FLAV_B, "comb");
  reader_C.load(calib, BTagEntry::FLAV_C, "comb");
  reader_Light.load(calib, BTagEntry::FLAV_UDSG, "comb");
  
  TRandom3 *rand = new TRandom3();
  
  for(int ijet=0; ijet< Ntp->NJets(); ijet++) {

    int flavor = abs(Ntp->jets_Flavour(ijet));
    double jet_scalefactor = 1;
    double JetPt    = Ntp->Jet_P4(ijet).Pt();
    double JetEta    = Ntp->Jet_P4(ijet).Eta();
    double tageff          = 1;
	 
    bool tagged =(Ntp->DeepCSV_probb(ijet)+Ntp->DeepCSV_probbb(ijet))> 0.6321; //2016 Medium
    
    if(!Ntp->isData() && id!=DataMCType::QCD && !isEmbed && Ntp->tightJetID(ijet)) {
	
	  
      //if (JetPt > 1000) JetPt = 1000 - 0.1;
      //if (JetPt < 20) JetPt = 20 + 0.1;
	 
      // getting SFs and efficiencies
      if (flavor == 5) {
	jet_scalefactor = reader_B.eval_auto_bounds("central", BTagEntry::FLAV_B, JetEta, JetPt);
	// if (JESname=="Btag") {
	//if (direction=="Down")
	//  jet_scalefactor = reader_B.eval_auto_bounds("down", BTagEntry::FLAV_B, JetEta, JetPt);
	  // else if (direction=="Up")
	  //  jet_scalefactor = reader_B.eval_auto_bounds("up", BTagEntry::FLAV_B, JetEta, JetPt);
	  //}
	  histo_tageff_= tagEff_B;
	}
	else if (flavor == 4) {
	  jet_scalefactor = reader_C.eval_auto_bounds("central", BTagEntry::FLAV_C, JetEta, JetPt);
	  histo_tageff_= tagEff_C;
	}
	else {
	  jet_scalefactor = reader_Light.eval_auto_bounds("central", BTagEntry::FLAV_UDSG, JetEta, JetPt);
	  histo_tageff_= tagEff_Light;
	}
	tageff = histo_tageff_->Interpolate(JetPt, abs(JetEta));
	if (tageff < 1e-5)      tageff = 1e-5;
	if (tageff > 0.99999)   tageff = 0.99999;
	 
	// random seed
	rand->SetSeed((int)((JetEta+5)*100000));
	double rannum = rand->Rndm();
	 
	// promote-demote method
	if (jet_scalefactor < 1 && tagged)  { // downgrade - demote
	  if (rannum < 1 - jet_scalefactor)  
	    tagged = false;
	}
	if (jet_scalefactor > 1 && !tagged) { // upgrade - promote
	  double fraction = (1.0 - jet_scalefactor)/(1.0 - 1.0 / tageff);
	  if (rannum < fraction) tagged = true;
	}
      }


      if(Ntp->Jet_P4(ijet).Pt()>25 && Ntp->Jet_P4(ijet).Eta()<2.4 && Ntp->year()==2016 && tagged> 0.6321)passbtagveto=false;
      if(Ntp->Jet_P4(ijet).Pt()>25 && Ntp->Jet_P4(ijet).Eta()<2.4 && Ntp->year()==2017 && tagged> 0.4941)passbtagveto=false;
      if(Ntp->Jet_P4(ijet).Pt()>25 && Ntp->Jet_P4(ijet).Eta()<2.4 && Ntp->year()==2018 && tagged> 0.4184)passbtagveto=false;
    
    if(Ntp->Jet_P4(ijet).Pt()>25 && Ntp->Jet_P4(ijet).Eta()<2.4 && Ntp->year()==2016 && (Ntp->DeepCSV_probb(ijet)+Ntp->DeepCSV_probbb(ijet))> 0.2217)nbtagloose++;
    if(Ntp->Jet_P4(ijet).Pt()>25 && Ntp->Jet_P4(ijet).Eta()<2.4 && Ntp->year()==2017 && (Ntp->DeepCSV_probb(ijet)+Ntp->DeepCSV_probbb(ijet))> 0.1522)nbtagloose++;
    if(Ntp->Jet_P4(ijet).Pt()>25 && Ntp->Jet_P4(ijet).Eta()<2.4 && Ntp->year()==2018 && (Ntp->DeepCSV_probb(ijet)+Ntp->DeepCSV_probbb(ijet))> 0.1241)nbtagloose++;
  }
  if(nbtagloose>1 || !passbtagveto)passbtagveto=false;
  
  value.at(METFiltersAndBTagVeto)=0;
  value.at(METFiltersAndBTagVeto)=(METFilters && passbtagveto);
  pass.at(METFiltersAndBTagVeto)=value.at(METFiltersAndBTagVeto);

  for(int iDaughter=0;   iDaughter  <  Ntp->SelectedPairs() ;iDaughter++ ) {
    if(Ntp->trg_doubletau(iDaughter))
      {
  	Tau1IndexVect.push_back(Ntp->tau1IndexVect(iDaughter));
  	Tau2IndexVect.push_back(Ntp->tau2IndexVect(iDaughter));
  	IndexSelected.push_back(iDaughter);
      }
  }
  std::vector<int> goodTaus1Index;
  std::vector<int> goodTaus2Index;
  std::vector<int> IndexSelectedTemp;
  std::vector<int>  PairsIndexTemp;
  int j=0;
  for(unsigned int iDaughter=0;   iDaughter  <IndexSelected.size() ;iDaughter++ ) {
    if(Ntp->tauBaselineSelection(Tau1IndexVect.at(iDaughter),40., 2.1, 1,0,4) && Ntp->tauBaselineSelection(Tau2IndexVect.at(iDaughter),40., 2.1, 1,0,4))
      {
  	goodTaus1Index.push_back(Tau1IndexVect.at(iDaughter));
  	goodTaus2Index.push_back(Tau2IndexVect.at(iDaughter));
  	IndexSelectedTemp.push_back(IndexSelected.at(iDaughter));
  	PairsIndexTemp.push_back(j);
  	j++;
      }
  }
  int Tau1= -1;
  int Tau2= -1;
  std::vector<int>  Sorted;
  if(PairsIndexTemp.size()>0)
    {
      //Sorted = Ntp->SortPair(PairsIndexTemp,goodTaus1Index,goodTaus2Index);
      //Tau1=goodTaus1Index.at(Sorted.back());
      //Tau2=goodTaus2Index.at(Sorted.back());
      Tau1=goodTaus1Index.at(0);
      Tau2=goodTaus2Index.at(0);
      //value.at(GoodIndex)=0;
      //value.at(GoodIndex)=(Tau1!=-99 && Tau2!=-99);
      //pass.at(GoodIndex) = value.at(GoodIndex);
      value.at(TausIsolation)=0;
      value.at(TausIsolation) = (Ntp->byMediumDeepTau2017v2p1VSjet_1(IndexSelectedTemp.at(0)) && Ntp->byMediumDeepTau2017v2p1VSjet_2(IndexSelectedTemp.at(0)));
      pass.at(TausIsolation) = value.at(TausIsolation);
      value.at(AgainstEleMu)=0;
      value.at(AgainstEleMu) = (Ntp->byVVLooseDeepTau2017v2p1VSe_1(IndexSelectedTemp.at(0)) && Ntp->byVVLooseDeepTau2017v2p1VSe_2(IndexSelectedTemp.at(0)) && Ntp->byVLooseDeepTau2017v2p1VSmu_1(IndexSelectedTemp.at(0)) && Ntp->byVLooseDeepTau2017v2p1VSmu_2(IndexSelectedTemp.at(0)) );
      pass.at(AgainstEleMu) = value.at(AgainstEleMu);
      value.at(LeptonVeto)=0;
      int thirdlepton=0;
      for(int iDaughter=0;   iDaughter  <  Ntp->NDaughters() ;iDaughter++ ) {
	if((iDaughter!=Tau1)&&(iDaughter!=Tau2)){
	  if(Ntp->ElectronVeto(iDaughter) || Ntp->MuonVeto(iDaughter))thirdlepton++;
	}
      }
      //if(Ntp->eleveto() || Ntp->muonveto())thirdlepton++;
      value.at(LeptonVeto) = thirdlepton>0;
      pass.at(LeptonVeto) = (value.at(LeptonVeto)==cut.at(LeptonVeto));
      value.at(PairCharge)=0;
      bool isOS=false;
      isOS=((Ntp->Daughters_charge(Tau1)/abs(Ntp->Daughters_charge(Tau1))) != (Ntp->Daughters_charge(Tau2)/abs(Ntp->Daughters_charge(Tau2))));
      if(isOS)value.at(PairCharge) = 1;
      pass.at(PairCharge) = value.at(PairCharge);
      // value.at(PairMass) = 999.;
      // // //value.at(MTM) = 999.;
      // // //value.at(MTM) = .;
      //  value.at(PairMass)=(Ntp->P4Corrected(Tau1) + Ntp->P4Corrected(Tau2)).M();
      //  pass.at(PairMass) = ((value.at(PairMass) > 85.) && (value.at(PairMass) < 115.));
      // // //pass.at(MTM) = (value.at(MTM) <= cut.at(MTM));
    }

  // Here you can defined different type of weights you want to apply to events.
  double wobs=1;
  double w=1;
  double wIDSF1=1.,wIDSF2=1.;
  double wIDSFAntiE1=1.,wIDSFAntiE2=1.;
  double wIDSFAntiMu1=1.,wIDSFAntiMu2=1.;
  double wTrgSF1=1.,wTrgSF2=1.;
  
    //    w *= reweight.weight(2016,26,Ntp->PUNumInteractions());
   if(!Ntp->isData() && id!=DataMCType::QCD) w*=Ntp->PUReweight();
    // if(Ntp->year()==2017) w*=Ntp->PUReweight(Ntp->year(),filePUdistribution2017_data,filePUdistribution2017_MC);
    // if(Ntp->year()==2018) w*=Ntp->PUReweight(Ntp->year(),filePUdistribution2018_data,filePUdistribution2018_MC);
    //w *= reweight.PUweightHTT(Ntp->npu());
    //std::cout<<" pu weigh HTT  "<< reweight.PUweightHTT(Ntp->npu())<<std::endl;
   if((!Ntp->isData() && id!=DataMCType::QCD) || isEmbed) {
    if(PairsIndexTemp.size()>0){
      //double w1=1.,w2=1.;
 
      wTrgSF1=Ntp->TriggerSF(Tau1,"Nom");
      wTrgSF2=Ntp->TriggerSF(Tau2,"Nom");
     
      // else if(Ntp->year()==2017)
      // 	{
      // 	  w1=Ntp->TriggerSF(Tau1,w2017_);
      // 	  w2=Ntp->TriggerSF(Tau2,w2017_);
      // 	}
      // else if(Ntp->year()==2018)
      // 	{
      // 	  w1=Ntp->TriggerSF(Tau1,w2018_);
      // 	  w2=Ntp->TriggerSF(Tau2,w2018_);
      // 	}

      //double w1 = tauTrgSF.getSF(Ntp->P4Corrected(Tau1).Pt(),  Ntp->decayMode(Tau1)) ;  //from Luca
      //double w2 = tauTrgSF.getSF(Ntp->P4Corrected(Tau2).Pt(),  Ntp->decayMode(Tau2)) ;
      w*=wTrgSF1;
      w*=wTrgSF2;

      wIDSF1=Ntp->IDSF(Tau1);
      wIDSF2=Ntp->IDSF(Tau2);
      wIDSFAntiE1=Ntp->IDSF(Tau1,"ele");
      wIDSFAntiE2=Ntp->IDSF(Tau2,"ele");
      wIDSFAntiMu1=Ntp->IDSF(Tau1,"mu");
      wIDSFAntiMu2=Ntp->IDSF(Tau2,"mu");
      w*=wIDSF1*wIDSF2*wIDSFAntiE1*wIDSFAntiE2*wIDSFAntiMu1*wIDSFAntiMu2;
    }
    // if(!Ntp->isData() && PairsIndexTemp.size()>0/*pass.at(NPairsFound)*/ && (id==33 || id == 10110333 || id == 10110433|| id == 10130533|| id ==10210333|| id == 10210433|| id == 10230533|| id ==10310333 || id ==10330533 || id ==10410433 || id == 10410333|| id == 10430533|| id == 30530533 || id ==11 || id ==12)){
    //   w *= 0.95*0.95;
    // }
    
  }
  TLorentzVector genMomentum(0,0,0,0);
  if(id==33 || id == 10110333 || id == 10110433|| id == 10130533|| id ==10210333|| id == 10210433|| id == 10230533|| id ==10310333 || id ==10330533 || id ==10410433 || id == 10410333|| id == 10430533|| id == 30530533) {
    for(unsigned int imc=0; imc < Ntp->NGenParts(); imc++){
      if(fabs(Ntp->Genpart_pdg(imc)) ==15   &&  Ntp->CHECK_BIT(Ntp->Genpart_flags(imc),0)&& Ntp->Genpart_status(imc) ==2) {
	if(Ntp->Genpart_P4(imc).Pt() > 8){
	  genMomentum+=Ntp->Genpart_P4(imc);
	}
      }
    }
  }
  if( id == 30) {
    for(unsigned int imc=0; imc < Ntp->NGenParts(); imc++){
      if((fabs(Ntp->Genpart_pdg(imc)) ==11 || fabs(Ntp->Genpart_pdg(imc)) ==13) && Ntp->Genpart_status(imc) ==1  ){
	if(Ntp->Genpart_P4(imc).Pt() > 8){
	  genMomentum+=Ntp->Genpart_P4(imc);
	}
      }
    }
  }
  float zptw(1.);
  if(!Ntp->isData() && genMomentum.Pt()!=0 && genMomentum.M() > 75 && genMomentum.M() < 120) {
    if(Ntp->year()==2016)zptw = Ntp->ZPtReweight(genMomentum);
    //if(Ntp->year()==2017)zptw = Ntp->ZPtReweight(genMomentum,w2017_);
    //if(Ntp->year()==2018)zptw = Ntp->ZPtReweight(genMomentum,w2018_);
    //zptw = DataMC_Corr.ZPTWeight(genMomentum.M(),genMomentum.Pt());
  }
  w*=zptw;
  float PUPPImetCorr_px=Ntp->PUPPImet()*cos(Ntp->PUPPImetphi());
  float PUPPImetCorr_py=Ntp->PUPPImet()*sin(Ntp->PUPPImetphi());
  if(id==33 || id == 10110333 || id == 10110433|| id == 10130533|| id ==10210333|| id == 10210433|| id == 10230533|| id ==10310333 || id ==10330533 || id ==10410433 || id == 10410333|| id == 10430533|| id == 30530533 || id==30 || id==11 || id==12 || id==20 || id==21 || id==22 ||id==23 ||id==45  ||id==46)
    {
      if(PairsIndexTemp.size()>0)
	{
	  TLorentzVector Vis,Gen;
	  for(unsigned i = 0; i < Ntp->NGenParts(); ++i) {
	    unsigned pdgid = abs(Ntp->Genpart_pdg(i));
	    unsigned status = abs(Ntp->Genpart_status(i));

	    if ( (pdgid >= 11 && pdgid <= 16 && Ntp->CHECK_BIT(Ntp->Genpart_flags(i),8) && status==1) || Ntp->CHECK_BIT(Ntp->Genpart_flags(i),10)) Gen+=Ntp->Genpart_P4(i);

	    if ( ( (pdgid == 11 || pdgid == 13 || pdgid == 15) && Ntp->CHECK_BIT(Ntp->Genpart_flags(i),8) && status==1) || (Ntp->CHECK_BIT(Ntp->Genpart_flags(i),10) && !(pdgid==12||pdgid==14||pdgid==16))) Vis+=Ntp->Genpart_P4(i) ;
	  }
	  Ntp->RecoilCorr(Gen, Vis,IndexSelectedTemp.at(0),PUPPImetCorr_px,PUPPImetCorr_py);
	}
    }
  if((!Ntp->isData() && id!=DataMCType::QCD) || isEmbed)w*=Ntp->MC_weight();//cout<<"id: "<<id<<"MC_weight(): "<< Ntp->MC_weight()<<endl; //generator weight because negative weights for this samples

  if(id==11)w*=0.2455;
  else if(id==12)w*=0.2727;
  else if(id==45)w*=0.2546;
  else if(461)w*=0.2596;
  else if(460)w*=0.2425;
  w*=Ntp->stitch_weight(isDY1050);
  //cout<<"isDY1050: "<<isDY1050<<endl;

  if(!Ntp->isData() && (Ntp->year()==2016||Ntp->year()==2017))w*=Ntp->prefiringweight();

  if(id==70 && ((Ntp->GetGenMatch(Tau1)>2 && Ntp->GetGenMatch(Tau1)<6) &&  (Ntp->GetGenMatch(Tau2)>2 && Ntp->GetGenMatch(Tau2)<6))) w=0.; //ttbar veto due to embedded ttbar contamination
  
  std::vector<unsigned int> exclude_cuts;
  exclude_cuts.push_back(TausIsolation);
  classic_svFit::LorentzVector tau1P4;
  classic_svFit::LorentzVector tau2P4;

  TLorentzVector Tau1P4;
  TLorentzVector Tau2P4;
  if(passAllBut(exclude_cuts)){
    Tau1P4 = Ntp->P4Corrected(Tau1,"Nom");
    Tau2P4 = Ntp->P4Corrected(Tau2,"Nom");
  }
  // QCD ABCD BG Method
  /*******************
   *        |        *
   *    C   |    D   *  SS
   *        |        *       S
   * ----------------*------ i
   *        |        *       g
   *    A   |    B   *  OS   n
   *        |        *
   *******************
   *  Iso   | AntiIso
   *
   *     TauIsolation
   */

  // std::cout<<" before  " << pass.at(TriggerOk) << "    " <<   pass.at(PrimeVtx) << "    " <<  pass.at(NPairsFound)<< "    " <<   pass.at(FirstTauIsolation) << "    " <<  pass.at(SecondTauIsolation) << "    " <<  pass.at(nGoodMuons) << "    " <<  pass.at(PairCharge) << "  passAllBut  " << passAllBut(exclude_cuts) <<std::endl;
  
  int Has2jets=-1;
  int Has1jet=-1;
  if(PairsIndexTemp.size()>0){
    for(int k=0;k<=IndexSelectedTemp.at(0);k++)
      {
	if(Ntp->njetspt20(k)>=2)Has2jets++;
	if(Ntp->njetspt20(k)>=1)Has1jet++;
	if(k==IndexSelectedTemp.at(0) && Ntp->njetspt20(k)<2)Has2jets=-99; // No need after the new production
	if(k==IndexSelectedTemp.at(0) && Ntp->njetspt20(k)<1)Has1jet=-99; // No need after the new production
      }
  }
  double jdeta_=-9999, jpt_1_=-9999, m_sv_=-9999, m_vis_=-9999, met_=-9999, mjj_=-9999, n_jets_=-9999, pt_1_=-9999,  pt_tt_=-9999, pt_vis_=-9999;
  unsigned long long evt_ = Ntp->EventNumber();
  std::pair<float, int> max_pair;
  std::vector<float> scores = {};
  double PUPPIMET=sqrt(PUPPImetCorr_px*PUPPImetCorr_px+PUPPImetCorr_py*PUPPImetCorr_py);

  std::vector<TLorentzVector> Pions1;
  std::vector<TLorentzVector> Pions2;
  std::vector<double> Pions1Charge;
  std::vector<double> Pions2Charge;

  TVector3 tauPrimaryVertex , tauNoBSPrimaryVertex, tauBSPrimaryVertex, tauNoBSZNominalPrimaryVertex, tauBSZNominalPrimaryVertex, TauminusSecondaryVertex , TauplusSecondaryVertex,tauWithTracksBSZNominalPrimaryVertex,tauWithTracksBSPrimaryVertex;

  TVector3 TauminusDirection , TauplusDirection, TauplusDirectionNoBS, TauplusDirectionBS, TauplusDirectionNoBSZNominal, TauplusDirectionBSZNominal,TauminusDirectionNoBS, TauminusDirectionBS, TauminusDirectionNoBSZNominal, TauminusDirectionBSZNominal;

  double thetaGJ_Tauminus , thetaGJ_Tauplus;
  TLorentzVector a1LV_Tauminus , a1LV_Tauplus, a1LVRefit_Tauminus , a1LVRefit_Tauplus;
  TLorentzVector TauminusPairConstraint, TauplusPairConstraintNoBS, TauplusPairConstraintBS, TauplusPairConstraintNoBSZNominal, TauplusPairConstraintBSZNominal, TauminusPairConstraintNoBS, TauminusPairConstraintBS, TauminusPairConstraintNoBSZNominal, TauminusPairConstraintBSZNominal, TauminusPairConstraintWithTracksBSZNominal,TauminusPairConstraintWithTracksBS, TauplusPairConstraintWithTracksBSZNominal,TauplusPairConstraintWithTracksBS;
  TLorentzVector TauplusSmall, TauplusLarge, TauplusPairConstraint,TauplusPairConstraintMVA,TauplusPairConstraintNoBSNewMVA,TauplusPairConstraintBSNewMVA;
  bool isPlusReal=true, isMinusReal=true,  a1a1=false,a1a1MVA=false, a1minus=false, a1plus=false,a1minusMVA=false,a1plusMVA=false;
  std::vector<TLorentzVector> solutions, solutionsNoBS, solutionsBS, solutionsNoBSZNominal, solutionsBSZNominal, solutionsWithTracksBSZNominal, solutionsWithTracksBS;
  TLorentzVector HPairConstraint;

  std::vector<size_t> hashes;
  size_t hash = 0;


  bool isRefitNoBS=true;
  bool isRefitBS=true;
  bool isRefitNoBSZNominal=true;
  bool isRefitBSZNominal=true;

  double Spin_WT=Ntp->TauSpinerGet(TauSpinerInterface::Spin);
  // double UnSpin_WT=Ntp->TauSpinerGet(TauSpinerInterface::UnSpin);
  double FlipSpin_WT=Ntp->TauSpinerGet(TauSpinerInterface::FlipSpin);
  // double hplus=Ntp->TauSpinerGet(TauSpinerInterface::hplus);
  // double hminus=Ntp->TauSpinerGet(TauSpinerInterface::hminus);//1-hplus;
		 

  double Wspin;
  double Wflipspin;
  if(id == 11 || id == 12|| id == 45)Wspin=w*Spin_WT;
  else Wspin=w;
  if(id == 11 || id == 12|| id == 45)Wflipspin=w*FlipSpin_WT;
  else Wflipspin=w;
  TLorentzVector testTruth(0,0,0,0);

  vector<TLorentzVector> HadPionsTruth_minus;
  vector<TLorentzVector> HadPionsTruth_plus;
  vector<double> HadPionsChargeTruth_minus;
  vector<double> HadPionsChargeTruth_plus;
  vector<TLorentzVector> tauandprodTruthminus;
  vector<TLorentzVector> tauandprodTruthplus;
		    
  vector<TLorentzVector> HadPions_minus;   
  vector<double> HadPionsCharge_minus;
  vector<TLorentzVector> HadPions_plus;    
  vector<double> HadPionsCharge_plus;

  vector<TLorentzVector> HadRefitPions_minus;   
  vector<double> HadRefitPionsCharge_minus;
  vector<TLorentzVector> HadRefitPions_plus;    
  vector<double> HadRefitPionsCharge_plus;

  SCalculator Scalc("a1");
  SCalculator ScalcPVRefitNoBS("a1");
  SCalculator ScalcPVRefitBS("a1");
  SCalculator ScalcPVRefitNoBSZNominal("a1");
  SCalculator ScalcPVRefitBSZNominal("a1");
    
  SCalculator ScalcPVRefitWithTracksBS("a1");
  SCalculator ScalcPVRefitWithTracksBSZNominal("a1");

  TLorentzVector zeroLV(0,0,0,0);
  std::vector<TLorentzVector> VectZeroLV;
  VectZeroLV.push_back(zeroLV);
  VectZeroLV.push_back(zeroLV);
  VectZeroLV.push_back(zeroLV);


  TLorentzVector Tauplusvis;
  TLorentzVector Tauminusvis;
  TLorentzVector Pi0RECO;
  TLorentzVector Tauplustruth;
  TLorentzVector Tauminustruth;
  unsigned int Tauplus=0;
  unsigned int Tauminus=0;

  if(passAllBut(exclude_cuts)) { 
    if(Ntp->Daughters_charge(Tau1)>0)
      {
	//Tauplussvfit=tau1P4;
	//Tauminussvfit=tau2P4;
	Tauplusvis=Tau1P4;
	Tauminusvis=Tau2P4;
	Tauplus=Tau1;
	Tauminus=Tau2;
      }
    else
      {
	//Tauplussvfit=tau2P4;
	//Tauminussvfit=tau1P4;
	Tauplusvis=Tau2P4;
	Tauminusvis=Tau1P4;
	Tauplus=Tau2;
	Tauminus=Tau1;
      }

    if(Ntp->decayMode(Tauminus) == 10 &&  Ntp->PFTau_hassecondaryVertex(Tauminus) && Ntp->PFtauHasThreePions(Tauminus))a1minus=true;
    if(Ntp->decayMode(Tauplus) == 10 && Ntp->PFTau_hassecondaryVertex(Tauplus) && Ntp->PFtauHasThreePions(Tauplus))a1plus=true;
    
    if(Ntp->MVADM2017(Tauminus) == 10 &&  Ntp->PFTau_hassecondaryVertex(Tauminus) && Ntp->PFtauHasThreePions(Tauminus))a1minusMVA=true;
    if(Ntp->MVADM2017(Tauplus) == 10 && Ntp->PFTau_hassecondaryVertex(Tauplus) && Ntp->PFtauHasThreePions(Tauplus))a1plusMVA=true;
    
    if(a1minus && a1plus ) a1a1=true;  //a1-a1
    if(a1minusMVA && a1plusMVA ) a1a1MVA=true;  //a1-a1
    
    TLorentzVector Tauplussvfit;
    TLorentzVector Tauminussvfit;

    ClassicSVfit svfitAlgo1(0);
    double higgsmass;
    if(a1a1MVA) {
      //FastMTT FastMTTAlgo;
      //if(a1a1TruthSVFit || a1a1TruthSVFitMVA /*|| a1rhoTruthSVFit || a1rhoTruthSVFitMVA ||a1piTruthSVFit || a1piTruthSVFitMVA*/)
      //{
      // // //---------  svfit ---------------------
      std::vector<classic_svFit::MeasuredTauLepton> measuredTauLeptons;
      classic_svFit::MeasuredTauLepton lep1(classic_svFit::MeasuredTauLepton::kTauToHadDecay, Tau1P4.Pt(), Tau1P4.Eta(),  Tau1P4.Phi(), Tau1P4.M(),Ntp->MVADM2017(Tau1));
      classic_svFit::MeasuredTauLepton lep2(classic_svFit::MeasuredTauLepton::kTauToHadDecay, Tau2P4.Pt(), Tau2P4.Eta(),  Tau2P4.Phi(), Tau2P4.M(),Ntp->MVADM2017(Tau2));
	
      measuredTauLeptons.push_back(lep1);
      measuredTauLeptons.push_back(lep2);
      TMatrixD metcov(2,2);
      double metx = PUPPIMET*cos(Ntp->PUPPImetphi());
      double mety = PUPPIMET*sin(Ntp->PUPPImetphi());
	
      metcov[0][0] = Ntp->PFMETCov00();
      metcov[1][0] = Ntp->PFMETCov01();
      metcov[0][1] = Ntp->PFMETCov10();
      metcov[1][1] = Ntp->PFMETCov11();

      svfitAlgo1.setHistogramAdapter(new classic_svFit::TauTauHistogramAdapter());
      svfitAlgo1.addLogM_fixed(true,5.);
      // svfitAlgo1.setDiTauMassConstraint(125.10);
      //FastMTTAlgo.run(measuredTauLeptons, metx, mety, metcov);
      svfitAlgo1.integrate(measuredTauLeptons,metx,mety, metcov );
      if(svfitAlgo1.isValidSolution()) {
	  
	higgsmass  = static_cast<classic_svFit::DiTauSystemHistogramAdapter*>(svfitAlgo1.getHistogramAdapter())->getMass();
	//h_SVFitMass.at(t).Fill(higgsmass,w); 
	//tau1P4 = FastMTTAlgo.getTau1P4();
	//tau2P4 = FastMTTAlgo.getTau2P4();
    
	tau1P4 = static_cast<classic_svFit::TauTauHistogramAdapter*>(svfitAlgo1.getHistogramAdapter())->GetFittedTau1LV();	  
	tau2P4 = static_cast<classic_svFit::TauTauHistogramAdapter*>(svfitAlgo1.getHistogramAdapter())->GetFittedTau2LV();
	  

	// ClassicSVfit svfitAlgo2;
	// svfitAlgo2.setHistogramAdapter(new classic_svFit::TauTauHistogramAdapter());
	// svfitAlgo2.addLogM_fixed(true, 5.);
	// svfitAlgo2.integrate(measuredTauLeptons,metx,mety, metcov );
	// tau1P4 = static_cast<classic_svFit::TauTauHistogramAdapter*>(svfitAlgo2.getHistogramAdapter())->GetFittedTau1LV();
	// tau2P4 = static_cast<classic_svFit::TauTauHistogramAdapter*>(svfitAlgo2.getHistogramAdapter())->GetFittedTau2LV();
	
	// //---------  svfit ---------------------
	//if(svfitAlgo1.isValidSolution()){
	if(Ntp->Daughters_charge(Tau1)>0)
	  {
	    Tauplussvfit.SetPxPyPzE(tau1P4.x(),tau1P4.y(),tau1P4.z(),tau1P4.t());
	    Tauminussvfit.SetPxPyPzE(tau2P4.x(),tau2P4.y(),tau2P4.z(),tau2P4.t());
	
	  }
	else
	  {
	    Tauplussvfit.SetPxPyPzE(tau2P4.x(),tau2P4.y(),tau2P4.z(),tau2P4.t());
	    Tauminussvfit.SetPxPyPzE(tau1P4.x(),tau1P4.y(),tau1P4.z(),tau1P4.t());
	  }
      }
      //    }
      // }
      
    if(Has2jets>=0)
      {
	//dijetpt_=Ntp->dijetpt(Has2jets);
	jdeta_=Ntp->jdeta(Has2jets);
	mjj_=Ntp->mjj(Has2jets);
      }

    if(Has1jet>=0)jpt_1_=Ntp->jpt_1(Has1jet);
    if(svfitAlgo1.isValidSolution()) m_sv_=higgsmass;
    else m_sv_=-1;
    m_vis_=(Tau1P4+Tau2P4).M();
    met_=PUPPIMET;
    n_jets_=Ntp->njets(IndexSelectedTemp.at(0));
    pt_1_=Tau1P4.Pt();
    //pt_2_=Tau2P4.Pt();
    pt_tt_=(Tau1P4+Tau2P4+TLorentzVector(PUPPImetCorr_px,PUPPImetCorr_py,0,0)).Pt();
    pt_vis_=(Tau1P4+Tau2P4).Pt();
    BDT->Execute(jdeta_, jpt_1_, m_vis_, met_, mjj_, n_jets_, pt_1_, pt_tt_, pt_vis_, m_sv_, evt_,scores,max_pair);
    
    // cout<<svfitAlgo1.isValidSolution()<<endl;
    // Acoplanar Angle
    }
    if(a1a1MVA && std::isnan(Wspin)!=true && Ntp->PFTauRefit_PionsP4_SizePions(Tauminus)==3 && Ntp->PFTauRefit_PionsP4_SizePions(Tauplus)==3)
      {

	std::vector<double> PVRefitNoBS_X_temp, PVRefitNoBS_Y_temp, PVRefitNoBS_Z_temp;
	for(unsigned int i=0;i<Ntp->NPVRefitNoBS();i++)
	  {
	    PVRefitNoBS_X_temp.push_back(Ntp->RefitPVNoBS_x(i));
	    PVRefitNoBS_Y_temp.push_back(Ntp->RefitPVNoBS_y(i));
	    PVRefitNoBS_Z_temp.push_back(Ntp->RefitPVNoBS_z(i));
	  }

	std::vector<double> PVRefitBS_X_temp, PVRefitBS_Y_temp, PVRefitBS_Z_temp;
	for(unsigned int i=0;i<Ntp->NPVRefitBS();i++)
	  {
	    PVRefitBS_X_temp.push_back(Ntp->RefitPVBS_x(i));
	    PVRefitBS_Y_temp.push_back(Ntp->RefitPVBS_y(i));
	    PVRefitBS_Z_temp.push_back(Ntp->RefitPVBS_z(i));
	  }
	

	vector<size_t> VertexHashNoBS1_temp, VertexHashNoBS2_temp;
	for(unsigned int i=0;i<Ntp->NVertexHashNoBS();i++)
	  {
	    VertexHashNoBS1_temp.push_back(Ntp->VertexHashNoBS1(i));
	    VertexHashNoBS2_temp.push_back(Ntp->VertexHashNoBS2(i));
	    
	  }

	vector<size_t> VertexHashBS1_temp, VertexHashBS2_temp;
	for(unsigned int i=0;i<Ntp->NVertexHashBS();i++)
	  {
	    VertexHashBS1_temp.push_back(Ntp->VertexHashBS1(i));
	    VertexHashBS2_temp.push_back(Ntp->VertexHashBS2(i));
	    
	  }

	boost::hash_combine(hash, Ntp->LeptonHash(Tauminus));
	boost::hash_combine(hash, Ntp->LeptonHash(Tauplus));
	hashes.push_back(hash);
	hash = 0;
	boost::hash_combine(hash, Ntp->LeptonHash(Tauplus));
	boost::hash_combine(hash, Ntp->LeptonHash(Tauminus));
	hashes.push_back(hash);

	TauminusSecondaryVertex = Ntp->PFTau_secondaryVertex_pos(Tauminus);
	TauplusSecondaryVertex = Ntp->PFTau_secondaryVertex_pos(Tauplus);

	a1LV_Tauminus = Ntp->PFTau_PionsP4(Tauminus,0) + Ntp->PFTau_PionsP4(Tauminus,1) + Ntp->PFTau_PionsP4(Tauminus,2);
	a1LV_Tauplus = Ntp->PFTau_PionsP4(Tauplus,0) + Ntp->PFTau_PionsP4(Tauplus,1) + Ntp->PFTau_PionsP4(Tauplus,2);

	a1LVRefit_Tauminus = Ntp->PFTauRefit_PionsP4(Tauminus,0) + Ntp->PFTauRefit_PionsP4(Tauminus,1) + Ntp->PFTauRefit_PionsP4(Tauminus,2);
	a1LVRefit_Tauplus = Ntp->PFTauRefit_PionsP4(Tauplus,0) + Ntp->PFTauRefit_PionsP4(Tauplus,1) + Ntp->PFTauRefit_PionsP4(Tauplus,2);

	tauPrimaryVertex=Ntp->PVtx();

	tauNoBSPrimaryVertex = GetRefittedPV(hashes, tauPrimaryVertex,PVRefitNoBS_X_temp ,PVRefitNoBS_Y_temp,PVRefitNoBS_Z_temp ,VertexHashNoBS1_temp, VertexHashNoBS2_temp,isRefitNoBS);
	tauBSPrimaryVertex = GetRefittedPV(hashes, tauPrimaryVertex, PVRefitBS_X_temp ,PVRefitBS_Y_temp,PVRefitBS_Z_temp ,VertexHashBS1_temp, VertexHashBS2_temp,isRefitBS);
	tauNoBSZNominalPrimaryVertex = GetRefittedPV(hashes, tauPrimaryVertex, PVRefitNoBS_X_temp ,PVRefitNoBS_Y_temp, Ntp->pv_z() ,VertexHashNoBS1_temp, VertexHashNoBS2_temp,isRefitNoBSZNominal);
	tauBSZNominalPrimaryVertex = GetRefittedPV(hashes, tauPrimaryVertex,PVRefitBS_X_temp ,PVRefitBS_Y_temp , Ntp->pv_z() ,VertexHashBS1_temp, VertexHashBS2_temp,isRefitBSZNominal);

	tauWithTracksBSPrimaryVertex = TVector3(Ntp->RefitPVWithTracksBS_x(),Ntp->RefitPVWithTracksBS_y(),Ntp->RefitPVWithTracksBS_z());
	tauWithTracksBSZNominalPrimaryVertex = TVector3(Ntp->RefitPVWithTracksBS_x(),Ntp->RefitPVWithTracksBS_y(),Ntp->PVtx().Z());

	
	TauminusDirection = TauminusSecondaryVertex - tauPrimaryVertex;
	TauplusDirection = TauplusSecondaryVertex - tauPrimaryVertex;

	solutionsNoBS=tauPairMomentumSolutions(TauminusSecondaryVertex-tauNoBSPrimaryVertex, a1LVRefit_Tauminus, a1LV_Tauminus, isMinusReal, TauplusSecondaryVertex-tauNoBSPrimaryVertex, a1LVRefit_Tauplus, a1LVRefit_Tauplus, isPlusReal,isRefitNoBS); 
	solutionsBS=tauPairMomentumSolutions(TauminusSecondaryVertex-tauBSPrimaryVertex, a1LVRefit_Tauminus, a1LV_Tauminus, isMinusReal, TauplusSecondaryVertex-tauBSPrimaryVertex, a1LVRefit_Tauplus, a1LVRefit_Tauplus, isPlusReal,isRefitBS); 
	solutionsNoBSZNominal=tauPairMomentumSolutions(TauminusSecondaryVertex-tauNoBSZNominalPrimaryVertex, a1LVRefit_Tauminus, a1LV_Tauminus, isMinusReal, TauplusSecondaryVertex-tauNoBSZNominalPrimaryVertex, a1LVRefit_Tauplus, a1LVRefit_Tauplus, isPlusReal,isRefitNoBSZNominal); 
	solutionsBSZNominal=tauPairMomentumSolutions(TauminusSecondaryVertex-tauBSZNominalPrimaryVertex, a1LVRefit_Tauminus, a1LV_Tauminus, isMinusReal, TauplusSecondaryVertex-tauBSZNominalPrimaryVertex, a1LVRefit_Tauplus, a1LVRefit_Tauplus, isPlusReal,isRefitBSZNominal); 

	solutions=tauPairMomentumSolutions(TauminusDirection, a1LVRefit_Tauminus, a1LV_Tauminus, isMinusReal, TauplusDirection, a1LVRefit_Tauplus, a1LV_Tauplus, isPlusReal,false);
	
	solutionsWithTracksBS=tauPairMomentumSolutions(TauminusSecondaryVertex-tauWithTracksBSPrimaryVertex, a1LVRefit_Tauminus, a1LV_Tauminus, isMinusReal, TauplusSecondaryVertex-tauWithTracksBSPrimaryVertex, a1LVRefit_Tauplus, a1LVRefit_Tauplus, isPlusReal,true); 
	solutionsWithTracksBSZNominal=tauPairMomentumSolutions(TauminusSecondaryVertex-tauWithTracksBSZNominalPrimaryVertex, a1LVRefit_Tauminus, a1LV_Tauminus, isMinusReal, TauplusSecondaryVertex-tauBSZNominalPrimaryVertex, a1LVRefit_Tauplus, a1LVRefit_Tauplus, isPlusReal,true); 

	TauminusPairConstraint = solutions.at(3);
	TauplusPairConstraint = solutions.at(7);

	TauminusPairConstraintNoBS=solutionsNoBS.at(3);
	TauminusPairConstraintBS=solutionsBS.at(3);
	TauminusPairConstraintNoBSZNominal=solutionsNoBSZNominal.at(3);
	TauminusPairConstraintBSZNominal=solutionsBSZNominal.at(3);

	TauplusPairConstraintNoBS=solutionsNoBS.at(7);
	TauplusPairConstraintBS=solutionsBS.at(7);
	TauplusPairConstraintNoBSZNominal=solutionsNoBSZNominal.at(7);
	TauplusPairConstraintBSZNominal=solutionsBSZNominal.at(7);

	TauminusPairConstraintWithTracksBS=solutionsWithTracksBS.at(3);
	TauminusPairConstraintWithTracksBSZNominal=solutionsWithTracksBSZNominal.at(3);
	TauplusPairConstraintWithTracksBS=solutionsWithTracksBS.at(7);
	TauplusPairConstraintWithTracksBSZNominal=solutionsWithTracksBSZNominal.at(7);
	
	HPairConstraint= TauplusPairConstraint+TauminusPairConstraint;


	HadPions_minus.push_back(Ntp->PFTau_PionsP4(Tauminus,0));
	HadPions_minus.push_back(Ntp->PFTau_PionsP4(Tauminus,1));
	HadPions_minus.push_back(Ntp->PFTau_PionsP4(Tauminus,2));

	HadPionsCharge_minus.push_back(Ntp->PFTau_PionsCharge(Tauminus, 0));
	HadPionsCharge_minus.push_back(Ntp->PFTau_PionsCharge(Tauminus, 1));
	HadPionsCharge_minus.push_back(Ntp->PFTau_PionsCharge(Tauminus, 2));

	SCalculator Scalcminusa1("a1");
	Scalcminusa1.SortPions(HadPions_minus,HadPionsCharge_minus);

	HadPions_plus.push_back(Ntp->PFTau_PionsP4(Tauplus,0));
	HadPions_plus.push_back(Ntp->PFTau_PionsP4(Tauplus,1));
	HadPions_plus.push_back(Ntp->PFTau_PionsP4(Tauplus,2));

	HadPionsCharge_plus.push_back(Ntp->PFTau_PionsCharge(Tauplus, 0));
	HadPionsCharge_plus.push_back(Ntp->PFTau_PionsCharge(Tauplus, 1));
	HadPionsCharge_plus.push_back(Ntp->PFTau_PionsCharge(Tauplus, 2));

	SCalculator Scalcplusa1("a1");
	Scalcplusa1.SortPions(HadPions_plus,HadPionsCharge_plus);

	HadRefitPions_minus.push_back(Ntp->PFTauRefit_PionsP4(Tauminus,0));
	HadRefitPions_minus.push_back(Ntp->PFTauRefit_PionsP4(Tauminus,1));
	HadRefitPions_minus.push_back(Ntp->PFTauRefit_PionsP4(Tauminus,2));

	HadRefitPionsCharge_minus.push_back(Ntp->PFTauRefit_PionsCharge(Tauminus, 0));
	HadRefitPionsCharge_minus.push_back(Ntp->PFTauRefit_PionsCharge(Tauminus, 1));
	HadRefitPionsCharge_minus.push_back(Ntp->PFTauRefit_PionsCharge(Tauminus, 2));

	SCalculator ScalcRefitminusa1("a1");
	ScalcRefitminusa1.SortPions(HadRefitPions_minus,HadRefitPionsCharge_minus);
	HadRefitPions_plus.push_back(Ntp->PFTauRefit_PionsP4(Tauplus,0));
	HadRefitPions_plus.push_back(Ntp->PFTauRefit_PionsP4(Tauplus,1));
	HadRefitPions_plus.push_back(Ntp->PFTauRefit_PionsP4(Tauplus,2));

	HadRefitPionsCharge_plus.push_back(Ntp->PFTauRefit_PionsCharge(Tauplus, 0));
	HadRefitPionsCharge_plus.push_back(Ntp->PFTauRefit_PionsCharge(Tauplus, 1));
	HadRefitPionsCharge_plus.push_back(Ntp->PFTauRefit_PionsCharge(Tauplus, 2));

	SCalculator ScalcRefitplusa1("a1");
	ScalcRefitplusa1.SortPions(HadRefitPions_plus,HadRefitPionsCharge_plus);
      }


    
    if(Ntp->isData() && !Ntp->byMediumDeepTau2017v2p1VSjet_1(IndexSelectedTemp.at(0)) && Ntp->byVVVLooseDeepTau2017v2p1VSjet_1(IndexSelectedTemp.at(0)) && Ntp->byMediumDeepTau2017v2p1VSjet_2(IndexSelectedTemp.at(0))) {
      double isOS=(Ntp->Daughters_charge(Tau1)/abs(Ntp->Daughters_charge(Tau1))) != (Ntp->Daughters_charge(Tau2)/abs(Ntp->Daughters_charge(Tau2)));
      auto args = std::vector<double>{Tau1P4.Pt(),(double)Ntp->MVADM2017(Tau1),(double)Ntp->njets(IndexSelectedTemp.at(0)),Tau2P4.Pt(),isOS,PUPPIMET*cos(TLorentzVector(Tau1P4.X(),Tau1P4.Y(),Tau1P4.Z(),0.).DeltaPhi(TLorentzVector(PUPPImetCorr_px,PUPPImetCorr_py,0.,0.)))/Tau1P4.Pt()};
      double FFData2016 = std::shared_ptr<RooFunctor>(wFF2016->function("ff_tt_medium_mvadmbins_nosig")->functor(wFF2016->argSet("pt,mvadm,njets,pt_2,os,met_var_qcd")))->eval(args.data());
      //cout<<"Nominal: "<<FFData2016<<endl;
      
      // Tau1PT.at(1).Fill(Tau1P4.Pt(),FFData2016);
      // Tau1E.at(1).Fill(Tau1P4.E(),FFData2016);
      // Tau1Mass.at(1).Fill(Tau1P4.M(),FFData2016);
      // Tau1Phi.at(1).Fill(Tau1P4.Phi(),FFData2016);
      // Tau1Eta.at(1).Fill(Tau1P4.Eta(),FFData2016);
      // Tau1dz.at(1).Fill(Ntp->dz(Tau1),FFData2016);
      // Tau1HPSDecayMode.at(1).Fill(Ntp->decayMode(Tau1),FFData2016);
      // Tau1MVADecayMode.at(1).Fill(Ntp->MVADM2017(Tau1),FFData2016);
      // //if(!Ntp->isData())Tau1GenMatch.at(1).Fill(Ntp->GetGenMatch(Tau1),FFData2016);
      // Tau2PT.at(1).Fill(Tau2P4.Pt(),FFData2016);
      // Tau2E.at(1).Fill(Tau2P4.E(),FFData2016);
      // Tau2Mass.at(1).Fill(Tau2P4.M(),FFData2016);
      // Tau2Phi.at(1).Fill(Tau2P4.Phi(),FFData2016);
      // Tau2Eta.at(1).Fill(Tau2P4.Eta(),FFData2016);
      // Tau2dz.at(1).Fill(Ntp->dz(Tau2),FFData2016);
      // Tau2HPSDecayMode.at(1).Fill(Ntp->decayMode(Tau2),FFData2016);
      // Tau2MVADecayMode.at(1).Fill(Ntp->MVADM2017(Tau2),FFData2016);
      // //if(!Ntp->isData())Tau2GenMatch.at(1).Fill(Ntp->GetGenMatch(Tau2),FFData2016);
      // PUPPImetcorr.at(1).Fill(PUPPIMET,FFData2016);
      // NbJets.at(1).Fill(Ntp->njets(IndexSelectedTemp.at(0)),FFData2016);
      // TauTauVisMass.at(1).Fill((Tau1P4+Tau2P4).M(),FFData2016);
      // TauTauFullMass.at(1).Fill((tau1P4+tau2P4).M(),FFData2016);
      // TauTauVisPT.at(1).Fill((Tau1P4+Tau2P4).Pt(),FFData2016);
      // TauTauFullPT.at(1).Fill((tau1P4+tau2P4).Pt(),FFData2016);
      // if(Has2jets>=0)
      // 	{
      // 	  Mjj.at(1).Fill(Ntp->mjj(Has2jets),FFData2016);
      // 	  dijetpt.at(1).Fill(Ntp->dijetpt(Has2jets),FFData2016);
      // 	  dijetphi.at(1).Fill(Ntp->dijetphi(Has2jets),FFData2016);
      // 	  jdeta.at(1).Fill(Ntp->jdeta(Has2jets),FFData2016);
      // 	  jdphi.at(1).Fill(Ntp->jdphi(Has2jets),FFData2016);
      // 	  jpt_2.at(1).Fill(Ntp->jpt_2(Has2jets),FFData2016);
      // 	  jeta_2.at(1).Fill(Ntp->jeta_2(Has2jets),FFData2016);
      // 	  jphi_2.at(1).Fill(Ntp->jphi_2(Has2jets),FFData2016);
      // 	}
      // if(Has1jet>=0)
      // 	{
      // 	  jpt_1.at(1).Fill(Ntp->jpt_1(Has1jet),FFData2016);
      // 	  jeta_1.at(1).Fill(Ntp->jeta_1(Has1jet),FFData2016);
      // 	  jphi_1.at(1).Fill(Ntp->jphi_1(Has1jet),FFData2016);
	  
      // 	}
      // if(max_pair.second==0)HiggsBDTScore.at(1).Fill(max_pair.first,FFData2016);
      // if(max_pair.second==1)JetFakesBDTScore.at(1).Fill(max_pair.first,FFData2016);
      // if(max_pair.second==2)ZTTBDTScore.at(1).Fill(max_pair.first,FFData2016);


      if (std::isnan(Wspin)!=true)
	{
	  if(a1a1MVA)
	    {
	      // if(TauminusPairConstraint!=zeroLV && TauplusPairConstraint!=zeroLV && Scalc.isOk("a1", "a1", TauminusPairConstraint, HadPions_minus, HadPionsCharge_minus, TauplusPairConstraint , HadPions_plus, HadPionsCharge_plus)==true) polarimetricAcopAngleMVADM.at(1).Fill(Scalc.AcopAngle("a1", "a1", TauminusPairConstraint, HadPions_minus, HadPionsCharge_minus, TauplusPairConstraint, HadPions_plus, HadPionsCharge_plus),FFData2016);

	      // if(TauminusPairConstraintBS!=zeroLV && TauplusPairConstraintBS!=zeroLV && ScalcPVRefitBS.isOk("a1", "a1", TauminusPairConstraintBS, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintBS, HadRefitPions_plus, HadRefitPionsCharge_plus)==true) polarimetricAcopAnglePVRefitBSMVADM.at(1).Fill(ScalcPVRefitBS.AcopAngle("a1", "a1", TauminusPairConstraintBS, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintBS, HadRefitPions_plus, HadRefitPionsCharge_plus),FFData2016);

	      // if(TauminusPairConstraintBSZNominal!=zeroLV && TauplusPairConstraintBSZNominal!=zeroLV && ScalcPVRefitBSZNominal.isOk("a1", "a1", TauminusPairConstraintBSZNominal, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintBSZNominal, HadRefitPions_plus, HadRefitPionsCharge_plus)==true) polarimetricAcopAnglePVRefitBSZNominalMVADM.at(1).Fill(ScalcPVRefitBSZNominal.AcopAngle("a1", "a1", TauminusPairConstraintBSZNominal, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintBSZNominal, HadRefitPions_plus, HadRefitPionsCharge_plus),FFData2016);

	      // if(TauminusPairConstraintWithTracksBS!=zeroLV && TauplusPairConstraintWithTracksBS!=zeroLV && ScalcPVRefitWithTracksBS.isOk("a1", "a1", TauminusPairConstraintWithTracksBS, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintWithTracksBS, HadRefitPions_plus, HadRefitPionsCharge_plus)==true) polarimetricAcopAnglePVRefitWithTracksBSMVADM.at(1).Fill(ScalcPVRefitWithTracksBS.AcopAngle("a1", "a1", TauminusPairConstraintWithTracksBS, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintWithTracksBS, HadRefitPions_plus, HadRefitPionsCharge_plus),FFData2016);

	      // if(TauminusPairConstraintWithTracksBSZNominal!=zeroLV && TauplusPairConstraintWithTracksBSZNominal!=zeroLV && ScalcPVRefitWithTracksBSZNominal.isOk("a1", "a1", TauminusPairConstraintWithTracksBSZNominal, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintWithTracksBSZNominal, HadRefitPions_plus, HadRefitPionsCharge_plus)==true) polarimetricAcopAnglePVRefitWithTracksBSZNominalMVADM.at(1).Fill(ScalcPVRefitWithTracksBSZNominal.AcopAngle("a1", "a1", TauminusPairConstraintWithTracksBSZNominal, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintWithTracksBSZNominal, HadRefitPions_plus, HadRefitPionsCharge_plus),FFData2016);


	      if ((HadPions_minus!=HadPions_plus) && (HadPions_minus!=VectZeroLV) && (HadPions_plus!=VectZeroLV) && (HadRefitPions_minus!=HadRefitPions_plus) && (HadRefitPions_minus!=VectZeroLV) && (HadRefitPions_plus!=VectZeroLV))
		{
		  if(TauminusPairConstraint!=TauplusPairConstraint && TauminusPairConstraint!=zeroLV && TauplusPairConstraint!=zeroLV )
		    {
		      // Tau1PTa1a1.at(1).Fill(Tau1P4.Pt(),FFData2016);
		      // Tau1Ea1a1.at(1).Fill(Tau1P4.E(),FFData2016);
		      // Tau1Massa1a1.at(1).Fill(Tau1P4.M(),FFData2016);
		      // Tau1Phia1a1.at(1).Fill(Tau1P4.Phi(),FFData2016);
		      // Tau1Etaa1a1.at(1).Fill(Tau1P4.Eta(),FFData2016);
		      // Tau1dza1a1.at(1).Fill(Ntp->dz(Tau1),FFData2016);
		      // Tau2PTa1a1.at(1).Fill(Tau2P4.Pt(),FFData2016);
		      // Tau2Ea1a1.at(1).Fill(Tau2P4.E(),FFData2016);
		      // Tau2Massa1a1.at(1).Fill(Tau2P4.M(),FFData2016);
		      // Tau2Phia1a1.at(1).Fill(Tau2P4.Phi(),FFData2016);
		      // Tau2Etaa1a1.at(1).Fill(Tau2P4.Eta(),FFData2016);
		      // Tau2dza1a1.at(1).Fill(Ntp->dz(Tau2),FFData2016);
		      // PUPPImetcorra1a1.at(1).Fill(PUPPIMET,FFData2016);
		      // PUPPImetcorrphia1a1.at(1).Fill(TMath::ATan2(PUPPImetCorr_py,PUPPImetCorr_px),FFData2016);
		      // NbJetsa1a1.at(1).Fill(Ntp->njets(IndexSelectedTemp.at(0)),FFData2016);
		      // TauTauVisMassa1a1.at(1).Fill((Tau1P4+Tau2P4).M(),FFData2016);
		      // TauTauFullMassa1a1.at(1).Fill((tau1P4+tau2P4).M(),FFData2016);
		      // TauTauVisPTa1a1.at(1).Fill((Tau1P4+Tau2P4).Pt(),FFData2016);
		      // TauTauFullPTa1a1.at(1).Fill((tau1P4+tau2P4).Pt(),FFData2016);
		      // if(Has2jets>=0)
		      // 	{
		      // 	  Mjja1a1.at(1).Fill(Ntp->mjj(Has2jets),FFData2016);
		      // 	  dijetpta1a1.at(1).Fill(Ntp->dijetpt(Has2jets),FFData2016);
		      // 	  dijetphia1a1.at(1).Fill(Ntp->dijetphi(Has2jets),FFData2016);
		      // 	  jdetaa1a1.at(1).Fill(Ntp->jdeta(Has2jets),FFData2016);
		      // 	  jdphia1a1.at(1).Fill(Ntp->jdphi(Has2jets),FFData2016);
		      // 	  jpt_2a1a1.at(1).Fill(Ntp->jpt_2(Has2jets),FFData2016);
		      // 	  jeta_2a1a1.at(1).Fill(Ntp->jeta_2(Has2jets),FFData2016);
		      // 	  jphi_2a1a1.at(1).Fill(Ntp->jphi_2(Has2jets),FFData2016);
		      // 	}
		      // if(Has1jet>=0)
		      // 	{
		      // 	  jpt_1a1a1.at(1).Fill(Ntp->jpt_1(Has1jet),FFData2016);
		      // 	  jeta_1a1a1.at(1).Fill(Ntp->jeta_1(Has1jet),FFData2016);
		      // 	  jphi_1a1a1.at(1).Fill(Ntp->jphi_1(Has1jet),FFData2016);
		      // 	}
		      if(max_pair.second==0)
			{
			  HiggsBDTScorea1a1.at(1).Fill(max_pair.first,FFData2016);
			  if(TauminusPairConstraint!=zeroLV && TauplusPairConstraint!=zeroLV && Scalc.isOk("a1", "a1", TauminusPairConstraint, HadPions_minus, HadPionsCharge_minus, TauplusPairConstraint , HadPions_plus, HadPionsCharge_plus)==true){
			    //polarimetricAcopAngleMVADMHiggs.at(1).Fill(Scalc.AcopAngle("a1", "a1", TauminusPairConstraint, HadPions_minus, HadPionsCharge_minus, TauplusPairConstraint, HadPions_plus, HadPionsCharge_plus),max_pair.first,FFData2016);

			  }
			  
			  if(TauminusPairConstraintBS!=zeroLV && TauplusPairConstraintBS!=zeroLV && ScalcPVRefitBS.isOk("a1", "a1", TauminusPairConstraintBS, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintBS, HadRefitPions_plus, HadRefitPionsCharge_plus)==true){
			    //polarimetricAcopAnglePVRefitBSMVADMHiggs.at(1).Fill(ScalcPVRefitBS.AcopAngle("a1", "a1", TauminusPairConstraintBS, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintBS, HadRefitPions_plus, HadRefitPionsCharge_plus),max_pair.first,FFData2016);
			  
			  }
			  if(TauminusPairConstraintBSZNominal!=zeroLV && TauplusPairConstraintBSZNominal!=zeroLV && ScalcPVRefitBSZNominal.isOk("a1", "a1", TauminusPairConstraintBSZNominal, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintBSZNominal, HadRefitPions_plus, HadRefitPionsCharge_plus)==true){
			    //			    polarimetricAcopAnglePVRefitBSZNominalMVADMHiggs.at(1).Fill(ScalcPVRefitBSZNominal.AcopAngle("a1", "a1", TauminusPairConstraintBSZNominal, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintBSZNominal, HadRefitPions_plus, HadRefitPionsCharge_plus),max_pair.first,FFData2016);
			    
			  }

			  if(TauminusPairConstraintWithTracksBS!=zeroLV && TauplusPairConstraintWithTracksBS!=zeroLV && ScalcPVRefitWithTracksBS.isOk("a1", "a1", TauminusPairConstraintWithTracksBS, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintWithTracksBS, HadRefitPions_plus, HadRefitPionsCharge_plus)==true){
			    
			    
			    if(max_pair.first>0 && max_pair.first<0.5)polarimetricAcopAnglePVRefitWithTracksBSMVADMHiggsUnrolled.at(1).Fill(ScalcPVRefitWithTracksBS.AcopAngle("a1", "a1", TauminusPairConstraintWithTracksBS, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintWithTracksBS, HadRefitPions_plus, HadRefitPionsCharge_plus),FFData2016*Wspin);
			    if(max_pair.first>0.5 && max_pair.first<0.6)polarimetricAcopAnglePVRefitWithTracksBSMVADMHiggsUnrolled.at(1).Fill(2*TMath::Pi()+ScalcPVRefitWithTracksBS.AcopAngle("a1", "a1", TauminusPairConstraintWithTracksBS, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintWithTracksBS, HadRefitPions_plus, HadRefitPionsCharge_plus),FFData2016*Wspin);
			    if(max_pair.first>0.6 && max_pair.first<0.7)polarimetricAcopAnglePVRefitWithTracksBSMVADMHiggsUnrolled.at(1).Fill(2*2*TMath::Pi()+ScalcPVRefitWithTracksBS.AcopAngle("a1", "a1", TauminusPairConstraintWithTracksBS, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintWithTracksBS, HadRefitPions_plus, HadRefitPionsCharge_plus),FFData2016*Wspin);
			    if(max_pair.first>0.7 && max_pair.first<1.)polarimetricAcopAnglePVRefitWithTracksBSMVADMHiggsUnrolled.at(1).Fill(3*2*TMath::Pi()+ScalcPVRefitWithTracksBS.AcopAngle("a1", "a1", TauminusPairConstraintWithTracksBS, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintWithTracksBS, HadRefitPions_plus, HadRefitPionsCharge_plus),FFData2016*Wspin);
			    
			    
			    polarimetricAcopAnglePVRefitWithTracksBSMVADMHiggs.at(1).Fill(ScalcPVRefitWithTracksBS.AcopAngle("a1", "a1", TauminusPairConstraintWithTracksBS, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintWithTracksBS, HadRefitPions_plus, HadRefitPionsCharge_plus),max_pair.first,FFData2016);
			    jetFakes_ff_tt_qcd_stat_njet0_mvadm10_upPVRefitWithTracksBSHiggs.at(1).Fill(ScalcPVRefitWithTracksBS.AcopAngle("a1", "a1", TauminusPairConstraintWithTracksBS, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintWithTracksBS, HadRefitPions_plus, HadRefitPionsCharge_plus),max_pair.first,(std::shared_ptr<RooFunctor>(wFF2016->function("ff_tt_medium_mvadmbins_nosig_qcd_stat_njet0_mvadm10_up")->functor(wFF2016->argSet("pt,mvadm,njets,pt_2,os,met_var_qcd")))->eval(args.data()))*Wspin);
			    jetFakes_ff_tt_qcd_stat_njet0_mvadm10_downPVRefitWithTracksBSHiggs.at(1).Fill(ScalcPVRefitWithTracksBS.AcopAngle("a1", "a1", TauminusPairConstraintWithTracksBS, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintWithTracksBS, HadRefitPions_plus, HadRefitPionsCharge_plus),max_pair.first,(std::shared_ptr<RooFunctor>(wFF2016->function("ff_tt_medium_mvadmbins_nosig_qcd_stat_njet0_mvadm10_down")->functor(wFF2016->argSet("pt,mvadm,njets,pt_2,os,met_var_qcd")))->eval(args.data()))*Wspin);
			    jetFakes_ff_tt_qcd_stat_njet1_mvadm10_upPVRefitWithTracksBSHiggs.at(1).Fill(ScalcPVRefitWithTracksBS.AcopAngle("a1", "a1", TauminusPairConstraintWithTracksBS, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintWithTracksBS, HadRefitPions_plus, HadRefitPionsCharge_plus),max_pair.first,(std::shared_ptr<RooFunctor>(wFF2016->function("ff_tt_medium_mvadmbins_nosig_qcd_stat_njet1_mvadm10_up")->functor(wFF2016->argSet("pt,mvadm,njets,pt_2,os,met_var_qcd")))->eval(args.data()))*Wspin);
			    jetFakes_ff_tt_qcd_stat_njet1_mvadm10_downPVRefitWithTracksBSHiggs.at(1).Fill(ScalcPVRefitWithTracksBS.AcopAngle("a1", "a1", TauminusPairConstraintWithTracksBS, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintWithTracksBS, HadRefitPions_plus, HadRefitPionsCharge_plus),max_pair.first,(std::shared_ptr<RooFunctor>(wFF2016->function("ff_tt_medium_mvadmbins_nosig_qcd_stat_njet1_mvadm10_down")->functor(wFF2016->argSet("pt,mvadm,njets,pt_2,os,met_var_qcd")))->eval(args.data()))*Wspin);
			    jetFakes_ff_tt_qcd_stat_njet2_mvadm10_upPVRefitWithTracksBSHiggs.at(1).Fill(ScalcPVRefitWithTracksBS.AcopAngle("a1", "a1", TauminusPairConstraintWithTracksBS, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintWithTracksBS, HadRefitPions_plus, HadRefitPionsCharge_plus),max_pair.first,(std::shared_ptr<RooFunctor>(wFF2016->function("ff_tt_medium_mvadmbins_nosig_qcd_stat_njet2_mvadm10_up")->functor(wFF2016->argSet("pt,mvadm,njets,pt_2,os,met_var_qcd")))->eval(args.data()))*Wspin);
			    jetFakes_ff_tt_qcd_stat_njet2_mvadm10_downPVRefitWithTracksBSHiggs.at(1).Fill(ScalcPVRefitWithTracksBS.AcopAngle("a1", "a1", TauminusPairConstraintWithTracksBS, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintWithTracksBS, HadRefitPions_plus, HadRefitPionsCharge_plus),max_pair.first,(std::shared_ptr<RooFunctor>(wFF2016->function("ff_tt_medium_mvadmbins_nosig_qcd_stat_njet2_mvadm10_down")->functor(wFF2016->argSet("pt,mvadm,njets,pt_2,os,met_var_qcd")))->eval(args.data()))*Wspin);
			    jetFakes_ff_tt_qcd_met_closure_systUpPVRefitWithTracksBSHiggs.at(1).Fill(ScalcPVRefitWithTracksBS.AcopAngle("a1", "a1", TauminusPairConstraintWithTracksBS, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintWithTracksBS, HadRefitPions_plus, HadRefitPionsCharge_plus),max_pair.first,(std::shared_ptr<RooFunctor>(wFF2016->function("ff_tt_medium_mvadmbins_nosig_qcd_met_up")->functor(wFF2016->argSet("pt,mvadm,njets,pt_2,os,met_var_qcd")))->eval(args.data()))*(std::shared_ptr<RooFunctor>(wFF2016->function("ff_tt_medium_mvadmbins_nosig_qcd_met_up")->functor(wFF2016->argSet("pt,mvadm,njets,pt_2,os,met_var_qcd")))->eval(args.data()))*Wspin);
			    jetFakes_ff_tt_qcd_met_closure_systDownPVRefitWithTracksBSHiggs.at(1).Fill(ScalcPVRefitWithTracksBS.AcopAngle("a1", "a1", TauminusPairConstraintWithTracksBS, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintWithTracksBS, HadRefitPions_plus, HadRefitPionsCharge_plus),max_pair.first,FFData2016*Wspin);
			  }

			  if(TauminusPairConstraintWithTracksBSZNominal!=zeroLV && TauplusPairConstraintWithTracksBSZNominal!=zeroLV && ScalcPVRefitWithTracksBSZNominal.isOk("a1", "a1", TauminusPairConstraintWithTracksBSZNominal, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintWithTracksBSZNominal, HadRefitPions_plus, HadRefitPionsCharge_plus)==true) {
			    
			  }
			}
			 
		      if(max_pair.second==1)
			{
			  JetFakesBDTScorea1a1.at(1).Fill(max_pair.first,FFData2016);
			  if(TauminusPairConstraint!=zeroLV && TauplusPairConstraint!=zeroLV && Scalc.isOk("a1", "a1", TauminusPairConstraint, HadPions_minus, HadPionsCharge_minus, TauplusPairConstraint , HadPions_plus, HadPionsCharge_plus)==true){
			    //polarimetricAcopAngleMVADMJetFakes.at(1).Fill(Scalc.AcopAngle("a1", "a1", TauminusPairConstraint, HadPions_minus, HadPionsCharge_minus, TauplusPairConstraint, HadPions_plus, HadPionsCharge_plus),max_pair.first,FFData2016);

			  }
			  if(TauminusPairConstraintBS!=zeroLV && TauplusPairConstraintBS!=zeroLV && ScalcPVRefitBS.isOk("a1", "a1", TauminusPairConstraintBS, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintBS, HadRefitPions_plus, HadRefitPionsCharge_plus)==true)
			    {
			      //polarimetricAcopAnglePVRefitBSMVADMJetFakes.at(1).Fill(ScalcPVRefitBS.AcopAngle("a1", "a1", TauminusPairConstraintBS, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintBS, HadRefitPions_plus, HadRefitPionsCharge_plus),max_pair.first,FFData2016);
			    }
			  if(TauminusPairConstraintBSZNominal!=zeroLV && TauplusPairConstraintBSZNominal!=zeroLV && ScalcPVRefitBSZNominal.isOk("a1", "a1", TauminusPairConstraintBSZNominal, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintBSZNominal, HadRefitPions_plus, HadRefitPionsCharge_plus)==true){
			    //polarimetricAcopAnglePVRefitBSZNominalMVADMJetFakes.at(1).Fill(ScalcPVRefitBSZNominal.AcopAngle("a1", "a1", TauminusPairConstraintBSZNominal, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintBSZNominal, HadRefitPions_plus, HadRefitPionsCharge_plus),max_pair.first,FFData2016);

			  }
			  if(TauminusPairConstraintWithTracksBS!=zeroLV && TauplusPairConstraintWithTracksBS!=zeroLV && ScalcPVRefitWithTracksBS.isOk("a1", "a1", TauminusPairConstraintWithTracksBS, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintWithTracksBS, HadRefitPions_plus, HadRefitPionsCharge_plus)==true){
			    polarimetricAcopAnglePVRefitWithTracksBSMVADMJetFakes.at(1).Fill(ScalcPVRefitWithTracksBS.AcopAngle("a1", "a1", TauminusPairConstraintWithTracksBS, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintWithTracksBS, HadRefitPions_plus, HadRefitPionsCharge_plus),max_pair.first,FFData2016);

			    if(max_pair.first>0 && max_pair.first<0.5)polarimetricAcopAnglePVRefitWithTracksBSMVADMJetFakesUnrolled.at(1).Fill(ScalcPVRefitWithTracksBS.AcopAngle("a1", "a1", TauminusPairConstraintWithTracksBS, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintWithTracksBS, HadRefitPions_plus, HadRefitPionsCharge_plus),FFData2016);
			    if(max_pair.first>0.5 && max_pair.first<0.6)polarimetricAcopAnglePVRefitWithTracksBSMVADMJetFakesUnrolled.at(1).Fill(2*TMath::Pi()+ScalcPVRefitWithTracksBS.AcopAngle("a1", "a1", TauminusPairConstraintWithTracksBS, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintWithTracksBS, HadRefitPions_plus, HadRefitPionsCharge_plus),FFData2016);
			    if(max_pair.first>0.6 && max_pair.first<0.7)polarimetricAcopAnglePVRefitWithTracksBSMVADMJetFakesUnrolled.at(1).Fill(2*2*TMath::Pi()+ScalcPVRefitWithTracksBS.AcopAngle("a1", "a1", TauminusPairConstraintWithTracksBS, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintWithTracksBS, HadRefitPions_plus, HadRefitPionsCharge_plus),FFData2016);
			    if(max_pair.first>0.7 && max_pair.first<1.)polarimetricAcopAnglePVRefitWithTracksBSMVADMJetFakesUnrolled.at(1).Fill(3*2*TMath::Pi()+ScalcPVRefitWithTracksBS.AcopAngle("a1", "a1", TauminusPairConstraintWithTracksBS, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintWithTracksBS, HadRefitPions_plus, HadRefitPionsCharge_plus),FFData2016);
			    

			    jetFakes_ff_tt_qcd_stat_njet0_mvadm10_upPVRefitWithTracksBSJetFakes.at(1).Fill(ScalcPVRefitWithTracksBS.AcopAngle("a1", "a1", TauminusPairConstraintWithTracksBS, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintWithTracksBS, HadRefitPions_plus, HadRefitPionsCharge_plus),max_pair.first,(std::shared_ptr<RooFunctor>(wFF2016->function("ff_tt_medium_mvadmbins_nosig_qcd_stat_njet0_mvadm10_up")->functor(wFF2016->argSet("pt,mvadm,njets,pt_2,os,met_var_qcd")))->eval(args.data()))*Wspin);
			    jetFakes_ff_tt_qcd_stat_njet0_mvadm10_downPVRefitWithTracksBSJetFakes.at(1).Fill(ScalcPVRefitWithTracksBS.AcopAngle("a1", "a1", TauminusPairConstraintWithTracksBS, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintWithTracksBS, HadRefitPions_plus, HadRefitPionsCharge_plus),max_pair.first,(std::shared_ptr<RooFunctor>(wFF2016->function("ff_tt_medium_mvadmbins_nosig_qcd_stat_njet0_mvadm10_down")->functor(wFF2016->argSet("pt,mvadm,njets,pt_2,os,met_var_qcd")))->eval(args.data()))*Wspin);
			    jetFakes_ff_tt_qcd_stat_njet1_mvadm10_upPVRefitWithTracksBSJetFakes.at(1).Fill(ScalcPVRefitWithTracksBS.AcopAngle("a1", "a1", TauminusPairConstraintWithTracksBS, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintWithTracksBS, HadRefitPions_plus, HadRefitPionsCharge_plus),max_pair.first,(std::shared_ptr<RooFunctor>(wFF2016->function("ff_tt_medium_mvadmbins_nosig_qcd_stat_njet1_mvadm10_up")->functor(wFF2016->argSet("pt,mvadm,njets,pt_2,os,met_var_qcd")))->eval(args.data()))*Wspin);
			    jetFakes_ff_tt_qcd_stat_njet1_mvadm10_downPVRefitWithTracksBSJetFakes.at(1).Fill(ScalcPVRefitWithTracksBS.AcopAngle("a1", "a1", TauminusPairConstraintWithTracksBS, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintWithTracksBS, HadRefitPions_plus, HadRefitPionsCharge_plus),max_pair.first,(std::shared_ptr<RooFunctor>(wFF2016->function("ff_tt_medium_mvadmbins_nosig_qcd_stat_njet1_mvadm10_down")->functor(wFF2016->argSet("pt,mvadm,njets,pt_2,os,met_var_qcd")))->eval(args.data()))*Wspin);
			    jetFakes_ff_tt_qcd_stat_njet2_mvadm10_upPVRefitWithTracksBSJetFakes.at(1).Fill(ScalcPVRefitWithTracksBS.AcopAngle("a1", "a1", TauminusPairConstraintWithTracksBS, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintWithTracksBS, HadRefitPions_plus, HadRefitPionsCharge_plus),max_pair.first,(std::shared_ptr<RooFunctor>(wFF2016->function("ff_tt_medium_mvadmbins_nosig_qcd_stat_njet2_mvadm10_up")->functor(wFF2016->argSet("pt,mvadm,njets,pt_2,os,met_var_qcd")))->eval(args.data()))*Wspin);
			    jetFakes_ff_tt_qcd_stat_njet2_mvadm10_downPVRefitWithTracksBSJetFakes.at(1).Fill(ScalcPVRefitWithTracksBS.AcopAngle("a1", "a1", TauminusPairConstraintWithTracksBS, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintWithTracksBS, HadRefitPions_plus, HadRefitPionsCharge_plus),max_pair.first,(std::shared_ptr<RooFunctor>(wFF2016->function("ff_tt_medium_mvadmbins_nosig_qcd_stat_njet2_mvadm10_down")->functor(wFF2016->argSet("pt,mvadm,njets,pt_2,os,met_var_qcd")))->eval(args.data()))*Wspin);
			    
			    jetFakes_ff_tt_qcd_met_closure_systUpPVRefitWithTracksBSJetFakes.at(1).Fill(ScalcPVRefitWithTracksBS.AcopAngle("a1", "a1", TauminusPairConstraintWithTracksBS, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintWithTracksBS, HadRefitPions_plus, HadRefitPionsCharge_plus),max_pair.first,(std::shared_ptr<RooFunctor>(wFF2016->function("ff_tt_medium_mvadmbins_nosig_qcd_met_up")->functor(wFF2016->argSet("pt,mvadm,njets,pt_2,os,met_var_qcd")))->eval(args.data()))*(std::shared_ptr<RooFunctor>(wFF2016->function("ff_tt_medium_mvadmbins_nosig_qcd_met_up")->functor(wFF2016->argSet("pt,mvadm,njets,pt_2,os,met_var_qcd")))->eval(args.data()))*Wspin);
			    jetFakes_ff_tt_qcd_met_closure_systDownPVRefitWithTracksBSJetFakes.at(1).Fill(ScalcPVRefitWithTracksBS.AcopAngle("a1", "a1", TauminusPairConstraintWithTracksBS, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintWithTracksBS, HadRefitPions_plus, HadRefitPionsCharge_plus),max_pair.first,FFData2016*Wspin);
			  }
			  if(TauminusPairConstraintWithTracksBSZNominal!=zeroLV && TauplusPairConstraintWithTracksBSZNominal!=zeroLV && ScalcPVRefitWithTracksBSZNominal.isOk("a1", "a1", TauminusPairConstraintWithTracksBSZNominal, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintWithTracksBSZNominal, HadRefitPions_plus, HadRefitPionsCharge_plus)==true){
			    //			    polarimetricAcopAnglePVRefitWithTracksBSZNominalMVADMJetFakes.at(1).Fill(ScalcPVRefitWithTracksBSZNominal.AcopAngle("a1", "a1", TauminusPairConstraintWithTracksBSZNominal, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintWithTracksBSZNominal, HadRefitPions_plus, HadRefitPionsCharge_plus),max_pair.first,FFData2016);
			    
			  }
			}
		      if(max_pair.second==2)
			{
			  ZTTBDTScorea1a1.at(1).Fill(max_pair.first,FFData2016);
			  if(TauminusPairConstraint!=zeroLV && TauplusPairConstraint!=zeroLV && Scalc.isOk("a1", "a1", TauminusPairConstraint, HadPions_minus, HadPionsCharge_minus, TauplusPairConstraint , HadPions_plus, HadPionsCharge_plus)==true)
			    {

			      //			      polarimetricAcopAngleMVADMZTT.at(1).Fill(Scalc.AcopAngle("a1", "a1", TauminusPairConstraint, HadPions_minus, HadPionsCharge_minus, TauplusPairConstraint, HadPions_plus, HadPionsCharge_plus),max_pair.first,FFData2016);

			    }
			  if(TauminusPairConstraintBS!=zeroLV && TauplusPairConstraintBS!=zeroLV && ScalcPVRefitBS.isOk("a1", "a1", TauminusPairConstraintBS, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintBS, HadRefitPions_plus, HadRefitPionsCharge_plus)==true)
			    {
			      //			      polarimetricAcopAnglePVRefitBSMVADMZTT.at(1).Fill(ScalcPVRefitBS.AcopAngle("a1", "a1", TauminusPairConstraintBS, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintBS, HadRefitPions_plus, HadRefitPionsCharge_plus),max_pair.first,FFData2016);

			    }
			  if(TauminusPairConstraintBSZNominal!=zeroLV && TauplusPairConstraintBSZNominal!=zeroLV && ScalcPVRefitBSZNominal.isOk("a1", "a1", TauminusPairConstraintBSZNominal, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintBSZNominal, HadRefitPions_plus, HadRefitPionsCharge_plus)==true){
			    //polarimetricAcopAnglePVRefitBSZNominalMVADMZTT.at(1).Fill(ScalcPVRefitBSZNominal.AcopAngle("a1", "a1", TauminusPairConstraintBSZNominal, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintBSZNominal, HadRefitPions_plus, HadRefitPionsCharge_plus),max_pair.first,FFData2016);
			    
			  }
			  if(TauminusPairConstraintWithTracksBS!=zeroLV && TauplusPairConstraintWithTracksBS!=zeroLV && ScalcPVRefitWithTracksBS.isOk("a1", "a1", TauminusPairConstraintWithTracksBS, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintWithTracksBS, HadRefitPions_plus, HadRefitPionsCharge_plus)==true){
			    polarimetricAcopAnglePVRefitWithTracksBSMVADMZTT.at(1).Fill(ScalcPVRefitWithTracksBS.AcopAngle("a1", "a1", TauminusPairConstraintWithTracksBS, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintWithTracksBS, HadRefitPions_plus, HadRefitPionsCharge_plus),max_pair.first,FFData2016);

			    if(max_pair.first>0 && max_pair.first<0.5)polarimetricAcopAnglePVRefitWithTracksBSMVADMZTTUnrolled.at(1).Fill(ScalcPVRefitWithTracksBS.AcopAngle("a1", "a1", TauminusPairConstraintWithTracksBS, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintWithTracksBS, HadRefitPions_plus, HadRefitPionsCharge_plus),FFData2016);
			    if(max_pair.first>0.5 && max_pair.first<0.6)polarimetricAcopAnglePVRefitWithTracksBSMVADMZTTUnrolled.at(1).Fill(2*TMath::Pi()+ScalcPVRefitWithTracksBS.AcopAngle("a1", "a1", TauminusPairConstraintWithTracksBS, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintWithTracksBS, HadRefitPions_plus, HadRefitPionsCharge_plus),FFData2016);
			    if(max_pair.first>0.6 && max_pair.first<0.7)polarimetricAcopAnglePVRefitWithTracksBSMVADMZTTUnrolled.at(1).Fill(2*2*TMath::Pi()+ScalcPVRefitWithTracksBS.AcopAngle("a1", "a1", TauminusPairConstraintWithTracksBS, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintWithTracksBS, HadRefitPions_plus, HadRefitPionsCharge_plus),FFData2016);
			    if(max_pair.first>0.7 && max_pair.first<1.)polarimetricAcopAnglePVRefitWithTracksBSMVADMZTTUnrolled.at(1).Fill(3*2*TMath::Pi()+ScalcPVRefitWithTracksBS.AcopAngle("a1", "a1", TauminusPairConstraintWithTracksBS, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintWithTracksBS, HadRefitPions_plus, HadRefitPionsCharge_plus),FFData2016);
			    
			    jetFakes_ff_tt_qcd_stat_njet0_mvadm10_upPVRefitWithTracksBSZTT.at(1).Fill(ScalcPVRefitWithTracksBS.AcopAngle("a1", "a1", TauminusPairConstraintWithTracksBS, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintWithTracksBS, HadRefitPions_plus, HadRefitPionsCharge_plus),max_pair.first,(std::shared_ptr<RooFunctor>(wFF2016->function("ff_tt_medium_mvadmbins_nosig_qcd_stat_njet0_mvadm10_up")->functor(wFF2016->argSet("pt,mvadm,njets,pt_2,os,met_var_qcd")))->eval(args.data()))*Wspin);
			    jetFakes_ff_tt_qcd_stat_njet0_mvadm10_downPVRefitWithTracksBSZTT.at(1).Fill(ScalcPVRefitWithTracksBS.AcopAngle("a1", "a1", TauminusPairConstraintWithTracksBS, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintWithTracksBS, HadRefitPions_plus, HadRefitPionsCharge_plus),max_pair.first,(std::shared_ptr<RooFunctor>(wFF2016->function("ff_tt_medium_mvadmbins_nosig_qcd_stat_njet0_mvadm10_down")->functor(wFF2016->argSet("pt,mvadm,njets,pt_2,os,met_var_qcd")))->eval(args.data()))*Wspin);
			    jetFakes_ff_tt_qcd_stat_njet1_mvadm10_upPVRefitWithTracksBSZTT.at(1).Fill(ScalcPVRefitWithTracksBS.AcopAngle("a1", "a1", TauminusPairConstraintWithTracksBS, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintWithTracksBS, HadRefitPions_plus, HadRefitPionsCharge_plus),max_pair.first,(std::shared_ptr<RooFunctor>(wFF2016->function("ff_tt_medium_mvadmbins_nosig_qcd_stat_njet1_mvadm10_up")->functor(wFF2016->argSet("pt,mvadm,njets,pt_2,os,met_var_qcd")))->eval(args.data()))*Wspin);
			    jetFakes_ff_tt_qcd_stat_njet1_mvadm10_downPVRefitWithTracksBSZTT.at(1).Fill(ScalcPVRefitWithTracksBS.AcopAngle("a1", "a1", TauminusPairConstraintWithTracksBS, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintWithTracksBS, HadRefitPions_plus, HadRefitPionsCharge_plus),max_pair.first,(std::shared_ptr<RooFunctor>(wFF2016->function("ff_tt_medium_mvadmbins_nosig_qcd_stat_njet1_mvadm10_down")->functor(wFF2016->argSet("pt,mvadm,njets,pt_2,os,met_var_qcd")))->eval(args.data()))*Wspin);
			    jetFakes_ff_tt_qcd_stat_njet2_mvadm10_upPVRefitWithTracksBSZTT.at(1).Fill(ScalcPVRefitWithTracksBS.AcopAngle("a1", "a1", TauminusPairConstraintWithTracksBS, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintWithTracksBS, HadRefitPions_plus, HadRefitPionsCharge_plus),max_pair.first,(std::shared_ptr<RooFunctor>(wFF2016->function("ff_tt_medium_mvadmbins_nosig_qcd_stat_njet2_mvadm10_up")->functor(wFF2016->argSet("pt,mvadm,njets,pt_2,os,met_var_qcd")))->eval(args.data()))*Wspin);
			    jetFakes_ff_tt_qcd_stat_njet2_mvadm10_downPVRefitWithTracksBSZTT.at(1).Fill(ScalcPVRefitWithTracksBS.AcopAngle("a1", "a1", TauminusPairConstraintWithTracksBS, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintWithTracksBS, HadRefitPions_plus, HadRefitPionsCharge_plus),max_pair.first,(std::shared_ptr<RooFunctor>(wFF2016->function("ff_tt_medium_mvadmbins_nosig_qcd_stat_njet2_mvadm10_down")->functor(wFF2016->argSet("pt,mvadm,njets,pt_2,os,met_var_qcd")))->eval(args.data()))*Wspin);
			    
			    jetFakes_ff_tt_qcd_met_closure_systUpPVRefitWithTracksBSZTT.at(1).Fill(ScalcPVRefitWithTracksBS.AcopAngle("a1", "a1", TauminusPairConstraintWithTracksBS, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintWithTracksBS, HadRefitPions_plus, HadRefitPionsCharge_plus),max_pair.first,(std::shared_ptr<RooFunctor>(wFF2016->function("ff_tt_medium_mvadmbins_nosig_qcd_met_up")->functor(wFF2016->argSet("pt,mvadm,njets,pt_2,os,met_var_qcd")))->eval(args.data()))*(std::shared_ptr<RooFunctor>(wFF2016->function("ff_tt_medium_mvadmbins_nosig_qcd_met_up")->functor(wFF2016->argSet("pt,mvadm,njets,pt_2,os,met_var_qcd")))->eval(args.data()))*Wspin);
			    jetFakes_ff_tt_qcd_met_closure_systDownPVRefitWithTracksBSZTT.at(1).Fill(ScalcPVRefitWithTracksBS.AcopAngle("a1", "a1", TauminusPairConstraintWithTracksBS, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintWithTracksBS, HadRefitPions_plus, HadRefitPionsCharge_plus),max_pair.first,FFData2016*Wspin);
			  }
			  if(TauminusPairConstraintWithTracksBSZNominal!=zeroLV && TauplusPairConstraintWithTracksBSZNominal!=zeroLV && ScalcPVRefitWithTracksBSZNominal.isOk("a1", "a1", TauminusPairConstraintWithTracksBSZNominal, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintWithTracksBSZNominal, HadRefitPions_plus, HadRefitPionsCharge_plus)==true){
			    //polarimetricAcopAnglePVRefitWithTracksBSZNominalMVADMZTT.at(1).Fill(ScalcPVRefitWithTracksBSZNominal.AcopAngle("a1", "a1", TauminusPairConstraintWithTracksBSZNominal, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintWithTracksBSZNominal, HadRefitPions_plus, HadRefitPionsCharge_plus),max_pair.first,FFData2016);
			    
			  }
			}
		    }
		}
	    }
	}
    }

    if(!Ntp->isData() && !Ntp->byMediumDeepTau2017v2p1VSjet_1(IndexSelectedTemp.at(0)) && Ntp->byVVVLooseDeepTau2017v2p1VSjet_1(IndexSelectedTemp.at(0))  && Ntp->byMediumDeepTau2017v2p1VSjet_2(IndexSelectedTemp.at(0))) {
      if( Ntp->GetGenMatch(Tau1)!=6) {
	double isOS=(Ntp->Daughters_charge(Tau1)/abs(Ntp->Daughters_charge(Tau1))) != (Ntp->Daughters_charge(Tau2)/abs(Ntp->Daughters_charge(Tau2)));
	auto args = std::vector<double>{Tau1P4.Pt(),(double)Ntp->MVADM2017(Tau1),(double)Ntp->njets(IndexSelectedTemp.at(0)),Tau2P4.Pt(),isOS,PUPPIMET*cos(TLorentzVector(Tau1P4.X(),Tau1P4.Y(),0.,0.).DeltaPhi(TLorentzVector(PUPPImetCorr_px,PUPPImetCorr_py,0.,0.)))/Tau1P4.Pt()};
	double FFMC2016 = std::shared_ptr<RooFunctor>(wFF2016->function("ff_tt_medium_mvadmbins_nosig")->functor(wFF2016->argSet("pt,mvadm,njets,pt_2,os,met_var_qcd")))->eval(args.data());
	// Tau1PTQCDMC.at(t).Fill(Tau1P4.Pt(),FFMC2016*w);
	// Tau1EQCDMC.at(t).Fill(Tau1P4.E(),FFMC2016*w);
	// Tau1MassQCDMC.at(t).Fill(Tau1P4.M(),FFMC2016*w);
	// Tau1PhiQCDMC.at(t).Fill(Tau1P4.Phi(),FFMC2016*w);
	// Tau1EtaQCDMC.at(t).Fill(Tau1P4.Eta(),FFMC2016*w);
	// Tau1dzQCDMC.at(t).Fill(Ntp->dz(Tau1),FFMC2016*w);
	// Tau1HPSDecayModeQCDMC.at(t).Fill(Ntp->decayMode(Tau1),FFMC2016*w);
	// Tau1MVADecayModeQCDMC.at(t).Fill(Ntp->MVADM2017(Tau1),FFMC2016*w);
	// //Tau1GenMatchQCDMC.at(t).Fill(Ntp->GetGenMatch(Tau1),FFMC2016*w);
	// Tau2PTQCDMC.at(t).Fill(Tau2P4.Pt(),FFMC2016*w);
	// Tau2EQCDMC.at(t).Fill(Tau2P4.E(),FFMC2016*w);
	// Tau2MassQCDMC.at(t).Fill(Tau2P4.M(),FFMC2016*w);
	// Tau2PhiQCDMC.at(t).Fill(Tau2P4.Phi(),FFMC2016*w);
	// Tau2EtaQCDMC.at(t).Fill(Tau2P4.Eta(),FFMC2016*w);
	// Tau2dzQCDMC.at(t).Fill(Ntp->dz(Tau2),FFMC2016*w);
	// Tau2HPSDecayModeQCDMC.at(t).Fill(Ntp->decayMode(Tau2),FFMC2016*w);
	// Tau2MVADecayModeQCDMC.at(t).Fill(Ntp->MVADM2017(Tau2),FFMC2016*w);
	// //Tau2GenMatchQCDMC.at(t).Fill(Ntp->GetGenMatch(Tau2),FFMC2016*w);
	// PUPPImetcorrQCDMC.at(t).Fill(sqrt(PUPPImetCorr_px*PUPPImetCorr_px+PUPPImetCorr_py*PUPPImetCorr_py),FFMC2016*w);
	// NbJetsQCDMC.at(t).Fill(Ntp->njets(IndexSelectedTemp.at(0)),FFMC2016*w);
	// TauTauVisMassQCDMC.at(t).Fill((Tau1P4+Tau2P4).M(),FFMC2016*w);
	// TauTauFullMassQCDMC.at(t).Fill((tau1P4+tau2P4).M(),FFMC2016*w);
	// TauTauVisPTQCDMC.at(t).Fill((Tau1P4+Tau2P4).Pt(),FFMC2016*w);
	// TauTauFullPTQCDMC.at(t).Fill((tau1P4+tau2P4).Pt(),FFMC2016*w);
	// if(Has2jets>=0)
	//   {
	//     MjjQCDMC.at(t).Fill(Ntp->mjj(Has2jets),FFMC2016*w);
	//     dijetptQCDMC.at(t).Fill(Ntp->dijetpt(Has2jets),FFMC2016*w);
	//     dijetphiQCDMC.at(t).Fill(Ntp->dijetphi(Has2jets),FFMC2016*w);
	//     jdetaQCDMC.at(t).Fill(Ntp->jdeta(Has2jets),FFMC2016*w);
	//     jdphiQCDMC.at(t).Fill(Ntp->jdphi(Has2jets),FFMC2016*w);
	//     jpt_2QCDMC.at(t).Fill(Ntp->jpt_2(Has2jets),FFMC2016*w);
	//     jeta_2QCDMC.at(t).Fill(Ntp->jeta_2(Has2jets),FFMC2016*w);
	//     jphi_2QCDMC.at(t).Fill(Ntp->jphi_2(Has2jets),FFMC2016*w);
	  
	//   }
	// if(Has1jet>=0)
	//   {
	//     jpt_1QCDMC.at(t).Fill(Ntp->jpt_1(Has1jet),FFMC2016*w);
	//     jeta_1QCDMC.at(t).Fill(Ntp->jeta_1(Has1jet),FFMC2016*w);
	//     jphi_1QCDMC.at(t).Fill(Ntp->jphi_1(Has1jet),FFMC2016*w);
	//   }
	// if(max_pair.second==0)HiggsBDTScoreQCDMC.at(t).Fill(max_pair.first,FFMC2016*w);
	// if(max_pair.second==1)JetFakesBDTScoreQCDMC.at(t).Fill(max_pair.first,FFMC2016*w);
	// if(max_pair.second==2)ZTTBDTScoreQCDMC.at(t).Fill(max_pair.first,FFMC2016*w);


	if (std::isnan(Wspin)!=true)
	  {
	  
	    if(a1a1MVA)
	      {	      
		

		//if(TauminusPairConstraintWithTracksBS!=zeroLV && TauplusPairConstraintWithTracksBS!=zeroLV && ScalcPVRefitWithTracksBS.isOk("a1", "a1", TauminusPairConstraintWithTracksBS, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintWithTracksBS, HadRefitPions_plus, HadRefitPionsCharge_plus)==true) polarimetricAcopAnglePVRefitWithTracksBSMVADMQCDMC.at(t).Fill(ScalcPVRefitWithTracksBS.AcopAngle("a1", "a1", TauminusPairConstraintWithTracksBS, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintWithTracksBS, HadRefitPions_plus, HadRefitPionsCharge_plus),FFMC2016*Wspin);
  

		if ((HadPions_minus!=HadPions_plus) && (HadPions_minus!=VectZeroLV) && (HadPions_plus!=VectZeroLV) && (HadRefitPions_minus!=HadRefitPions_plus) && (HadRefitPions_minus!=VectZeroLV) && (HadRefitPions_plus!=VectZeroLV))
		  {
		    if(TauminusPairConstraint!=TauplusPairConstraint && TauminusPairConstraint!=zeroLV && TauplusPairConstraint!=zeroLV )
		      {
			// Tau1PTa1a1QCDMC.at(t).Fill(Tau1P4.Pt(),FFMC2016*w);
			// Tau1Ea1a1QCDMC.at(t).Fill(Tau1P4.E(),FFMC2016*w);
			// Tau1Massa1a1QCDMC.at(t).Fill(Tau1P4.M(),FFMC2016*w);
			// Tau1Phia1a1QCDMC.at(t).Fill(Tau1P4.Phi(),FFMC2016*w);
			// Tau1Etaa1a1QCDMC.at(t).Fill(Tau1P4.Eta(),FFMC2016*w);
			// Tau1dza1a1QCDMC.at(t).Fill(Ntp->dz(Tau1),FFMC2016*w);
			// Tau2PTa1a1QCDMC.at(t).Fill(Tau2P4.Pt(),FFMC2016*w);
			// Tau2Ea1a1QCDMC.at(t).Fill(Tau2P4.E(),FFMC2016*w);
			// Tau2Massa1a1QCDMC.at(t).Fill(Tau2P4.M(),FFMC2016*w);
			// Tau2Phia1a1QCDMC.at(t).Fill(Tau2P4.Phi(),FFMC2016*w);
			// Tau2Etaa1a1QCDMC.at(t).Fill(Tau2P4.Eta(),FFMC2016*w);
			// Tau2dza1a1QCDMC.at(t).Fill(Ntp->dz(Tau2),FFMC2016*w);
			// PUPPImetcorra1a1QCDMC.at(t).Fill(PUPPIMET,FFMC2016*w);
			// PUPPImetcorrphia1a1QCDMC.at(t).Fill(TMath::ATan2(PUPPImetCorr_py,PUPPImetCorr_px),FFMC2016*w);
			// NbJetsa1a1QCDMC.at(t).Fill(Ntp->njets(IndexSelectedTemp.at(0)),FFMC2016*w);
			// TauTauVisMassa1a1QCDMC.at(t).Fill((Tau1P4+Tau2P4).M(),FFMC2016*w);
			// TauTauFullMassa1a1QCDMC.at(t).Fill((tau1P4+tau2P4).M(),FFMC2016*w);
			// TauTauVisPTa1a1QCDMC.at(t).Fill((Tau1P4+Tau2P4).Pt(),FFMC2016*w);
			// TauTauFullPTa1a1QCDMC.at(t).Fill((tau1P4+tau2P4).Pt(),FFMC2016*w);
			// if(Has2jets>=0)
			//   {
			//     Mjja1a1QCDMC.at(t).Fill(Ntp->mjj(Has2jets),FFMC2016*w);
			//     dijetpta1a1QCDMC.at(t).Fill(Ntp->dijetpt(Has2jets),FFMC2016*w);
			//     dijetphia1a1QCDMC.at(t).Fill(Ntp->dijetphi(Has2jets),FFMC2016*w);
			//     jdetaa1a1QCDMC.at(t).Fill(Ntp->jdeta(Has2jets),FFMC2016*w);
			//     jdphia1a1QCDMC.at(t).Fill(Ntp->jdphi(Has2jets),FFMC2016*w);
			//     jpt_2a1a1QCDMC.at(t).Fill(Ntp->jpt_2(Has2jets),FFMC2016*w);
			//     jeta_2a1a1QCDMC.at(t).Fill(Ntp->jeta_2(Has2jets),FFMC2016*w);
			//     jphi_2a1a1QCDMC.at(t).Fill(Ntp->jphi_2(Has2jets),FFMC2016*w);
			//   }
			// if(Has1jet>=0)
			//   {
			//     jpt_1a1a1QCDMC.at(t).Fill(Ntp->jpt_1(Has1jet),FFMC2016*w);
			//     jeta_1a1a1QCDMC.at(t).Fill(Ntp->jeta_1(Has1jet),FFMC2016*w);
			//     jphi_1a1a1QCDMC.at(t).Fill(Ntp->jphi_1(Has1jet),FFMC2016*w);
			//   }
			if(max_pair.second==0)
			  {
			    HiggsBDTScorea1a1QCDMC.at(t).Fill(max_pair.first,FFMC2016*w);
			    
			    if(TauminusPairConstraintWithTracksBS!=zeroLV && TauplusPairConstraintWithTracksBS!=zeroLV && ScalcPVRefitWithTracksBS.isOk("a1", "a1", TauminusPairConstraintWithTracksBS, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintWithTracksBS, HadRefitPions_plus, HadRefitPionsCharge_plus)==true){
			      polarimetricAcopAnglePVRefitWithTracksBSMVADMHiggsQCDMC.at(t).Fill(ScalcPVRefitWithTracksBS.AcopAngle("a1", "a1", TauminusPairConstraintWithTracksBS, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintWithTracksBS, HadRefitPions_plus, HadRefitPionsCharge_plus),max_pair.first,FFMC2016*Wspin);
			    
			      
			      if(max_pair.first>0 && max_pair.first<0.5)polarimetricAcopAnglePVRefitWithTracksBSMVADMHiggsUnrolled.at(t).Fill(ScalcPVRefitWithTracksBS.AcopAngle("a1", "a1", TauminusPairConstraintWithTracksBS, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintWithTracksBS, HadRefitPions_plus, HadRefitPionsCharge_plus),FFMC2016*Wspin);
			      if(max_pair.first>0.5 && max_pair.first<0.6)polarimetricAcopAnglePVRefitWithTracksBSMVADMHiggsUnrolled.at(t).Fill(2*TMath::Pi()+ScalcPVRefitWithTracksBS.AcopAngle("a1", "a1", TauminusPairConstraintWithTracksBS, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintWithTracksBS, HadRefitPions_plus, HadRefitPionsCharge_plus),FFMC2016*Wspin);
			      if(max_pair.first>0.6 && max_pair.first<0.7)polarimetricAcopAnglePVRefitWithTracksBSMVADMHiggsUnrolled.at(t).Fill(2*2*TMath::Pi()+ScalcPVRefitWithTracksBS.AcopAngle("a1", "a1", TauminusPairConstraintWithTracksBS, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintWithTracksBS, HadRefitPions_plus, HadRefitPionsCharge_plus),FFMC2016*Wspin);
			      if(max_pair.first>0.7 && max_pair.first<1.)polarimetricAcopAnglePVRefitWithTracksBSMVADMHiggsUnrolled.at(t).Fill(3*2*TMath::Pi()+ScalcPVRefitWithTracksBS.AcopAngle("a1", "a1", TauminusPairConstraintWithTracksBS, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintWithTracksBS, HadRefitPions_plus, HadRefitPionsCharge_plus),FFMC2016*Wspin);
			    }

			  }
			if(max_pair.second==1)
			  {
			    JetFakesBDTScorea1a1QCDMC.at(t).Fill(max_pair.first,FFMC2016*w);

			    if(TauminusPairConstraintWithTracksBS!=zeroLV && TauplusPairConstraintWithTracksBS!=zeroLV && ScalcPVRefitWithTracksBS.isOk("a1", "a1", TauminusPairConstraintWithTracksBS, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintWithTracksBS, HadRefitPions_plus, HadRefitPionsCharge_plus)==true){ polarimetricAcopAnglePVRefitWithTracksBSMVADMJetFakesQCDMC.at(t).Fill(ScalcPVRefitWithTracksBS.AcopAngle("a1", "a1", TauminusPairConstraintWithTracksBS, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintWithTracksBS, HadRefitPions_plus, HadRefitPionsCharge_plus),max_pair.first,FFMC2016*Wspin);

			      if(max_pair.first>0 && max_pair.first<0.5)polarimetricAcopAnglePVRefitWithTracksBSMVADMJetFakesUnrolled.at(t).Fill(ScalcPVRefitWithTracksBS.AcopAngle("a1", "a1", TauminusPairConstraintWithTracksBS, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintWithTracksBS, HadRefitPions_plus, HadRefitPionsCharge_plus),FFMC2016*w);
			      if(max_pair.first>0.5 && max_pair.first<0.6)polarimetricAcopAnglePVRefitWithTracksBSMVADMJetFakesUnrolled.at(t).Fill(2*TMath::Pi()+ScalcPVRefitWithTracksBS.AcopAngle("a1", "a1", TauminusPairConstraintWithTracksBS, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintWithTracksBS, HadRefitPions_plus, HadRefitPionsCharge_plus),FFMC2016*w);
			      if(max_pair.first>0.6 && max_pair.first<0.7)polarimetricAcopAnglePVRefitWithTracksBSMVADMJetFakesUnrolled.at(t).Fill(2*2*TMath::Pi()+ScalcPVRefitWithTracksBS.AcopAngle("a1", "a1", TauminusPairConstraintWithTracksBS, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintWithTracksBS, HadRefitPions_plus, HadRefitPionsCharge_plus),FFMC2016*w);
			      if(max_pair.first>0.7 && max_pair.first<1.)polarimetricAcopAnglePVRefitWithTracksBSMVADMJetFakesUnrolled.at(t).Fill(3*2*TMath::Pi()+ScalcPVRefitWithTracksBS.AcopAngle("a1", "a1", TauminusPairConstraintWithTracksBS, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintWithTracksBS, HadRefitPions_plus, HadRefitPionsCharge_plus),FFMC2016*w);
			      
			    }
			    
			  }
			if(max_pair.second==2)
			  {
			    ZTTBDTScorea1a1QCDMC.at(t).Fill(max_pair.first,FFMC2016*w);

			    if(TauminusPairConstraintWithTracksBS!=zeroLV && TauplusPairConstraintWithTracksBS!=zeroLV && ScalcPVRefitWithTracksBS.isOk("a1", "a1", TauminusPairConstraintWithTracksBS, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintWithTracksBS, HadRefitPions_plus, HadRefitPionsCharge_plus)==true){ polarimetricAcopAnglePVRefitWithTracksBSMVADMZTTQCDMC.at(t).Fill(ScalcPVRefitWithTracksBS.AcopAngle("a1", "a1", TauminusPairConstraintWithTracksBS, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintWithTracksBS, HadRefitPions_plus, HadRefitPionsCharge_plus),max_pair.first,FFMC2016*Wspin);


			      if(max_pair.first>0 && max_pair.first<0.5)polarimetricAcopAnglePVRefitWithTracksBSMVADMZTTUnrolled.at(t).Fill(ScalcPVRefitWithTracksBS.AcopAngle("a1", "a1", TauminusPairConstraintWithTracksBS, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintWithTracksBS, HadRefitPions_plus, HadRefitPionsCharge_plus),FFMC2016*w);
			      if(max_pair.first>0.5 && max_pair.first<0.6)polarimetricAcopAnglePVRefitWithTracksBSMVADMZTTUnrolled.at(t).Fill(2*TMath::Pi()+ScalcPVRefitWithTracksBS.AcopAngle("a1", "a1", TauminusPairConstraintWithTracksBS, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintWithTracksBS, HadRefitPions_plus, HadRefitPionsCharge_plus),FFMC2016*w);
			      if(max_pair.first>0.6 && max_pair.first<0.7)polarimetricAcopAnglePVRefitWithTracksBSMVADMZTTUnrolled.at(t).Fill(2*2*TMath::Pi()+ScalcPVRefitWithTracksBS.AcopAngle("a1", "a1", TauminusPairConstraintWithTracksBS, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintWithTracksBS, HadRefitPions_plus, HadRefitPionsCharge_plus),FFMC2016*w);
			      if(max_pair.first>0.7 && max_pair.first<1.)polarimetricAcopAnglePVRefitWithTracksBSMVADMZTTUnrolled.at(t).Fill(3*2*TMath::Pi()+ScalcPVRefitWithTracksBS.AcopAngle("a1", "a1", TauminusPairConstraintWithTracksBS, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintWithTracksBS, HadRefitPions_plus, HadRefitPionsCharge_plus),FFMC2016*w);
			    }
			  }
		      }
		  }
	      
	      }
	  }
	
      }
    }
    //if(!Ntp->isData() && pass.at(TausIsolation)){
      //if(Ntp->GetGenMatch(Tau1)!=6 && Ntp->GetGenMatch(Tau2)==6){
	//W_res.at(t).Fill(1,w);
    //}
    // }
  }
  // std::vector<unsigned int> exclude_cuts_ForTauIso;
  // exclude_cuts_ForTauIso.push_back(TausIsolation);
  // //  exclude_cuts_ForTauIso.push_back(Tau2Isolation);
  // if(passAllBut(exclude_cuts_ForTauIso)) {
  // if(Ntp->isIsolatedTau(Tau1,"VVVLoose"))Tau1isolation.at(t).Fill(0.);
  // if(Ntp->isIsolatedTau(Tau1,"VVLoose"))Tau1isolation.at(t).Fill(1.);
  // if(Ntp->isIsolatedTau(Tau1,"VLoose"))Tau1isolation.at(t).Fill(2.);
  // if(Ntp->isIsolatedTau(Tau1,"Loose"))Tau1isolation.at(t).Fill(3.);
  // if(Ntp->isIsolatedTau(Tau1,"Medium"))Tau1isolation.at(t).Fill(4.);
  // if(Ntp->isIsolatedTau(Tau1,"Tight"))Tau1isolation.at(t).Fill(5.);
  // if(Ntp->isIsolatedTau(Tau1,"VTight"))Tau1isolation.at(t).Fill(6.);
  // if(Ntp->isIsolatedTau(Tau1,"VVTight"))Tau1isolation.at(t).Fill(7.);
  // if(Ntp->isIsolatedTau(Tau2,"VVVLoose"))Tau2isolation.at(t).Fill(0.);
  // if(Ntp->isIsolatedTau(Tau2,"VVLoose"))Tau2isolation.at(t).Fill(1.);
  // if(Ntp->isIsolatedTau(Tau2,"VLoose"))Tau2isolation.at(t).Fill(2.);
  // if(Ntp->isIsolatedTau(Tau2,"Loose"))Tau2isolation.at(t).Fill(3.);
  // if(Ntp->isIsolatedTau(Tau2,"Medium"))Tau2isolation.at(t).Fill(4.);
  // if(Ntp->isIsolatedTau(Tau2,"Tight"))Tau2isolation.at(t).Fill(5.);
  // if(Ntp->isIsolatedTau(Tau2,"VTight"))Tau2isolation.at(t).Fill(6.);
  // if(Ntp->isIsolatedTau(Tau2,"VVTight"))Tau2isolation.at(t).Fill(7.);
  // }
  bool status=AnalysisCuts(t,w,wobs);  // boolean that say whether your event passed critera defined in pass vector. The whole vector must be true for status = true
  ///////////////////////////////////////////////////////////
  // Analyse events which passed selection
  if(status) {

    // if(max_pair.second==0)HiggsBDTScore.at(t).Fill(max_pair.first,w);
    // if(max_pair.second==1)JetFakesBDTScore.at(t).Fill(max_pair.first,w);
    // if(max_pair.second==2)ZTTBDTScore.at(t).Fill(max_pair.first,w);

    
    double pvx(0);
    pvx =  Ntp->npv();
    // if(id == DataMCType::Data) pvx =  Ntp->npv();
    if(id !=DataMCType::Data && id !=DataMCType::QCD)	  pvx = Ntp->PUNumInteractions();
    //NPrimeVtx.at(t).Fill(pvx,w);
    //NPU.at(t).Fill(Ntp->npu(),w);
    //RHO.at(t).Fill(Ntp->rho(),w);
    

    std::vector<int> thirdLepton;


    //    TLorentzVector taunew(tau1P4.Px(), );

    //svfTau1E.at(t).Fill(tau1P4.E(),w);
    //svfTau2E.at(t).Fill(tau2P4.E(),w);

    // Tau1PT.at(t).Fill(Tau1P4.Pt(),w);
    // Tau1E.at(t).Fill(Tau1P4.E(),w);
    // Tau1Mass.at(t).Fill(Tau1P4.M(),w);
    // Tau1Phi.at(t).Fill(Tau1P4.Phi(),w);
    // Tau1Eta.at(t).Fill(Tau1P4.Eta(),w);
    // Tau1dz.at(t).Fill(Ntp->dz(Tau1),w);
    // Tau1HPSDecayMode.at(t).Fill(Ntp->decayMode(Tau1),w);
    // Tau1MVADecayMode.at(t).Fill(Ntp->MVADM2017(Tau1),w);
    // if(!Ntp->isData())Tau1GenMatch.at(t).Fill(Ntp->GetGenMatch(Tau1),w);
    // //    cout<<"genmatch:"<<Ntp->GetGenMatch(Tau1)<<endl;
    // Tau2PT.at(t).Fill(Tau2P4.Pt(),w);
    // Tau2E.at(t).Fill(Tau2P4.E(),w);
    // Tau2Mass.at(t).Fill(Tau2P4.M(),w);
    // Tau2Phi.at(t).Fill(Tau2P4.Phi(),w);
    // Tau2Eta.at(t).Fill(Tau2P4.Eta(),w);
    // Tau2dz.at(t).Fill(Ntp->dz(Tau2),w);
    // Tau2HPSDecayMode.at(t).Fill(Ntp->decayMode(Tau2),w);
    // Tau2MVADecayMode.at(t).Fill(Ntp->MVADM2017(Tau2),w);
    //    if(!Ntp->isData())Tau2GenMatch.at(t).Fill(Ntp->GetGenMatch(Tau2),w);
    /*
      againstElectronVLooseMVA6_Tau1.at(t).Fill(Ntp->CHECK_BIT(Ntp->tauID(Tau1),Ntp->Bit_againstElectronVLooseMVA6),w);
      againstElectronLooseMVA6_Tau1.at(t).Fill(Ntp->CHECK_BIT(Ntp->tauID(Tau1),Ntp->Bit_againstElectronLooseMVA6),w);
      againstElectronMediumMVA6_Tau1.at(t).Fill(Ntp->CHECK_BIT(Ntp->tauID(Tau1),Ntp->Bit_againstElectronMediumMVA6),w);
      againstElectronTightMVA6_Tau1.at(t).Fill(Ntp->CHECK_BIT(Ntp->tauID(Tau1),Ntp->Bit_againstElectronTightMVA6),w);
      againstElectronVTightMVA6_Tau1.at(t).Fill(Ntp->CHECK_BIT(Ntp->tauID(Tau1),Ntp->Bit_againstElectronVTightMVA6),w);
      againstMuonLoose3_Tau1.at(t).Fill(Ntp->CHECK_BIT(Ntp->tauID(Tau1),Ntp->Bit_againstMuonLoose3),w);
      againstMuonTight3_Tau1.at(t).Fill(Ntp->CHECK_BIT(Ntp->tauID(Tau1),Ntp->Bit_againstMuonTight3),w);
      byCombinedIsolationDeltaBetaCorrRaw3Hits_Tau1.at(t).Fill(Ntp->Daughters_byCombinedIsolationDeltaBetaCorrRaw3Hits(Tau1),w);

      againstElectronVLooseMVA6_Tau2.at(t).Fill(Ntp->CHECK_BIT(Ntp->tauID(Tau2),Ntp->Bit_againstElectronVLooseMVA6),w);
      againstElectronLooseMVA6_Tau2.at(t).Fill(Ntp->CHECK_BIT(Ntp->tauID(Tau2),Ntp->Bit_againstElectronLooseMVA6),w);
      againstElectronMediumMVA6_Tau2.at(t).Fill(Ntp->CHECK_BIT(Ntp->tauID(Tau2),Ntp->Bit_againstElectronMediumMVA6),w);
      againstElectronTightMVA6_Tau2.at(t).Fill(Ntp->CHECK_BIT(Ntp->tauID(Tau2),Ntp->Bit_againstElectronTightMVA6),w);
      againstElectronVTightMVA6_Tau2.at(t).Fill(Ntp->CHECK_BIT(Ntp->tauID(Tau2),Ntp->Bit_againstElectronVTightMVA6),w);
      againstMuonLoose3_Tau2.at(t).Fill(Ntp->CHECK_BIT(Ntp->tauID(Tau2),Ntp->Bit_againstMuonLoose3),w);
      againstMuonTight3_Tau2.at(t).Fill(Ntp->CHECK_BIT(Ntp->tauID(Tau2),Ntp->Bit_againstMuonTight3),w);
      byCombinedIsolationDeltaBetaCorrRaw3Hits_Tau2.at(t).Fill(Ntp->Daughters_byCombinedIsolationDeltaBetaCorrRaw3Hits(Tau2),w);
    */
    for(int iDaughter=0;   iDaughter  <  Ntp->NDaughters() ;iDaughter++ ) {
      if((iDaughter!=Tau1)&&(iDaughter!=Tau2)){
	if(Ntp->ElectronVeto(iDaughter) || Ntp->MuonVeto(iDaughter))thirdLepton.push_back(iDaughter);
      }
    }
    //if(thirdLepton.size()>0)ExtraLeptonVeto.at(t).Fill(1.,w);
    //else ExtraLeptonVeto.at(t).Fill(0.,w);

    // TauTauVisMass.at(t).Fill((Tau1P4+Tau2P4).M(),w);
    // TauTauFullMass.at(t).Fill((tau1P4+tau2P4).M(),w);
    // TauTauFullPT.at(t).Fill((tau1P4+tau2P4).Pt(),w);
    // dRTauTau.at(t).Fill(Tau1P4.DeltaR(Tau2P4),w);
    
    // MET.at(t).Fill(Ntp->MET(),w);
    // METphi.at(t).Fill(Ntp->METphi(),w);
    // PUPPImet.at(t).Fill(Ntp->PUPPImet(),w);
    // PUPPImetphi.at(t).Fill(Ntp->PUPPImetphi(),w);
    
    // PUPPImetcorr.at(t).Fill(sqrt(PUPPImetCorr_px*PUPPImetCorr_px+PUPPImetCorr_py*PUPPImetCorr_py),w);
    // PUPPImetcorrphi.at(t).Fill(TMath::ATan2(PUPPImetCorr_py,PUPPImetCorr_px),w);
    
    // TransverseMass.at(t).Fill(Ntp->transverseMass(Tau1P4.Pt(), Tau1P4.Phi(), Tau2P4.Pt(), Tau2P4.Phi()),w);
    // NbJets.at(t).Fill(Ntp->njets(IndexSelectedTemp.at(0)),w);

    // if(Has2jets>=0)
    //   {
    // 	Mjj.at(t).Fill(Ntp->mjj(Has2jets),w);
    // 	dijetpt.at(t).Fill(Ntp->dijetpt(Has2jets),w);
    // 	dijetphi.at(t).Fill(Ntp->dijetphi(Has2jets),w);
    // 	jdeta.at(t).Fill(Ntp->jdeta(Has2jets),w);
    // 	jdphi.at(t).Fill(Ntp->jdphi(Has2jets),w);
    // 	jpt_2.at(t).Fill(Ntp->jpt_2(Has2jets),w);
    // 	jeta_2.at(t).Fill(Ntp->jeta_2(Has2jets),w);
    // 	jphi_2.at(t).Fill(Ntp->jphi_2(Has2jets),w);
	  
    //   }

    // if(Has1jet>=0)
    //   {
    // 	jpt_1.at(t).Fill(Ntp->jpt_1(Has1jet),w);
    // 	jeta_1.at(t).Fill(Ntp->jeta_1(Has1jet),w);
    // 	jphi_1.at(t).Fill(Ntp->jphi_1(Has1jet),w);
    //   }


    if (std::isnan(Wspin)!=true)
      {
	if(a1a1MVA)
	  {
	    if ((HadPions_minus!=HadPions_plus) && (HadPions_minus!=VectZeroLV) && (HadPions_plus!=VectZeroLV) && (HadRefitPions_minus!=HadRefitPions_plus) && (HadRefitPions_minus!=VectZeroLV) && (HadRefitPions_plus!=VectZeroLV))
	      {
		if(TauminusPairConstraint!=TauplusPairConstraint && TauminusPairConstraint!=zeroLV && TauplusPairConstraint!=zeroLV )
		  {
		    if(max_pair.second==0)
		      {
			HiggsBDTScorea1a1.at(t).Fill(max_pair.first,w);

			if(TauminusPairConstraintWithTracksBS!=zeroLV && TauplusPairConstraintWithTracksBS!=zeroLV && ScalcPVRefitWithTracksBS.isOk("a1", "a1", TauminusPairConstraintWithTracksBS, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintWithTracksBS, HadRefitPions_plus, HadRefitPionsCharge_plus)==true){

			  polarimetricAcopAnglePVRefitWithTracksBSMVADMHiggs.at(t).Fill(ScalcPVRefitWithTracksBS.AcopAngle("a1", "a1", TauminusPairConstraintWithTracksBS, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintWithTracksBS, HadRefitPions_plus, HadRefitPionsCharge_plus),max_pair.first,Wspin);
			  
			  
			  if(max_pair.first>0 && max_pair.first<0.5)polarimetricAcopAnglePVRefitWithTracksBSMVADMHiggsUnrolled.at(t).Fill(ScalcPVRefitWithTracksBS.AcopAngle("a1", "a1", TauminusPairConstraintWithTracksBS, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintWithTracksBS, HadRefitPions_plus, HadRefitPionsCharge_plus),Wspin);
			  if(max_pair.first>0.5 && max_pair.first<0.6)polarimetricAcopAnglePVRefitWithTracksBSMVADMHiggsUnrolled.at(t).Fill(2*TMath::Pi()+ScalcPVRefitWithTracksBS.AcopAngle("a1", "a1", TauminusPairConstraintWithTracksBS, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintWithTracksBS, HadRefitPions_plus, HadRefitPionsCharge_plus),Wspin);
			  if(max_pair.first>0.6 && max_pair.first<0.7)polarimetricAcopAnglePVRefitWithTracksBSMVADMHiggsUnrolled.at(t).Fill(2*2*TMath::Pi()+ScalcPVRefitWithTracksBS.AcopAngle("a1", "a1", TauminusPairConstraintWithTracksBS, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintWithTracksBS, HadRefitPions_plus, HadRefitPionsCharge_plus),Wspin);
			  if(max_pair.first>0.7 && max_pair.first<1.)polarimetricAcopAnglePVRefitWithTracksBSMVADMHiggsUnrolled.at(t).Fill(3*2*TMath::Pi()+ScalcPVRefitWithTracksBS.AcopAngle("a1", "a1", TauminusPairConstraintWithTracksBS, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintWithTracksBS, HadRefitPions_plus, HadRefitPionsCharge_plus),Wspin);

			  CMS_eff_t_pThigh_MVADM10_13TeVUpPVRefitWithTracksBSHiggs.at(t).Fill(ScalcPVRefitWithTracksBS.AcopAngle("a1", "a1", TauminusPairConstraintWithTracksBS, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintWithTracksBS, HadRefitPions_plus, HadRefitPionsCharge_plus),max_pair.first,(Wspin/(wIDSF1*wIDSF2))*Ntp->IDSF(Tau1,"tau","Up")*Ntp->IDSF(Tau2,"tau","Up"));
			  CMS_eff_t_pThigh_MVADM10_13TeVDownPVRefitWithTracksBSHiggs.at(t).Fill(ScalcPVRefitWithTracksBS.AcopAngle("a1", "a1", TauminusPairConstraintWithTracksBS, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintWithTracksBS, HadRefitPions_plus, HadRefitPionsCharge_plus),max_pair.first,(Wspin/(wIDSF1*wIDSF2))*Ntp->IDSF(Tau1,"tau","Down")*Ntp->IDSF(Tau2,"tau","Down"));
			  CMS_eff_t_trg_MVADM10_13TeVUpPVRefitWithTracksBSHiggs.at(t).Fill(ScalcPVRefitWithTracksBS.AcopAngle("a1", "a1", TauminusPairConstraintWithTracksBS, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintWithTracksBS, HadRefitPions_plus, HadRefitPionsCharge_plus),max_pair.first,(Wspin/(wTrgSF1*wTrgSF2))*Ntp->TriggerSF(Tau1,"Up")*Ntp->TriggerSF(Tau2,"Up"));
			  CMS_eff_t_trg_MVADM10_13TeVDownPVRefitWithTracksBSHiggs.at(t).Fill(ScalcPVRefitWithTracksBS.AcopAngle("a1", "a1", TauminusPairConstraintWithTracksBS, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintWithTracksBS, HadRefitPions_plus, HadRefitPionsCharge_plus),max_pair.first,(Wspin/(wTrgSF1*wTrgSF2))*Ntp->TriggerSF(Tau1,"Down")*Ntp->TriggerSF(Tau2,"Down"));
			  CMS_htt_dyShape_13TeVUpPVRefitWithTracksBSHiggs.at(t).Fill(ScalcPVRefitWithTracksBS.AcopAngle("a1", "a1", TauminusPairConstraintWithTracksBS, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintWithTracksBS, HadRefitPions_plus, HadRefitPionsCharge_plus),max_pair.first,2.*zptw*(Wspin/zptw));
			  CMS_htt_dyShape_13TeVDownPVRefitWithTracksBSHiggs.at(t).Fill(ScalcPVRefitWithTracksBS.AcopAngle("a1", "a1", TauminusPairConstraintWithTracksBS, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintWithTracksBS, HadRefitPions_plus, HadRefitPionsCharge_plus),max_pair.first,Wspin/zptw);
			  
			  PrefiringUp_PVRefitWithTracksBSHiggs.at(t).Fill(ScalcPVRefitWithTracksBS.AcopAngle("a1", "a1", TauminusPairConstraintWithTracksBS, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintWithTracksBS, HadRefitPions_plus, HadRefitPionsCharge_plus),max_pair.first,Ntp->prefiringweightup()*(Wspin/Ntp->prefiringweight()));
			  PrefiringDown_PVRefitWithTracksBSHiggs.at(t).Fill(ScalcPVRefitWithTracksBS.AcopAngle("a1", "a1", TauminusPairConstraintWithTracksBS, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintWithTracksBS, HadRefitPions_plus, HadRefitPionsCharge_plus),max_pair.first,Ntp->prefiringweightdown()*(Wspin/Ntp->prefiringweight()));
			}
			
		      }
		    if(max_pair.second==1)
		      {
			JetFakesBDTScorea1a1.at(t).Fill(max_pair.first,w);
			
			
			if(TauminusPairConstraintWithTracksBS!=zeroLV && TauplusPairConstraintWithTracksBS!=zeroLV && ScalcPVRefitWithTracksBS.isOk("a1", "a1", TauminusPairConstraintWithTracksBS, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintWithTracksBS, HadRefitPions_plus, HadRefitPionsCharge_plus)==true){

			  if(max_pair.first>0 && max_pair.first<0.5)polarimetricAcopAnglePVRefitWithTracksBSMVADMJetFakesUnrolled.at(t).Fill(ScalcPVRefitWithTracksBS.AcopAngle("a1", "a1", TauminusPairConstraintWithTracksBS, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintWithTracksBS, HadRefitPions_plus, HadRefitPionsCharge_plus),Wspin);
			  if(max_pair.first>0.5 && max_pair.first<0.6)polarimetricAcopAnglePVRefitWithTracksBSMVADMJetFakesUnrolled.at(t).Fill(2*TMath::Pi()+ScalcPVRefitWithTracksBS.AcopAngle("a1", "a1", TauminusPairConstraintWithTracksBS, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintWithTracksBS, HadRefitPions_plus, HadRefitPionsCharge_plus),Wspin);
			  if(max_pair.first>0.6 && max_pair.first<0.7)polarimetricAcopAnglePVRefitWithTracksBSMVADMJetFakesUnrolled.at(t).Fill(2*2*TMath::Pi()+ScalcPVRefitWithTracksBS.AcopAngle("a1", "a1", TauminusPairConstraintWithTracksBS, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintWithTracksBS, HadRefitPions_plus, HadRefitPionsCharge_plus),Wspin);
			  if(max_pair.first>0.7 && max_pair.first<1.)polarimetricAcopAnglePVRefitWithTracksBSMVADMJetFakesUnrolled.at(t).Fill(3*2*TMath::Pi()+ScalcPVRefitWithTracksBS.AcopAngle("a1", "a1", TauminusPairConstraintWithTracksBS, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintWithTracksBS, HadRefitPions_plus, HadRefitPionsCharge_plus),Wspin);
			  
			  
			  polarimetricAcopAnglePVRefitWithTracksBSMVADMJetFakes.at(t).Fill(ScalcPVRefitWithTracksBS.AcopAngle("a1", "a1", TauminusPairConstraintWithTracksBS, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintWithTracksBS, HadRefitPions_plus, HadRefitPionsCharge_plus),max_pair.first,Wspin);
			  CMS_eff_t_pThigh_MVADM10_13TeVUpPVRefitWithTracksBSJetFakes.at(t).Fill(ScalcPVRefitWithTracksBS.AcopAngle("a1", "a1", TauminusPairConstraintWithTracksBS, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintWithTracksBS, HadRefitPions_plus, HadRefitPionsCharge_plus),max_pair.first,(Wspin/(wIDSF1*wIDSF2))*Ntp->IDSF(Tau1,"tau","Up")*Ntp->IDSF(Tau2,"tau","Up"));
			  CMS_eff_t_pThigh_MVADM10_13TeVDownPVRefitWithTracksBSJetFakes.at(t).Fill(ScalcPVRefitWithTracksBS.AcopAngle("a1", "a1", TauminusPairConstraintWithTracksBS, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintWithTracksBS, HadRefitPions_plus, HadRefitPionsCharge_plus),max_pair.first,(Wspin/(wIDSF1*wIDSF2))*Ntp->IDSF(Tau1,"tau","Down")*Ntp->IDSF(Tau2,"tau","Down"));
			  CMS_eff_t_trg_MVADM10_13TeVUpPVRefitWithTracksBSJetFakes.at(t).Fill(ScalcPVRefitWithTracksBS.AcopAngle("a1", "a1", TauminusPairConstraintWithTracksBS, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintWithTracksBS, HadRefitPions_plus, HadRefitPionsCharge_plus),max_pair.first,(Wspin/(wTrgSF1*wTrgSF2))*Ntp->TriggerSF(Tau1,"Up")*Ntp->TriggerSF(Tau2,"Up"));
			  CMS_eff_t_trg_MVADM10_13TeVDownPVRefitWithTracksBSJetFakes.at(t).Fill(ScalcPVRefitWithTracksBS.AcopAngle("a1", "a1", TauminusPairConstraintWithTracksBS, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintWithTracksBS, HadRefitPions_plus, HadRefitPionsCharge_plus),max_pair.first,(Wspin/(wTrgSF1*wTrgSF2))*Ntp->TriggerSF(Tau1,"Down")*Ntp->TriggerSF(Tau2,"Down"));
			  CMS_htt_dyShape_13TeVUpPVRefitWithTracksBSJetFakes.at(t).Fill(ScalcPVRefitWithTracksBS.AcopAngle("a1", "a1", TauminusPairConstraintWithTracksBS, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintWithTracksBS, HadRefitPions_plus, HadRefitPionsCharge_plus),max_pair.first,2.*zptw*(Wspin/zptw));
			  CMS_htt_dyShape_13TeVDownPVRefitWithTracksBSJetFakes.at(t).Fill(ScalcPVRefitWithTracksBS.AcopAngle("a1", "a1", TauminusPairConstraintWithTracksBS, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintWithTracksBS, HadRefitPions_plus, HadRefitPionsCharge_plus),max_pair.first,Wspin/zptw);
			  
			  PrefiringUp_PVRefitWithTracksBSJetFakes.at(t).Fill(ScalcPVRefitWithTracksBS.AcopAngle("a1", "a1", TauminusPairConstraintWithTracksBS, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintWithTracksBS, HadRefitPions_plus, HadRefitPionsCharge_plus),max_pair.first,Ntp->prefiringweightup()*(Wspin/Ntp->prefiringweight()));
			  PrefiringDown_PVRefitWithTracksBSJetFakes.at(t).Fill(ScalcPVRefitWithTracksBS.AcopAngle("a1", "a1", TauminusPairConstraintWithTracksBS, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintWithTracksBS, HadRefitPions_plus, HadRefitPionsCharge_plus),max_pair.first,Ntp->prefiringweightdown()*(Wspin/Ntp->prefiringweight()));
			}
	     
		      }
		    if(max_pair.second==2)
		      {
			ZTTBDTScorea1a1.at(t).Fill(max_pair.first,w);
			
			if(TauminusPairConstraintWithTracksBS!=zeroLV && TauplusPairConstraintWithTracksBS!=zeroLV && ScalcPVRefitWithTracksBS.isOk("a1", "a1", TauminusPairConstraintWithTracksBS, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintWithTracksBS, HadRefitPions_plus, HadRefitPionsCharge_plus)==true){
			  
			  
			  if(max_pair.first>0 && max_pair.first<0.5)polarimetricAcopAnglePVRefitWithTracksBSMVADMZTTUnrolled.at(t).Fill(ScalcPVRefitWithTracksBS.AcopAngle("a1", "a1", TauminusPairConstraintWithTracksBS, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintWithTracksBS, HadRefitPions_plus, HadRefitPionsCharge_plus),Wspin);
			  if(max_pair.first>0.5 && max_pair.first<0.6)polarimetricAcopAnglePVRefitWithTracksBSMVADMZTTUnrolled.at(t).Fill(2*TMath::Pi()+ScalcPVRefitWithTracksBS.AcopAngle("a1", "a1", TauminusPairConstraintWithTracksBS, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintWithTracksBS, HadRefitPions_plus, HadRefitPionsCharge_plus),Wspin);
			  if(max_pair.first>0.6 && max_pair.first<0.7)polarimetricAcopAnglePVRefitWithTracksBSMVADMZTTUnrolled.at(t).Fill(2*2*TMath::Pi()+ScalcPVRefitWithTracksBS.AcopAngle("a1", "a1", TauminusPairConstraintWithTracksBS, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintWithTracksBS, HadRefitPions_plus, HadRefitPionsCharge_plus),Wspin);
			  if(max_pair.first>0.7 && max_pair.first<1.)polarimetricAcopAnglePVRefitWithTracksBSMVADMZTTUnrolled.at(t).Fill(3*2*TMath::Pi()+ScalcPVRefitWithTracksBS.AcopAngle("a1", "a1", TauminusPairConstraintWithTracksBS, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintWithTracksBS, HadRefitPions_plus, HadRefitPionsCharge_plus),Wspin);


			  polarimetricAcopAnglePVRefitWithTracksBSMVADMZTT.at(t).Fill(ScalcPVRefitWithTracksBS.AcopAngle("a1", "a1", TauminusPairConstraintWithTracksBS, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintWithTracksBS, HadRefitPions_plus, HadRefitPionsCharge_plus),max_pair.first,Wspin);
			  CMS_eff_t_pThigh_MVADM10_13TeVUpPVRefitWithTracksBSZTT.at(t).Fill(ScalcPVRefitWithTracksBS.AcopAngle("a1", "a1", TauminusPairConstraintWithTracksBS, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintWithTracksBS, HadRefitPions_plus, HadRefitPionsCharge_plus),max_pair.first,(Wspin/(wIDSF1*wIDSF2))*Ntp->IDSF(Tau1,"tau","Up")*Ntp->IDSF(Tau2,"tau","Up"));
			  CMS_eff_t_pThigh_MVADM10_13TeVDownPVRefitWithTracksBSZTT.at(t).Fill(ScalcPVRefitWithTracksBS.AcopAngle("a1", "a1", TauminusPairConstraintWithTracksBS, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintWithTracksBS, HadRefitPions_plus, HadRefitPionsCharge_plus),max_pair.first,(Wspin/(wIDSF1*wIDSF2))*Ntp->IDSF(Tau1,"tau","Down")*Ntp->IDSF(Tau2,"tau","Down"));
			  CMS_eff_t_trg_MVADM10_13TeVUpPVRefitWithTracksBSZTT.at(t).Fill(ScalcPVRefitWithTracksBS.AcopAngle("a1", "a1", TauminusPairConstraintWithTracksBS, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintWithTracksBS, HadRefitPions_plus, HadRefitPionsCharge_plus),max_pair.first,(Wspin/(wTrgSF1*wTrgSF2))*Ntp->TriggerSF(Tau1,"Up")*Ntp->TriggerSF(Tau2,"Up"));
			  CMS_eff_t_trg_MVADM10_13TeVDownPVRefitWithTracksBSZTT.at(t).Fill(ScalcPVRefitWithTracksBS.AcopAngle("a1", "a1", TauminusPairConstraintWithTracksBS, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintWithTracksBS, HadRefitPions_plus, HadRefitPionsCharge_plus),max_pair.first,(Wspin/(wTrgSF1*wTrgSF2))*Ntp->TriggerSF(Tau1,"Down")*Ntp->TriggerSF(Tau2,"Down"));
			  CMS_htt_dyShape_13TeVUpPVRefitWithTracksBSZTT.at(t).Fill(ScalcPVRefitWithTracksBS.AcopAngle("a1", "a1", TauminusPairConstraintWithTracksBS, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintWithTracksBS, HadRefitPions_plus, HadRefitPionsCharge_plus),max_pair.first,2.*zptw*(Wspin/zptw));
			  CMS_htt_dyShape_13TeVDownPVRefitWithTracksBSZTT.at(t).Fill(ScalcPVRefitWithTracksBS.AcopAngle("a1", "a1", TauminusPairConstraintWithTracksBS, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintWithTracksBS, HadRefitPions_plus, HadRefitPionsCharge_plus),max_pair.first,Wspin/zptw);
			  
			  PrefiringUp_PVRefitWithTracksBSZTT.at(t).Fill(ScalcPVRefitWithTracksBS.AcopAngle("a1", "a1", TauminusPairConstraintWithTracksBS, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintWithTracksBS, HadRefitPions_plus, HadRefitPionsCharge_plus),max_pair.first,Ntp->prefiringweightup()*(Wspin/Ntp->prefiringweight()));
			  PrefiringDown_PVRefitWithTracksBSZTT.at(t).Fill(ScalcPVRefitWithTracksBS.AcopAngle("a1", "a1", TauminusPairConstraintWithTracksBS, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintWithTracksBS, HadRefitPions_plus, HadRefitPionsCharge_plus),max_pair.first,Ntp->prefiringweightdown()*(Wspin/Ntp->prefiringweight()));
			}
		
		      }

		    // Tau1PTa1a1.at(t).Fill(Tau1P4.Pt(),w);
		    // Tau1Ea1a1.at(t).Fill(Tau1P4.E(),w);
		    // Tau1Massa1a1.at(t).Fill(Tau1P4.M(),w);
		    // Tau1Phia1a1.at(t).Fill(Tau1P4.Phi(),w);
		    // Tau1Etaa1a1.at(t).Fill(Tau1P4.Eta(),w);
		    // Tau1dza1a1.at(t).Fill(Ntp->dz(Tau1),w);
		    // Tau2PTa1a1.at(t).Fill(Tau2P4.Pt(),w);
		    // Tau2Ea1a1.at(t).Fill(Tau2P4.E(),w);
		    // Tau2Massa1a1.at(t).Fill(Tau2P4.M(),w);
		    // Tau2Phia1a1.at(t).Fill(Tau2P4.Phi(),w);
		    // Tau2Etaa1a1.at(t).Fill(Tau2P4.Eta(),w);
		    // Tau2dza1a1.at(t).Fill(Ntp->dz(Tau2),w);
		    // TauTauVisMassa1a1.at(t).Fill((Tau1P4+Tau2P4).M(),w);
		    // TauTauVisPTa1a1.at(t).Fill((Tau1P4+Tau2P4).Pt(),w);
		    // TauTauFullMassa1a1.at(t).Fill((tau1P4+tau2P4).M(),w);
		    // TauTauFullPTa1a1.at(t).Fill((tau1P4+tau2P4).Pt(),w);
		    // PUPPImetcorra1a1.at(t).Fill(sqrt(PUPPImetCorr_px*PUPPImetCorr_px+PUPPImetCorr_py*PUPPImetCorr_py),w);
		    // PUPPImetcorrphia1a1.at(t).Fill(TMath::ATan2(PUPPImetCorr_py,PUPPImetCorr_px),w);
		    // NbJetsa1a1.at(t).Fill(Ntp->njets(IndexSelectedTemp.at(0)),w);
		    // if(Has2jets>=0)
		    //   {
		    // 	Mjja1a1.at(t).Fill(Ntp->mjj(Has2jets),w);
		    // 	dijetpta1a1.at(t).Fill(Ntp->dijetpt(Has2jets),w);
		    // 	dijetphia1a1.at(t).Fill(Ntp->dijetphi(Has2jets),w);
		    // 	jdetaa1a1.at(t).Fill(Ntp->jdeta(Has2jets),w);
		    // 	jdphia1a1.at(t).Fill(Ntp->jdphi(Has2jets),w);
		    // 	jpt_2a1a1.at(t).Fill(Ntp->jpt_2(Has2jets),w);
		    // 	jeta_2a1a1.at(t).Fill(Ntp->jeta_2(Has2jets),w);
		    // 	jphi_2a1a1.at(t).Fill(Ntp->jphi_2(Has2jets),w);
		    //   }
		    // if(Has1jet>=0)
		    //   {
		    // 	jpt_1a1a1.at(t).Fill(Ntp->jpt_1(Has1jet),w);
		    // 	jeta_1a1a1.at(t).Fill(Ntp->jeta_1(Has1jet),w);
		    // 	jphi_1a1a1.at(t).Fill(Ntp->jphi_1(Has1jet),w);
		    //   }
		  }
	      }
	  }
      }

    //HPtVis.at(t).Fill((Tau1P4+Tau2P4).Pt(),w);
    //TauTauVisPT.at(t).Fill((Tau1P4+Tau2P4).Pt(),w);
    
    // std::vector<int> decay0;
    // std::vector<int> decay1;
    // bool a10=false;
    // bool a11=false;
    // bool a1pi00=false;
    // bool a1pi01=false;
    // bool rho0=false;
    // bool rho1=false;
    // bool pi0=false;
    // bool pi1=false;
    // bool pi23pi00=false;
    // bool pi23pi01=false;
    // bool e0=false;
    // bool e1=false;
    // bool mu0=false;
    // bool mu1=false;

    // bool purityDM=false;
    // bool purityNewMVA=false;

   
    // if(!Ntp->isData()){
    //   for(int i=0;i<Ntp->NMCTauDecayProducts(0);i++)
    // 	{
    // 	  decay0.push_back(Ntp->MCTauandProd_pdgid(0,i));
    // 	}
    //   for(int i=0;i<Ntp->NMCTauDecayProducts(1);i++)
    // 	{
    // 	  decay1.push_back(Ntp->MCTauandProd_pdgid(1,i));
    // 	}
    
    //   if(((((count(decay0.begin(), decay0.end(), 211)==2) && (count(decay0.begin(), decay0.end(), -211)==1)) ||((count(decay0.begin(), decay0.end(), -211)==2) && (count(decay0.begin(), decay0.end(), 211)==1))) && (count(decay0.begin(), decay0.end(), 111)==0))==true) a10=true;
    //   if((((count(decay0.begin(), decay0.end(), 111)==1) && (count(decay0.begin(), decay0.end(), 211)==1) && (count(decay0.begin(), decay0.end(), -211)==0)) ||((count(decay0.begin(), decay0.end(), 111)==1) && (count(decay0.begin(), decay0.end(), -211)==1) && (count(decay0.begin(), decay0.end(), 211)==0)))==true)rho0=true;
    //   if((((count(decay0.begin(), decay0.end(), 211)==1 && count(decay0.begin(), decay0.end(), -211)==0) ||(count(decay0.begin(), decay0.end(), -211)==1 && count(decay0.begin(), decay0.end(), 211)==0)) && count(decay0.begin(), decay0.end(), 111)==0)==true)pi0=true;
    //   if((((count(decay0.begin(), decay0.end(), 11)==1 && count(decay0.begin(), decay0.end(), -12)==1) ||(count(decay0.begin(), decay0.end(), -11)==1 && count(decay0.begin(), decay0.end(), 12)==1)) && count(decay0.begin(), decay0.end(), 111)==0) ==true)e0=true;
    //   if((((count(decay0.begin(), decay0.end(), 13)==1 && count(decay0.begin(), decay0.end(), -14)==1) ||(count(decay0.begin(), decay0.end(), -13)==1 && count(decay0.begin(), decay0.end(), 14)==1)) && count(decay0.begin(), decay0.end(), 111)==0) ==true)mu0=true;
    
    //   if(((((count(decay0.begin(), decay0.end(), 211)==2) && (count(decay0.begin(), decay0.end(), -211)==1)) ||((count(decay0.begin(), decay0.end(), -211)==2) && (count(decay0.begin(), decay0.end(), 211)==1))) && (count(decay0.begin(), decay0.end(), 111)==1))==true) a1pi00=true;
    //   if((((count(decay0.begin(), decay0.end(), 211)==1 && count(decay0.begin(), decay0.end(), -211)==0) ||(count(decay0.begin(), decay0.end(), -211)==1 && count(decay0.begin(), decay0.end(), 211)==0)) && ((count(decay0.begin(), decay0.end(), 111)==2) || count(decay0.begin(), decay0.end(), 111)==3))==true)pi23pi00=true;

    //   if(((((count(decay1.begin(), decay1.end(), 211)==2) && (count(decay1.begin(), decay1.end(), -211)==1)) ||((count(decay1.begin(), decay1.end(), -211)==2) && (count(decay1.begin(), decay1.end(), 211)==1))) && count(decay1.begin(), decay1.end(), 111)==0)==true) a11=true;
    //   if((((count(decay1.begin(), decay1.end(), 111)==1) && (count(decay1.begin(), decay1.end(), 211)==1) && (count(decay1.begin(), decay1.end(), -211)==0)) ||((count(decay1.begin(), decay1.end(), 111)==1) && (count(decay1.begin(), decay1.end(), -211)==1) && (count(decay1.begin(), decay1.end(), 211)==0)))==true)rho1=true;
    //   if((((count(decay1.begin(), decay1.end(), 211)==1 && count(decay1.begin(), decay1.end(), -211)==0) ||(count(decay1.begin(), decay1.end(), -211)==1 && count(decay1.begin(), decay1.end(), 211)==0)) && count(decay1.begin(), decay1.end(), 111)==0)==true)pi1=true;
    //   if((((count(decay1.begin(), decay1.end(), 11)==1 && count(decay1.begin(), decay1.end(), -12)==1) ||(count(decay1.begin(), decay1.end(), -11)==1 && count(decay1.begin(), decay1.end(), 12)==1)) && count(decay1.begin(), decay1.end(), 111)==0) ==true)e1=true;
    //   if((((count(decay1.begin(), decay1.end(), 13)==1 && count(decay1.begin(), decay1.end(), -14)==1) ||(count(decay1.begin(), decay1.end(), -13)==1 && count(decay1.begin(), decay1.end(), 14)==1)) && count(decay1.begin(), decay1.end(), 111)==0) ==true)mu1=true;
     
    //   if(((((count(decay1.begin(), decay1.end(), 211)==2) && (count(decay1.begin(), decay1.end(), -211)==1)) ||((count(decay1.begin(), decay1.end(), -211)==2) && (count(decay1.begin(), decay1.end(), 211)==1))) && (count(decay1.begin(), decay1.end(), 111)==1))==true) a1pi01=true;
    //   if((((count(decay1.begin(), decay1.end(), 211)==1 && count(decay1.begin(), decay1.end(), -211)==0) ||(count(decay1.begin(), decay1.end(), -211)==1 && count(decay1.begin(), decay1.end(), 211)==0)) && ((count(decay1.begin(), decay1.end(), 111)==2) || count(decay1.begin(), decay1.end(), 111))==3)==true)pi23pi01=true;
    // }
    
    // bool a1a1_=(a10 && a11);
    // bool a1rho=((a10 && rho1) ||(a11 && rho0));
    // bool a1pi=((a10 && pi1)||(a11 && pi0));
    // bool a1e=((a10 && e1)||(a11 && e0));
    // bool a1mu=((a10 && mu1)||(a11 && mu0));
    // bool rhorho=(rho0 && rho1);
    // bool rhopi=((rho0 && pi1)||(rho1 && pi0));
    // bool rhoe=((rho0 && e1)||(rho1 && e0));
    // bool rhomu=((rho0 && mu1)||(rho1 && mu0));
    // bool pipi=(pi0 && pi1);
    // bool pie=((pi0 && e1)||(pi1 && e0));
    // bool pimu=((pi0 && mu1)||(pi1 && mu0));
    // bool ee=(e0 && e1);
    // bool emu=((e0 && mu1)||(e1 && mu0));
    // bool mumu=(mu0 && mu1);

    // bool a1pi0a1pi0=(a1pi00 && a1pi01);
    // bool pi23pi0pi23pi0=(pi23pi00 && pi23pi01);
    
    // bool a1a1pi0=((a10 && a1pi01) || (a11 && a1pi00));
    // bool a1pi23pi0=((a10 && pi23pi01) || (a11 && pi23pi00));

    // bool a1pi0pi23pi0=((a1pi00 && pi23pi01) || (a1pi01 && pi23pi00));

    // bool a1pi0rho=((rho0 && a1pi01) || (rho1 && a1pi00));
    // bool rhopi23pi0=((rho0 && pi23pi01) || (rho1 && pi23pi00));

    // bool a1pi0pi=((pi0 && a1pi01) || (pi1 && a1pi00));
    // bool pipi23pi0=((pi0 && pi23pi01) || (pi1 && pi23pi00));

    // bool a1pi0e=((e0 && a1pi01) || (e1 && a1pi00));
    // bool pi23pi0e=((e0 && pi23pi01) || (e1 && pi23pi00));

    // bool a1pi0mu=((mu0 && a1pi01) || (mu1 && a1pi00));
    // bool pi23pi0mu=((mu0 && pi23pi01) || (mu1 && pi23pi00));
    
    // if (std::isnan(Wspin)!=true)
    //   {
    // 	if(a1a1)
    // 	  {
    // 	    if ((HadPions_minus!=HadPions_plus) && (HadPions_minus!=VectZeroLV) && (HadPions_plus!=VectZeroLV) && (HadRefitPions_minus!=HadRefitPions_plus) && (HadRefitPions_minus!=VectZeroLV) && (HadRefitPions_plus!=VectZeroLV))
    // 	      {
    // 		if(TauminusPairConstraint!=TauplusPairConstraint && TauminusPairConstraint!=zeroLV && TauplusPairConstraint!=zeroLV )
    // 		  {

    // 		    polarimetricAcopAngle.at(t).Fill(Scalc.AcopAngle("a1", "a1", TauminusPairConstraint, HadPions_minus, HadPionsCharge_minus, TauplusPairConstraint , HadPions_plus, HadPionsCharge_plus),Wspin);

    // 		    if(a1a1_ ||a1rho  ||a1pi  || a1e || a1mu || rhorho || rhopi || rhoe || rhomu ||pipi || pie||pimu || ee||emu ||mumu || a1pi0a1pi0||pi23pi0pi23pi0 ||a1a1pi0||a1pi0pi23pi0 ||a1pi23pi0 ||a1pi0rho ||rhopi23pi0 ||a1pi0pi ||pipi23pi0 || a1pi0e||pi23pi0e ||a1pi0mu ||pi23pi0mu)purityDM=true;
	    
    // 		    if(!purityDM) { PurityDM.at(t).Fill(28.,w); //other
    // 		      // cout<<endl;
    // 		      // cout<<" pdgid0: ";
    // 		      // for(int i=0;i<Ntp->NMCTauDecayProducts(0);i++)
    // 		      //   {
    // 		      //     cout<<Ntp->MCTauandProd_pdgid(0,i)<<"  ";
		  
    // 		      //   }
    // 		      // cout<<endl;
    // 		      // cout<<" pdgid1: ";
    // 		      // for(int i=0;i<Ntp->NMCTauDecayProducts(1);i++)
    // 		      //   {
    // 		      //     cout<<Ntp->MCTauandProd_pdgid(1,i)<<"  ";
		  
    // 		      //   }
    // 		      // cout<<endl;
    // 		      //cout<<a1a1_ <<a1rho  <<a1pi  << a1e << a1mu << rhorho << rhopi << rhoe << rhomu <<pipi << pie<<pimu << ee<<emu <<mumu<<endl;
    // 		      //cout<<endl;
    // 		    }
    // 		    if(purityDM)
    // 		      {
    // 			if (a1a1_){PurityDM.at(t).Fill(0.,w);
    // 			  // cout<<endl;
    // 			  // cout<<" a1a1 pdgid0: ";
    // 			  // for(int i=0;i<Ntp->NMCTauDecayProducts(0);i++)
    // 			  // 	{
    // 			  // 	  cout<<Ntp->MCTauandProd_pdgid(0,i)<<"  ";
		  
    // 			  // 	}
    // 			  // cout<<endl;
    // 			  // cout<<" a1a1 pdgid1: ";
    // 			  // for(int i=0;i<Ntp->NMCTauDecayProducts(1);i++)
    // 			  // 	{
    // 			  // 	  cout<<Ntp->MCTauandProd_pdgid(1,i)<<"  ";
		  
    // 			  // 	}
    // 			  // cout<<endl;
    // 			}
				    
    // 			else if(a1a1pi0)PurityDM.at(t).Fill(1.,w);
    // 			else if (a1rho){PurityDM.at(t).Fill(2.,w);
    // 			  // cout<<endl;
    // 			  // for(int i=0;i<Ntp->NMCTauDecayProducts(0);i++)
    // 			  // 	{
    // 			  // 	  cout<<" a1rho pdgid0: "<<Ntp->MCTauandProd_pdgid(0,i);
		  
    // 			  // 	}
    // 			  // cout<<endl;
    // 			  // for(int i=0;i<Ntp->NMCTauDecayProducts(1);i++)
    // 			  // 	{
    // 			  // 	  cout<<" a1rho pdgid1: "<<Ntp->MCTauandProd_pdgid(1,i);
		  
    // 			  // 	}
    // 			  // cout<<endl;
    // 			}
    // 			else if (a1pi)PurityDM.at(t).Fill(3.,w);
    // 			else if (a1pi23pi0)PurityDM.at(t).Fill(4.,w);
    // 			else if (a1e)PurityDM.at(t).Fill(5.,w);
    // 			else if (a1mu)PurityDM.at(t).Fill(6.,w);

    // 			else if (a1pi0a1pi0)PurityDM.at(t).Fill(7.,w);
    // 			else if (a1pi0rho)PurityDM.at(t).Fill(8.,w);
    // 			else if (a1pi0pi)PurityDM.at(t).Fill(9.,w);
    // 			else if (a1pi0pi23pi0)PurityDM.at(t).Fill(10.,w);
    // 			else if (a1pi0e)PurityDM.at(t).Fill(11.,w);
    // 			else if (a1pi0mu)PurityDM.at(t).Fill(12.,w);
				    
    // 			else if (rhorho)PurityDM.at(t).Fill(13.,w);
    // 			else if (rhopi)PurityDM.at(t).Fill(14.,w);
    // 			else if (rhopi23pi0)PurityDM.at(t).Fill(15.,w);
    // 			else if (rhoe)PurityDM.at(t).Fill(16.,w);
    // 			else if (rhomu)PurityDM.at(t).Fill(17.,w);
				    
    // 			else if (pipi)PurityDM.at(t).Fill(18.,w);
    // 			else if (pipi23pi0)PurityDM.at(t).Fill(19.,w);
    // 			else if (pie)PurityDM.at(t).Fill(20.,w);
    // 			else if (pimu)PurityDM.at(t).Fill(21.,w);
    // 			else if (pi23pi0pi23pi0)PurityDM.at(t).Fill(22.,w);
    // 			else if (pi23pi0e)PurityDM.at(t).Fill(23.,w);
    // 			else if (pi23pi0mu)PurityDM.at(t).Fill(24.,w);
    // 			else if (ee)PurityDM.at(t).Fill(25.,w);
    // 			else if (emu)PurityDM.at(t).Fill(26.,w);
    // 			else if (mumu)PurityDM.at(t).Fill(27.,w);
    // 		      }
    // 		    //}
    // 		  }
    // 	      }
	
    // 	    if(TauminusPairConstraint!=zeroLV && TauplusPairConstraint!=zeroLV && Scalc.isOk("a1", "a1", TauminusPairConstraint, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraint, HadRefitPions_plus, HadRefitPionsCharge_plus)==true) polarimetricAcopAngle.at(t).Fill(Scalc.AcopAngle("a1", "a1", TauminusPairConstraint, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraint, HadRefitPions_plus, HadRefitPionsCharge_plus),Wspin);
	
    // 	    if(TauminusPairConstraintNoBS!=zeroLV && TauplusPairConstraintNoBS!=zeroLV && ScalcPVRefitNoBS.isOk("a1", "a1", TauminusPairConstraintNoBS, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintNoBS, HadRefitPions_plus, HadRefitPionsCharge_plus)==true) polarimetricAcopAnglePVRefitNoBS.at(t).Fill(ScalcPVRefitNoBS.AcopAngle("a1", "a1", TauminusPairConstraintNoBS, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintNoBS, HadRefitPions_plus, HadRefitPionsCharge_plus),Wspin);

    // 	    if(TauminusPairConstraintBS!=zeroLV && TauplusPairConstraintBS!=zeroLV && ScalcPVRefitBS.isOk("a1", "a1", TauminusPairConstraintBS, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintBS, HadRefitPions_plus, HadRefitPionsCharge_plus)==true) polarimetricAcopAnglePVRefitBS.at(t).Fill(ScalcPVRefitBS.AcopAngle("a1", "a1", TauminusPairConstraintBS, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintBS, HadRefitPions_plus, HadRefitPionsCharge_plus),Wspin);

    // 	    if(TauminusPairConstraintNoBSZNominal!=zeroLV && TauplusPairConstraintNoBSZNominal!=zeroLV && ScalcPVRefitNoBSZNominal.isOk("a1", "a1", TauminusPairConstraintNoBSZNominal, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintNoBSZNominal, HadRefitPions_plus, HadRefitPionsCharge_plus)==true) polarimetricAcopAnglePVRefitNoBSZNominal.at(t).Fill(ScalcPVRefitNoBSZNominal.AcopAngle("a1", "a1", TauminusPairConstraintNoBSZNominal, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintNoBSZNominal, HadRefitPions_plus, HadRefitPionsCharge_plus),Wspin);

    // 	    if(TauminusPairConstraintBSZNominal!=zeroLV && TauplusPairConstraintBSZNominal!=zeroLV && ScalcPVRefitBSZNominal.isOk("a1", "a1", TauminusPairConstraintBSZNominal, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintBSZNominal, HadRefitPions_plus, HadRefitPionsCharge_plus)==true) polarimetricAcopAnglePVRefitBSZNominal.at(t).Fill(ScalcPVRefitBSZNominal.AcopAngle("a1", "a1", TauminusPairConstraintBSZNominal, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintBSZNominal, HadRefitPions_plus, HadRefitPionsCharge_plus),Wspin);

    // 	  }
    // 	if(a1a1MVA)
    // 	  {	      
    // 	    if(TauminusPairConstraint!=zeroLV && TauplusPairConstraint!=zeroLV && Scalc.isOk("a1", "a1", TauminusPairConstraint, HadPions_minus, HadPionsCharge_minus, TauplusPairConstraint , HadPions_plus, HadPionsCharge_plus)==true) polarimetricAcopAngleMVADM.at(t).Fill(Scalc.AcopAngle("a1", "a1", TauminusPairConstraint, HadPions_minus, HadPionsCharge_minus, TauplusPairConstraint, HadPions_plus, HadPionsCharge_plus),Wspin);
		
    // 	    if(TauminusPairConstraintNoBS!=zeroLV && TauplusPairConstraintNoBS!=zeroLV && ScalcPVRefitNoBS.isOk("a1", "a1", TauminusPairConstraintNoBS, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintNoBS, HadRefitPions_plus, HadRefitPionsCharge_plus)==true) polarimetricAcopAnglePVRefitNoBSMVADM.at(t).Fill(ScalcPVRefitNoBS.AcopAngle("a1", "a1", TauminusPairConstraintNoBS, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintNoBS, HadRefitPions_plus, HadRefitPionsCharge_plus),Wspin);

    // 	    if(TauminusPairConstraintBS!=zeroLV && TauplusPairConstraintBS!=zeroLV && ScalcPVRefitBS.isOk("a1", "a1", TauminusPairConstraintBS, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintBS, HadRefitPions_plus, HadRefitPionsCharge_plus)==true) polarimetricAcopAnglePVRefitBSMVADM.at(t).Fill(ScalcPVRefitBS.AcopAngle("a1", "a1", TauminusPairConstraintBS, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintBS, HadRefitPions_plus, HadRefitPionsCharge_plus),Wspin);

    // 	    if(TauminusPairConstraintNoBSZNominal!=zeroLV && TauplusPairConstraintNoBSZNominal!=zeroLV && ScalcPVRefitNoBSZNominal.isOk("a1", "a1", TauminusPairConstraintNoBSZNominal, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintNoBSZNominal, HadRefitPions_plus, HadRefitPionsCharge_plus)==true) polarimetricAcopAnglePVRefitNoBSZNominalMVADM.at(t).Fill(ScalcPVRefitNoBSZNominal.AcopAngle("a1", "a1", TauminusPairConstraintNoBSZNominal, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintNoBSZNominal, HadRefitPions_plus, HadRefitPionsCharge_plus),Wspin);

    // 	    if(TauminusPairConstraintBSZNominal!=zeroLV && TauplusPairConstraintBSZNominal!=zeroLV && ScalcPVRefitBSZNominal.isOk("a1", "a1", TauminusPairConstraintBSZNominal, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintBSZNominal, HadRefitPions_plus, HadRefitPionsCharge_plus)==true) polarimetricAcopAnglePVRefitBSZNominalMVADM.at(t).Fill(ScalcPVRefitBSZNominal.AcopAngle("a1", "a1", TauminusPairConstraintBSZNominal, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintBSZNominal, HadRefitPions_plus, HadRefitPionsCharge_plus),Wspin);

    // 	    if(TauminusPairConstraintWithTracksBS!=zeroLV && TauplusPairConstraintWithTracksBS!=zeroLV && ScalcPVRefitWithTracksBS.isOk("a1", "a1", TauminusPairConstraintWithTracksBS, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintWithTracksBS, HadRefitPions_plus, HadRefitPionsCharge_plus)==true) polarimetricAcopAnglePVRefitWithTracksBSMVADM.at(t).Fill(ScalcPVRefitWithTracksBS.AcopAngle("a1", "a1", TauminusPairConstraintWithTracksBS, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintWithTracksBS, HadRefitPions_plus, HadRefitPionsCharge_plus),Wspin);

    // 	    if(TauminusPairConstraintWithTracksBSZNominal!=zeroLV && TauplusPairConstraintWithTracksBSZNominal!=zeroLV && ScalcPVRefitWithTracksBSZNominal.isOk("a1", "a1", TauminusPairConstraintWithTracksBSZNominal, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintWithTracksBSZNominal, HadRefitPions_plus, HadRefitPionsCharge_plus)==true) polarimetricAcopAnglePVRefitWithTracksBSZNominalMVADM.at(t).Fill(ScalcPVRefitWithTracksBSZNominal.AcopAngle("a1", "a1", TauminusPairConstraintWithTracksBSZNominal, HadRefitPions_minus, HadRefitPionsCharge_minus, TauplusPairConstraintWithTracksBSZNominal, HadRefitPions_plus, HadRefitPionsCharge_plus),Wspin);
		

    // 	    if(!Ntp->isData()){
    // 	      if(a1a1_ ||a1rho  ||a1pi  || a1e || a1mu || rhorho || rhopi || rhoe || rhomu ||pipi || pie||pimu || ee||emu ||mumu || a1pi0a1pi0||pi23pi0pi23pi0 ||a1a1pi0||a1pi0pi23pi0 ||a1pi23pi0 ||a1pi0rho ||rhopi23pi0 ||a1pi0pi ||pipi23pi0 || a1pi0e||pi23pi0e ||a1pi0mu ||pi23pi0mu)purityNewMVA=true;

    // 	      if(!purityNewMVA) { PurityNewMVA.at(t).Fill(28.,w); //other
    // 		// cout<<endl;
    // 		// cout<<" pdgid0: ";
    // 		// for(int i=0;i<Ntp->NMCTauDecayProducts(0);i++)
    // 		//   {
    // 		//     cout<<Ntp->MCTauandProd_pdgid(0,i)<<"  ";
		  
    // 		//   }
    // 		// cout<<endl;
    // 		// cout<<" pdgid1: ";
    // 		// for(int i=0;i<Ntp->NMCTauDecayProducts(1);i++)
    // 		//   {
    // 		//     cout<<Ntp->MCTauandProd_pdgid(1,i)<<"  ";
		  
    // 		//   }
    // 		// cout<<endl;
    // 		//cout<<a1a1_ <<a1rho  <<a1pi  << a1e << a1mu << rhorho << rhopi << rhoe << rhomu <<pipi << pie<<pimu << ee<<emu <<mumu<<endl;
    // 		//cout<<endl;
    // 	      }
    // 	      if(purityNewMVA)
    // 		{
    // 		  if (a1a1_){PurityNewMVA.at(t).Fill(0.,w);
    // 		    // cout<<endl;
    // 		    // cout<<" a1a1 pdgid0: ";
    // 		    // for(int i=0;i<Ntp->NMCTauDecayProducts(0);i++)
    // 		    // 	{
    // 		    // 	  cout<<Ntp->MCTauandProd_pdgid(0,i)<<"  ";
		  
    // 		    // 	}
    // 		    // cout<<endl;
    // 		    // cout<<" a1a1 pdgid1: ";
    // 		    // for(int i=0;i<Ntp->NMCTauDecayProducts(1);i++)
    // 		    // 	{
    // 		    // 	  cout<<Ntp->MCTauandProd_pdgid(1,i)<<"  ";
		  
    // 		    // 	}
    // 		    // cout<<endl;
    // 		  }
				    
    // 		  else if(a1a1pi0)PurityNewMVA.at(t).Fill(1.,w);
    // 		  else if (a1rho){PurityNewMVA.at(t).Fill(2.,w);
    // 		    // cout<<endl;
    // 		    // for(int i=0;i<Ntp->NMCTauDecayProducts(0);i++)
    // 		    // 	{
    // 		    // 	  cout<<" a1rho pdgid0: "<<Ntp->MCTauandProd_pdgid(0,i);
		  
    // 		    // 	}
    // 		    // cout<<endl;
    // 		    // for(int i=0;i<Ntp->NMCTauDecayProducts(1);i++)
    // 		    // 	{
    // 		    // 	  cout<<" a1rho pdgid1: "<<Ntp->MCTauandProd_pdgid(1,i);
		  
    // 		    // 	}
    // 		    // cout<<endl;
    // 		  }
    // 		  else if (a1pi)PurityNewMVA.at(t).Fill(3.,w);
    // 		  else if (a1pi23pi0)PurityNewMVA.at(t).Fill(4.,w);
    // 		  else if (a1e)PurityNewMVA.at(t).Fill(5.,w);
    // 		  else if (a1mu)PurityNewMVA.at(t).Fill(6.,w);

    // 		  else if (a1pi0a1pi0)PurityNewMVA.at(t).Fill(7.,w);
    // 		  else if (a1pi0rho)PurityNewMVA.at(t).Fill(8.,w);
    // 		  else if (a1pi0pi)PurityNewMVA.at(t).Fill(9.,w);
    // 		  else if (a1pi0pi23pi0)PurityNewMVA.at(t).Fill(10.,w);
    // 		  else if (a1pi0e)PurityNewMVA.at(t).Fill(11.,w);
    // 		  else if (a1pi0mu)PurityNewMVA.at(t).Fill(12.,w);
				    
    // 		  else if (rhorho)PurityNewMVA.at(t).Fill(13.,w);
    // 		  else if (rhopi)PurityNewMVA.at(t).Fill(14.,w);
    // 		  else if (rhopi23pi0)PurityNewMVA.at(t).Fill(15.,w);
    // 		  else if (rhoe)PurityNewMVA.at(t).Fill(16.,w);
    // 		  else if (rhomu)PurityNewMVA.at(t).Fill(17.,w);
				    
    // 		  else if (pipi)PurityNewMVA.at(t).Fill(18.,w);
    // 		  else if (pipi23pi0)PurityNewMVA.at(t).Fill(19.,w);
    // 		  else if (pie)PurityNewMVA.at(t).Fill(20.,w);
    // 		  else if (pimu)PurityNewMVA.at(t).Fill(21.,w);
    // 		  else if (pi23pi0pi23pi0)PurityNewMVA.at(t).Fill(22.,w);
    // 		  else if (pi23pi0e)PurityNewMVA.at(t).Fill(23.,w);
    // 		  else if (pi23pi0mu)PurityNewMVA.at(t).Fill(24.,w);
    // 		  else if (ee)PurityNewMVA.at(t).Fill(25.,w);
    // 		  else if (emu)PurityNewMVA.at(t).Fill(26.,w);
    // 		  else if (mumu)PurityNewMVA.at(t).Fill(27.,w);
    // 		}
    // 	    }
    // 	    //}
    // 	  }

    //   }



    // if(!Ntp->isData())
    //   {
    // 	if(a1a1_ && Ntp->CheckDecayID(5,5))
    // 	  {
    // 	    Pions1=Ntp->GetTruthPionsFromA1(0);
    // 	    Pions1Charge.push_back(1);
    // 	    Pions1Charge.push_back(-1);
    // 	    Pions1Charge.push_back(-1);
    // 	    Pions2=Ntp->GetTruthPionsFromA1(1);
    // 	    Pions2Charge.push_back(-1);
    // 	    Pions2Charge.push_back(1);
    // 	    Pions2Charge.push_back(1);
    // 	    SCalculator Scalc1Truth("a1");
    // 	    SCalculator Scalc2Truth("a1");
    // 	    Scalc1Truth.SortPions(Pions1, Pions1Charge);
    // 	    Scalc2Truth.SortPions(Pions2, Pions2Charge);
    // 	    if(Ntp->MCTau_pdgid(0)==15)
    // 	      {
    // 		tauandprodTruthminus.push_back(Ntp->GetTruthTauLV(5,0));
    // 		tauandprodTruthminus.push_back(Pions1.at(0));
    // 		tauandprodTruthminus.push_back(Pions1.at(1));
    // 		tauandprodTruthminus.push_back(Pions1.at(2));
    // 		tauandprodTruthplus.push_back(Ntp->GetTruthTauLV(5,1));   
    // 		tauandprodTruthplus.push_back(Pions2.at(0));   
    // 		tauandprodTruthplus.push_back(Pions2.at(1));   
    // 		tauandprodTruthplus.push_back(Pions2.at(2));   
    // 	      }
    // 	    else if (Ntp->MCTau_pdgid(0)==-15)
    // 	      {
    // 		tauandprodTruthminus.push_back(Ntp->GetTruthTauLV(5,1));
    // 		tauandprodTruthminus.push_back(Pions2.at(0));
    // 		tauandprodTruthminus.push_back(Pions2.at(1));
    // 		tauandprodTruthminus.push_back(Pions2.at(2));
    // 		tauandprodTruthplus.push_back(Ntp->GetTruthTauLV(5,0));
    // 		tauandprodTruthplus.push_back(Pions1.at(0));   
    // 		tauandprodTruthplus.push_back(Pions1.at(1));  
    // 		tauandprodTruthplus.push_back(Pions1.at(2));   
    // 	      }	
    // 	  }
    // 	if((Pions1!=Pions2) && (Pions1!=VectZeroLV) && (Pions2!=VectZeroLV) && tauandprodTruthminus.at(0)!=zeroLV &&tauandprodTruthplus.at(0)!=zeroLV &&tauandprodTruthminus.at(0)!=tauandprodTruthplus.at(0))
    // 	  {
    // 	    if(a1a1_  && Ntp->CheckDecayID(5,5))
    // 	      {
		    
    // 		SCalculator Scalc1Truth("a1");
    // 		SCalculator Scalc2Truth("a1");
		    
    // 		Scalc1Truth.Configure(tauandprodTruthminus,tauandprodTruthminus.at(0)+tauandprodTruthplus.at(0), -1);
    // 		TVector3 h1Truth=Scalc1Truth.pv();
			
    // 		Scalc2Truth.Configure(tauandprodTruthplus,tauandprodTruthminus.at(0)+tauandprodTruthplus.at(0), +1);
    // 		TVector3 h2Truth=Scalc2Truth.pv();
			
    // 		double h1TruthNorm=1./h1Truth.Mag();
    // 		double h2TruthNorm=1./h2Truth.Mag();
		    
    // 		if(std::isnan(h1TruthNorm)!=true && std::isnan(h2TruthNorm)!=true)
    // 		  { 
    // 		    TLorentzVector tauminusTruth_HRF = Scalc1Truth.Boost(tauandprodTruthminus.at(0),tauandprodTruthminus.at(0)+tauandprodTruthplus.at(0));
    // 		    TLorentzVector tauplusTruth_HRF  = Scalc2Truth.Boost(tauandprodTruthplus.at(0),tauandprodTruthminus.at(0)+tauandprodTruthplus.at(0));
			
    // 		    double norm1Truth=1./(((h1Truth*h1TruthNorm).Cross(tauminusTruth_HRF.Vect().Unit())).Mag());
    // 		    double norm2Truth=1./(((h2Truth*h2TruthNorm).Cross(tauplusTruth_HRF.Vect().Unit())).Mag());
    // 		    TVector3 k1Truth = ((h1Truth*h1TruthNorm).Cross(tauminusTruth_HRF.Vect().Unit()))*norm1Truth;
    // 		    TVector3 k2Truth = ((h2Truth*h2TruthNorm).Cross(tauplusTruth_HRF.Vect().Unit()))*norm2Truth;
			
    // 		    if(((h1Truth*h1TruthNorm).Cross(h2Truth*h2TruthNorm))*tauminusTruth_HRF.Vect().Unit()<=0) {polarimetricAcopAngleTruthA1.at(t).Fill(TMath::ATan2((k1Truth.Cross(k2Truth)).Mag(),k1Truth*k2Truth),Wspin);/*cout<<"Angle Truth: "<<TMath::ATan2((k1Truth.Cross(k2Truth)).Mag(),k1Truth*k2Truth)<<endl;*/}
    // 		    else{ polarimetricAcopAngleTruthA1.at(t).Fill(2*TMath::Pi()-TMath::ATan2((k1Truth.Cross(k2Truth)).Mag(),k1Truth*k2Truth),Wspin);/*cout<<"Angle Truth: "<<2*TMath::Pi()-TMath::ATan2((k1Truth.Cross(k2Truth)).Mag(),k1Truth*k2Truth)<<endl;*/}
				
    // 		  }
    // 	      }
    // 	  }
    // 	if(a1a1_  && Ntp->CheckDecayID(5,5))
    // 	  {
    // 	    PVXResol.at(t).Fill((Ntp->PVtx().X()-Ntp->PVtx_Gen().X())/Ntp->PVtx_Gen().X(),w);
    // 	    PVXNoBSResol.at(t).Fill((tauNoBSPrimaryVertex.X()-Ntp->PVtx_Gen().X())/Ntp->PVtx_Gen().X(),w);
    // 	    PVXBSResol.at(t).Fill((tauBSPrimaryVertex.X()-Ntp->PVtx_Gen().X())/Ntp->PVtx_Gen().X(),w);
    // 	    PVYResol.at(t).Fill((Ntp->PVtx().Y()-Ntp->PVtx_Gen().Y())/Ntp->PVtx_Gen().Y(),w);
    // 	    PVYNoBSResol.at(t).Fill((tauNoBSPrimaryVertex.Y()-Ntp->PVtx_Gen().Y())/Ntp->PVtx_Gen().Y(),w);
    // 	    PVYBSResol.at(t).Fill((tauBSPrimaryVertex.Y()-Ntp->PVtx_Gen().Y())/Ntp->PVtx_Gen().Y(),w);
    // 	    PVZResol.at(t).Fill((Ntp->PVtx().Z()-Ntp->PVtx_Gen().Z())/Ntp->PVtx_Gen().Z(),w);
    // 	    PVZNoBSResol.at(t).Fill((tauNoBSPrimaryVertex.Z()-Ntp->PVtx_Gen().Z())/Ntp->PVtx_Gen().Z(),w);
    // 	    PVZBSResol.at(t).Fill((tauBSPrimaryVertex.Z()-Ntp->PVtx_Gen().Z())/Ntp->PVtx_Gen().Z(),w);
    // 	    if(isRefitNoBS)PVXNoBSOnlyResol.at(t).Fill((tauNoBSPrimaryVertex.X()-Ntp->PVtx_Gen().X())/Ntp->PVtx_Gen().X(),w);
    // 	    if(isRefitBS)PVXBSOnlyResol.at(t).Fill((tauBSPrimaryVertex.X()-Ntp->PVtx_Gen().X())/Ntp->PVtx_Gen().X(),w);
    // 	    if(isRefitNoBS)PVYNoBSOnlyResol.at(t).Fill((tauNoBSPrimaryVertex.Y()-Ntp->PVtx_Gen().Y())/Ntp->PVtx_Gen().Y(),w);
    // 	    if(isRefitBS)PVYBSOnlyResol.at(t).Fill((tauBSPrimaryVertex.Y()-Ntp->PVtx_Gen().Y())/Ntp->PVtx_Gen().Y(),w);
    // 	    if(isRefitNoBS)PVZNoBSOnlyResol.at(t).Fill((tauNoBSPrimaryVertex.Z()-Ntp->PVtx_Gen().Z())/Ntp->PVtx_Gen().Z(),w);
    // 	    if(isRefitBS)PVZBSOnlyResol.at(t).Fill((tauBSPrimaryVertex.Z()-Ntp->PVtx_Gen().Z())/Ntp->PVtx_Gen().Z(),w);
    // 	    if(Ntp->MCTau_pdgid(0)==15 && Ntp->PFTau_secondaryVertex_pos_Size()>1 && Ntp->MCTauandProd_VertexSize()==2)//nplus==1 && nminus==2)
    // 	      {
    // 		ResolPullXVtxIna1a1.at(t).Fill((TauminusSecondaryVertex.X()-Ntp->MCTauandProd_Vertex(0,1).X())/Ntp->MCTauandProd_Vertex(0,1).X());
    // 		ResolPullXVtxIna1a1.at(t).Fill((TauplusSecondaryVertex.X()-Ntp->MCTauandProd_Vertex(1,1).X())/Ntp->MCTauandProd_Vertex(1,1).X());
    // 		ResolPullYVtxIna1a1.at(t).Fill((TauminusSecondaryVertex.Y()-Ntp->MCTauandProd_Vertex(0,1).Y())/Ntp->MCTauandProd_Vertex(0,1).Y());
    // 		ResolPullYVtxIna1a1.at(t).Fill((TauplusSecondaryVertex.Y()-Ntp->MCTauandProd_Vertex(1,1).Y())/Ntp->MCTauandProd_Vertex(1,1).Y());
    // 		ResolPullZVtxIna1a1.at(t).Fill((TauminusSecondaryVertex.Z()-Ntp->MCTauandProd_Vertex(0,1).Z())/Ntp->MCTauandProd_Vertex(0,1).Z());
    // 		ResolPullZVtxIna1a1.at(t).Fill((TauplusSecondaryVertex.Z()-Ntp->MCTauandProd_Vertex(1,1).Z())/Ntp->MCTauandProd_Vertex(1,1).Z());
    // 	      }
    // 	    else if(Ntp->MCTau_pdgid(0)==-15 && Ntp->PFTau_secondaryVertex_pos_Size()>1 && Ntp->MCTauandProd_VertexSize()==2)
    // 	      {
    // 		ResolPullXVtxIna1a1.at(t).Fill((TauminusSecondaryVertex.X()-Ntp->MCTauandProd_Vertex(1,1).X())/Ntp->MCTauandProd_Vertex(1,1).X());
    // 		ResolPullXVtxIna1a1.at(t).Fill((TauplusSecondaryVertex.X()-Ntp->MCTauandProd_Vertex(0,1).X())/Ntp->MCTauandProd_Vertex(0,1).X());
    // 		ResolPullYVtxIna1a1.at(t).Fill((TauminusSecondaryVertex.Y()-Ntp->MCTauandProd_Vertex(1,1).Y())/Ntp->MCTauandProd_Vertex(1,1).Y());
    // 		ResolPullYVtxIna1a1.at(t).Fill((TauplusSecondaryVertex.Y()-Ntp->MCTauandProd_Vertex(0,1).Y())/Ntp->MCTauandProd_Vertex(0,1).Y());
    // 		ResolPullZVtxIna1a1.at(t).Fill((TauminusSecondaryVertex.Z()-Ntp->MCTauandProd_Vertex(1,1).Z())/Ntp->MCTauandProd_Vertex(1,1).Z());
    // 		ResolPullZVtxIna1a1.at(t).Fill((TauplusSecondaryVertex.Z()-Ntp->MCTauandProd_Vertex(0,1).Z())/Ntp->MCTauandProd_Vertex(0,1).Z());
		    
    // 	      }
    //	  }
    //   }
  }
}
//}
//}
//  This is a function if you want to do something after the event loop
void HCPTauTau::Finish() {

  if(mode == RECONSTRUCT) {
    SkimConfig SC;
    SC.ApplySkimEfficiency(types,Npassed, Npassed_noweight);

    double norm=1.;
    for(unsigned i=0;i<CrossSectionandAcceptance.size();i++){
      if(CrossSectionandAcceptance.at(i)>0){
	norm= CrossSectionandAcceptance.at(i)*Lumi/Npassed.at(i).GetBinContent(0);
	// PUPPImetcorr.at(1).Add(&PUPPImetcorrQCDMC.at(i),-norm);
	// PUPPImetcorrphi.at(1).Add(&PUPPImetcorrphiQCDMC.at(i),-norm);
	// Tau1PT.at(1).Add(&Tau1PTQCDMC.at(i),-norm);
	// Tau1E.at(1).Add(&Tau1EQCDMC.at(i),-norm);
	// Tau1Mass.at(1).Add(&Tau1MassQCDMC.at(i),-norm);
	// Tau1Phi.at(1).Add(&Tau1PhiQCDMC.at(i),-norm);
	// Tau1Eta.at(1).Add(&Tau1EtaQCDMC.at(i),-norm);
	// Tau1dz.at(1).Add(&Tau1dzQCDMC.at(i),-norm);
	// Tau1HPSDecayMode.at(1).Add(&Tau1HPSDecayModeQCDMC.at(i),-norm);
	// Tau1MVADecayMode.at(1).Add(&Tau1MVADecayModeQCDMC.at(i),-norm);
	// //	Tau1GenMatch.at(1).Add(&Tau1GenMatchQCDMC.at(i),-norm);
	// Tau2PT.at(1).Add(&Tau2PTQCDMC.at(i),-norm);
	// Tau2E.at(1).Add(&Tau2EQCDMC.at(i),-norm);
	// Tau2Mass.at(1).Add(&Tau2MassQCDMC.at(i),-norm);
	// Tau2Phi.at(1).Add(&Tau2PhiQCDMC.at(i),-norm);
	// Tau2Eta.at(1).Add(&Tau2EtaQCDMC.at(i),-norm);
	// Tau2dz.at(1).Add(&Tau2dzQCDMC.at(i),-norm);
	// Tau2HPSDecayMode.at(1).Add(&Tau2HPSDecayModeQCDMC.at(i),-norm);
	// Tau2MVADecayMode.at(1).Add(&Tau2MVADecayModeQCDMC.at(i),-norm);
	// //	Tau2GenMatch.at(1).Add(&Tau2GenMatchQCDMC.at(i),-norm);
	// NbJets.at(1).Add(&NbJetsQCDMC.at(i),-norm);
	// TauTauVisMass.at(1).Add(&TauTauVisMassQCDMC.at(i),-norm);
	// TauTauFullMass.at(1).Add(&TauTauFullMassQCDMC.at(i),-norm);
	// TauTauVisPT.at(1).Add(&TauTauVisPTQCDMC.at(i),-norm);
	// TauTauFullPT.at(1).Add(&TauTauFullPTQCDMC.at(i),-norm);
	// Mjj.at(1).Add(&MjjQCDMC.at(i),-norm);
	// dijetpt.at(1).Add(&dijetptQCDMC.at(i),-norm);
	// dijetphi.at(1).Add(&dijetphiQCDMC.at(i),-norm);
	// jdeta.at(1).Add(&jdetaQCDMC.at(i),-norm);
	// jdphi.at(1).Add(&jdphiQCDMC.at(i),-norm);
	// jpt_2.at(1).Add(&jpt_2QCDMC.at(i),-norm);
	// jeta_2.at(1).Add(&jeta_2QCDMC.at(i),-norm);
	// jphi_2.at(1).Add(&jphi_2QCDMC.at(i),-norm);
	// jpt_1.at(1).Add(&jpt_1QCDMC.at(i),-norm);
	// jeta_1.at(1).Add(&jeta_1QCDMC.at(i),-norm);
	// jphi_1.at(1).Add(&jphi_1QCDMC.at(i),-norm);
	
	// HiggsBDTScore.at(1).Add(&HiggsBDTScoreQCDMC.at(i),-norm);
	// JetFakesBDTScore.at(1).Add(&JetFakesBDTScoreQCDMC.at(i),-norm);
	// ZTTBDTScore.at(1).Add(&ZTTBDTScoreQCDMC.at(i),-norm);
	
	

	//polarimetricAcopAngleMVADM.at(1).Add(&polarimetricAcopAngleMVADMQCDMC.at(i),-norm);
	//polarimetricAcopAnglePVRefitBSMVADM.at(1).Add(&polarimetricAcopAnglePVRefitBSMVADMQCDMC.at(i),-norm);
	//polarimetricAcopAnglePVRefitBSZNominalMVADM.at(1).Add(&polarimetricAcopAnglePVRefitBSZNominalMVADMQCDMC.at(i),-norm);
	//polarimetricAcopAnglePVRefitWithTracksBSMVADM.at(1).Add(&polarimetricAcopAnglePVRefitWithTracksBSMVADMQCDMC.at(i),-norm);
	//polarimetricAcopAnglePVRefitWithTracksBSZNominalMVADM.at(1).Add(&polarimetricAcopAnglePVRefitWithTracksBSZNominalMVADMQCDMC.at(i),-norm);

	//polarimetricAcopAngleMVADMHiggs.at(1).Add(&polarimetricAcopAngleMVADMHiggsQCDMC.at(i),-norm);
	//polarimetricAcopAnglePVRefitBSMVADMHiggs.at(1).Add(&polarimetricAcopAnglePVRefitBSMVADMHiggsQCDMC.at(i),-norm);
	//polarimetricAcopAnglePVRefitBSZNominalMVADMHiggs.at(1).Add(&polarimetricAcopAnglePVRefitBSZNominalMVADMHiggsQCDMC.at(i),-norm);
	polarimetricAcopAnglePVRefitWithTracksBSMVADMHiggs.at(1).Add(&polarimetricAcopAnglePVRefitWithTracksBSMVADMHiggsQCDMC.at(i),-norm);
	//polarimetricAcopAnglePVRefitWithTracksBSZNominalMVADMHiggs.at(1).Add(&polarimetricAcopAnglePVRefitWithTracksBSZNominalMVADMHiggsQCDMC.at(i),-norm);

	//polarimetricAcopAngleMVADMJetFakes.at(1).Add(&polarimetricAcopAngleMVADMJetFakesQCDMC.at(i),-norm);
	//polarimetricAcopAnglePVRefitBSMVADMJetFakes.at(1).Add(&polarimetricAcopAnglePVRefitBSMVADMJetFakesQCDMC.at(i),-norm);
	//polarimetricAcopAnglePVRefitBSZNominalMVADMJetFakes.at(1).Add(&polarimetricAcopAnglePVRefitBSZNominalMVADMJetFakesQCDMC.at(i),-norm);
	polarimetricAcopAnglePVRefitWithTracksBSMVADMJetFakes.at(1).Add(&polarimetricAcopAnglePVRefitWithTracksBSMVADMJetFakesQCDMC.at(i),-norm);
	//polarimetricAcopAnglePVRefitWithTracksBSZNominalMVADMJetFakes.at(1).Add(&polarimetricAcopAnglePVRefitWithTracksBSZNominalMVADMJetFakesQCDMC.at(i),-norm);

	//polarimetricAcopAngleMVADMZTT.at(1).Add(&polarimetricAcopAngleMVADMZTTQCDMC.at(i),-norm);
	//polarimetricAcopAnglePVRefitBSMVADMZTT.at(1).Add(&polarimetricAcopAnglePVRefitBSMVADMZTTQCDMC.at(i),-norm);
	//polarimetricAcopAnglePVRefitBSZNominalMVADMZTT.at(1).Add(&polarimetricAcopAnglePVRefitBSZNominalMVADMZTTQCDMC.at(i),-norm);
	polarimetricAcopAnglePVRefitWithTracksBSMVADMZTT.at(1).Add(&polarimetricAcopAnglePVRefitWithTracksBSMVADMZTTQCDMC.at(i),-norm);
	//polarimetricAcopAnglePVRefitWithTracksBSZNominalMVADMZTT.at(1).Add(&polarimetricAcopAnglePVRefitWithTracksBSZNominalMVADMZTTQCDMC.at(i),-norm);
	  
	
	// PUPPImetcorra1a1.at(1).Add(&PUPPImetcorra1a1QCDMC.at(i),-norm);
	// PUPPImetcorrphia1a1.at(1).Add(&PUPPImetcorrphia1a1QCDMC.at(i),-norm);
	// Tau1PTa1a1.at(1).Add(&Tau1PTa1a1QCDMC.at(i),-norm);
	// Tau1Ea1a1.at(1).Add(&Tau1Ea1a1QCDMC.at(i),-norm);
	// Tau1Massa1a1.at(1).Add(&Tau1Massa1a1QCDMC.at(i),-norm);
	// Tau1Phia1a1.at(1).Add(&Tau1Phia1a1QCDMC.at(i),-norm);
	// Tau1Etaa1a1.at(1).Add(&Tau1Etaa1a1QCDMC.at(i),-norm);
	// Tau1dza1a1.at(1).Add(&Tau1dza1a1QCDMC.at(i),-norm);
	
	// Tau2PTa1a1.at(1).Add(&Tau2PTa1a1QCDMC.at(i),-norm);
	// Tau2Ea1a1.at(1).Add(&Tau2Ea1a1QCDMC.at(i),-norm);
	// Tau2Massa1a1.at(1).Add(&Tau2Massa1a1QCDMC.at(i),-norm);
	// Tau2Phia1a1.at(1).Add(&Tau2Phia1a1QCDMC.at(i),-norm);
	// Tau2Etaa1a1.at(1).Add(&Tau2Etaa1a1QCDMC.at(i),-norm);
	// Tau2dza1a1.at(1).Add(&Tau2dza1a1QCDMC.at(i),-norm);

	// NbJetsa1a1.at(1).Add(&NbJetsa1a1QCDMC.at(i),-norm);
	// TauTauVisMassa1a1.at(1).Add(&TauTauVisMassa1a1QCDMC.at(i),-norm);
	// TauTauFullMassa1a1.at(1).Add(&TauTauFullMassa1a1QCDMC.at(i),-norm);
	// TauTauVisPTa1a1.at(1).Add(&TauTauVisPTa1a1QCDMC.at(i),-norm);
	// TauTauFullPTa1a1.at(1).Add(&TauTauFullPTa1a1QCDMC.at(i),-norm);
	// Mjja1a1.at(1).Add(&Mjja1a1QCDMC.at(i),-norm);
	// dijetpta1a1.at(1).Add(&dijetpta1a1QCDMC.at(i),-norm);
	// dijetphia1a1.at(1).Add(&dijetphia1a1QCDMC.at(i),-norm);
	// jdetaa1a1.at(1).Add(&jdetaa1a1QCDMC.at(i),-norm);
	// jdphia1a1.at(1).Add(&jdphia1a1QCDMC.at(i),-norm);
	// jpt_2a1a1.at(1).Add(&jpt_2a1a1QCDMC.at(i),-norm);
	// jeta_2a1a1.at(1).Add(&jeta_2a1a1QCDMC.at(i),-norm);
	// jphi_2a1a1.at(1).Add(&jphi_2a1a1QCDMC.at(i),-norm);
	// jpt_1a1a1.at(1).Add(&jpt_1a1a1QCDMC.at(i),-norm);
	// jeta_1a1a1.at(1).Add(&jeta_1a1a1QCDMC.at(i),-norm);
	// jphi_1a1a1.at(1).Add(&jphi_1a1a1QCDMC.at(i),-norm);
	
	HiggsBDTScorea1a1.at(1).Add(&HiggsBDTScorea1a1QCDMC.at(i),-norm);
	JetFakesBDTScorea1a1.at(1).Add(&JetFakesBDTScorea1a1QCDMC.at(i),-norm);
	ZTTBDTScorea1a1.at(1).Add(&ZTTBDTScorea1a1QCDMC.at(i),-norm);


	polarimetricAcopAnglePVRefitWithTracksBSMVADMHiggsUnrolled.at(1).Add(&polarimetricAcopAnglePVRefitWithTracksBSMVADMHiggsUnrolledQCDMC.at(i),-norm);
	//polarimetricAcopAnglePVRefitWithTracksBSMVADMHiggsUnrolled.at(1).Add(&polarimetricAcopAnglePVRefitWithTracksBSMVADMHiggsUnrolledQCDMC.at(i),-norm);
	//polarimetricAcopAnglePVRefitWithTracksBSMVADMHiggsUnrolled.at(1).Add(&polarimetricAcopAnglePVRefitWithTracksBSMVADMHiggsUnrolledQCDMC.at(i),-norm);
	//polarimetricAcopAnglePVRefitWithTracksBSMVADMHiggsUnrolled.at(1).Add(&polarimetricAcopAnglePVRefitWithTracksBSMVADMHiggsUnrolledQCDMC.at(i),-norm);

	polarimetricAcopAnglePVRefitWithTracksBSMVADMJetFakesUnrolled.at(1).Add(&polarimetricAcopAnglePVRefitWithTracksBSMVADMJetFakesUnrolledQCDMC.at(i),-norm);
	//polarimetricAcopAnglePVRefitWithTracksBSMVADMJetFakesUnrolled.at(1).Add(&polarimetricAcopAnglePVRefitWithTracksBSMVADMJetFakesUnrolledQCDMC.at(i),-norm);
	//polarimetricAcopAnglePVRefitWithTracksBSMVADMJetFakesUnrolled.at(1).Add(&polarimetricAcopAnglePVRefitWithTracksBSMVADMJetFakesUnrolledQCDMC.at(i),-norm);
	//polarimetricAcopAnglePVRefitWithTracksBSMVADMJetFakesUnrolled.at(1).Add(&polarimetricAcopAnglePVRefitWithTracksBSMVADMJetFakesUnrolledQCDMC.at(i),-norm);

	polarimetricAcopAnglePVRefitWithTracksBSMVADMZTTUnrolled.at(1).Add(&polarimetricAcopAnglePVRefitWithTracksBSMVADMZTTUnrolledQCDMC.at(i),-norm);
	//polarimetricAcopAnglePVRefitWithTracksBSMVADMZTTUnrolled.at(1).Add(&polarimetricAcopAnglePVRefitWithTracksBSMVADMZTTUnrolledQCDMC.at(i),-norm);
	//polarimetricAcopAnglePVRefitWithTracksBSMVADMZTTUnrolled.at(1).Add(&polarimetricAcopAnglePVRefitWithTracksBSMVADMZTTUnrolledQCDMC.at(i),-norm);
	//polarimetricAcopAnglePVRefitWithTracksBSMVADMZTTUnrolled.at(1).Add(&polarimetricAcopAnglePVRefitWithTracksBSMVADMZTTUnrolledQCDMC.at(i),-norm);
      }
    }
  }
  Selection::Finish();
}
